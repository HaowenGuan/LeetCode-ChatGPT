{"3000": [[false, "When inputs = 2\n2 3, output = [{'3'}], but correct output = [{'5'}]"]], "3001": [[false, "When inputs = 29998, output = [{'4'}], but correct output = [{'5'}]"]], "3002": [[-1, "Call-based runtime error or time limit exceeded error = ValueError('not enough values to unpack (expected 3, got 2)')not enough values to unpack (expected 3, got 2)"]], "3003": [[false, "When inputs = 4\n1 2\n0 2 3\n0 1\n1, output = [{'2'}], but correct output = [{'3'}]"]], "3004": [[false, "When inputs = 4\nBLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000, output = [{'4'}], but correct output = [{'IMPOSSIBLE'}]"]], "3005": [[false, "When inputs = PRATTATTATTIC, output = [{'9'}], but correct output = [{'6'}]"]], "3006": [[false, "When inputs = D 2\nD 1\nE\nD 1\nD 2\nE, output = [{'0'}], but correct output = [{'1'}]"]], "3007": [[false, "When inputs = 4 0 1 0 0 0, output = [{'100'}], but correct output = [{'300'}]"]], "3008": [[false, "When inputs = 2 10\n1 12\n13 1, output = [{'2'}], but correct output = [{'1'}]"]], "3009": [[-1, "Call-based runtime error or time limit exceeded error = EOFError('EOF when reading a line')EOF when reading a line"]], "3010": [[false, "When inputs = 3\n1 3 9 5\n2 2 6 8\n4 8 9 3, output = [{'0'}], but correct output = [{'3'}]"]], "3011": [[false, "When inputs = 10, output = [{'-1'}], but correct output = [{'10'}]"]], "3012": [[-2, "type 1 compilation error = cannot assign to operator (<string>, line 19)"]], "3013": [[false, "When inputs = 0.5 -5.301 3.098, output = [{'5.88944774', '-1.73568727'}], but correct output = [{'3.88425357', '-1.26167861'}]"]], "3014": [[false, "When inputs = 2 2\n1 2\n2 1, output = [{'0'}], but correct output = [{'1'}, {'2'}]"]], "3015": [[false, "When inputs = 4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3, output = [{'4'}], but correct output = [{'11'}]"]], "3016": [[false, "When inputs = 3 3 1 1\n1 1\n2 2 3, output = [{'4'}], but correct output = [{'0'}]"]], "3017": [[-1, "Call-based runtime error or time limit exceeded error = TimeoutException()"]], "3018": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3019": [[-2, "type 1 compilation error = cannot import name 'cache' from 'functools' (/Users/fengying/opt/anaconda3/lib/python3.8/functools.py)"]], "3020": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"unsupported operand type(s) for ** or pow(): 'str' and 'float'\")unsupported operand type(s) for ** or pow(): 'str' and 'float'"]], "3021": [[false, "When inputs = d 4\ncab\ncda\nccc\nbadca, output = [{'zyxwvutsrqponmlkjihgfedcba'}], but correct output = [{'adcb'}]"]], "3022": [[false, "When inputs = 2 3 3 3, output = [{'0'}], but correct output = [{'9'}]"]], "3023": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"'NoneType' object is not callable\")'NoneType' object is not callable"]], "3024": [[false, "When inputs = 652526, output = [{'2'}], but correct output = [{'4'}]"]], "3025": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3026": [[false, "When inputs = 4\n1 3 2 4, output = [{'2', '4', '3', '1'}], but correct output = [{'4', '1'}]"]], "3027": [[false, "When inputs = 4 8\n..#..#..\n.######.\n.######.\n..#..#.., output = [{'inf'}], but correct output = [{'8'}]"]], "3028": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"'list' object cannot be interpreted as an integer\")'list' object cannot be interpreted as an integer"]], "3029": [[-1, "Call-based runtime error or time limit exceeded error = NameError(\"name 'longest' is not defined\")name 'longest' is not defined"]], "3030": [[-1, "Call-based runtime error or time limit exceeded error = NameError(\"name 'ans' is not defined\")name 'ans' is not defined"]], "3031": [[false, "When inputs = 8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2, output = [{'12'}, {'1'}, {'1'}, {'1'}, {'2'}, {'2'}, {'2'}, {'7'}, {'7'}, {'7'}, {'8'}, {'8'}, {'8'}], but correct output = [{'4'}, {'3'}, {'4'}, {'5'}, {'6'}]"]], "3032": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3033": [[false, "When inputs = 10000 5810859769934419200, output = [{'impossible'}], but correct output = [{'5989840988999909996'}]"]], "3034": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"'float' object cannot be interpreted as an integer\")'float' object cannot be interpreted as an integer"]], "3035": [[-1, "Call-based runtime error or time limit exceeded error = TypeError('list indices must be integers or slices, not str')list indices must be integers or slices, not str"]], "3036": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3037": [[false, "When inputs = 6 8 5\n........\n...#....\n########\n#..#...#\n#..#####\n#.......\nup 3\nright 7\ndown 2\nleft 4\nup 3, output = [{'1'}], but correct output = [{'20'}]"]], "3038": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3039": [[false, "When inputs = ......\n#.....\n####..\n#.....\n......\n......, output = [{'cannot', 'fold'}], but correct output = [{'can', 'fold'}]"]], "3040": [[true, ""]], "3041": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3042": [[false, "When inputs = 7\n2 3 4 4 8 12 24, output = [{'0'}], but correct output = [{'2'}]"]], "3043": [[false, "When inputs = 2 5 4\nS#.F.\n.MFMG, output = [{'-1'}], but correct output = [{'3'}]"]], "3044": [[false, "When inputs = 3 7\n.......\n.G.#.S.\n.......\nLDLDLLDR, output = [{'3'}], but correct output = [{'1'}]"]], "3045": [[-1, "Call-based runtime error or time limit exceeded error = TimeoutException()"]], "3046": [[false, "When inputs = 2\n4 7\n9 8\n14 17\n19 18, output = [{'1'}, {'1'}], but correct output = [{'2'}, {'1'}]"]], "3047": [[-1, "Call-based runtime error or time limit exceeded error = TimeoutException()"]], "3048": [[false, "When inputs = 3\n1 2\n1 3, output = [{'1'}], but correct output = [{'2'}]"]], "3049": [[false, "When inputs = secretmessage\nboot, output = [{'0'}], but correct output = [{'essa'}]"]], "3050": [[-1, "Call-based runtime error or time limit exceeded error = ValueError('(1, 2, 0) is not in list')(1, 2, 0) is not in list"]], "3051": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"object of type 'PriorityQueue' has no len()\")object of type 'PriorityQueue' has no len()"]], "3052": [[false, "When inputs = 60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0, output = [{'180.0'}], but correct output = [{'168.7916512460'}]"]], "3053": [[false, "When inputs = 6 5 3, output = [{'IMPOSSIBLE'}], but correct output = [{'rarity'}]"]], "3054": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3055": [[false, "When inputs = 2\nThoreTiemann\nThoreHusfeldt, output = [{'sucks', 'Thore'}], but correct output = [{'ThoreH'}]"]], "3056": [[false, "When inputs = P*P, output = [{'174'}], but correct output = [{'6'}]"]], "3057": [[false, "When inputs = 2\nmoo not foo\noo is blah, output = [{'yes'}], but correct output = [{'what?', 'wait'}]"]], "3058": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"'NoneType' object is not callable\")'NoneType' object is not callable"]], "3059": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3060": [[-1, "Call-based runtime error or time limit exceeded error = Exception('Loop should not terminate')Loop should not terminate"]], "3061": [[false, "When inputs = 4 4\n1 2\n1 3\n3 4\n2 4, output = [], but correct output = [{'2'}]"]], "3062": [[false, "When inputs = -10 10\n10.00 1.00, output = [{'5.34120438'}], but correct output = [{'3.14159265'}]"]], "3063": [[false, "When inputs = 4\n2 100\n1 100\n4 70\n3 70, output = [{'0'}], but correct output = [{'170'}]"]], "3064": [[false, "When inputs = 4 3\n1 2\n1 3\n2 4, output = [{'4'}], but correct output = [{'2'}]"]], "3065": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list assignment index out of range')list assignment index out of range"]], "3066": [[false, "When inputs = 6\n1 2 3 3 2 1, output = [{'IMPOSSIBLE'}], but correct output = [{'3'}, {'6', '1'}, {'5', '2'}, {'4', '3'}]"]], "3067": [[true, ""]], "3068": [[-1, "Call-based runtime error or time limit exceeded error = ValueError('not enough values to unpack (expected 4, got 3)')not enough values to unpack (expected 4, got 3)"]], "3069": [[false, "When inputs = ())), output = [{'impossible'}], but correct output = [{'possible'}]"]], "3070": [[false, "When inputs = 2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400, output = [{'impossible'}], but correct output = [{'1800'}]"]], "3071": [[false, "When inputs = 3 2, output = [{'A1-B1', 'A3-B3', 'A2-B2'}], but correct output = [{'A1-B2', 'B1-A2', 'A3-B3'}, {'A1-B1', 'B2-A3', 'A2-B3'}, {'A3-B1', 'A2-B2', 'B3-A1'}]"]], "3072": [[false, "When inputs = 2 2\n..\n.., output = [{'8'}], but correct output = [{'7'}]"]], "3073": [[false, "When inputs = 2\n3 3 2 2 100\n1 1 1 1 500, output = [{'-1'}], but correct output = [{'600'}]"]], "3074": [[false, "When inputs = 3\n361, output = [{'10'}], but correct output = [{'3'}]"]], "3075": [[false, "When inputs = 3 10\n2 100\n1 10\n11 5, output = [{'-0'}], but correct output = [{'10'}]"]], "3076": [[false, "When inputs = 4 9\n2 8\n1 1\n3 4\n5 100, output = [{'635', '54', '18', '0', '2352', '1', '1368', '3560', '108'}], but correct output = [{'101', '109', '108', '8', '1', '9', '100'}]"]], "3077": [[-1, "Call-based runtime error or time limit exceeded error = TimeoutException()"]], "3078": [[false, "When inputs = 5 10000\n1\n1\n1\n1\n1, output = [{'0'}, {'1'}, {'2'}, {'2'}, {'1'}], but correct output = [{'4'}, {'4'}, {'2'}, {'2'}, {'0'}]"]], "3079": [[false, "When inputs = 2\nne, output = [{'NE'}], but correct output = [{'NE'}, {'n'}]"]], "3080": [[false, "When inputs = 4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2, output = [{'0'}, {'0'}, {'0'}, {'0'}], but correct output = [{'2'}, {'0'}, {'2'}, {'1'}]"]], "3081": [[false, "When inputs = 2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1, output = [{'3'}], but correct output = [{'2'}]"]], "3082": [[false, "When inputs = 2 15\nD 4 10 1\nC 6 1, output = [{'9.0'}], but correct output = [{'40.500000000'}]"]], "3083": [[-2, "type 1 compilation error = closing parenthesis ']' does not match opening parenthesis '(' (<string>, line 45)"]], "3084": [[-1, "Call-based runtime error or time limit exceeded error = ValueError(\"invalid literal for int() with base 10: ':00'\")invalid literal for int() with base 10: ':00'"]], "3085": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"unhashable type: 'slice'\")unhashable type: 'slice'"]], "3086": [[-1, "Call-based runtime error or time limit exceeded error = NameError(\"name 'days_in_month' is not defined\")name 'days_in_month' is not defined"]], "3087": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"'NoneType' object is not callable\")'NoneType' object is not callable"]], "3088": [[false, "When inputs = 210 1, output = [{'210'}], but correct output = [{'201'}]"]], "3089": [[-1, "Call-based runtime error or time limit exceeded error = NameError(\"name 'area' is not defined\")name 'area' is not defined"]], "3090": [[false, "When inputs = 2 3 4\n10 1 3\n0 1 20, output = [{'0'}], but correct output = [{'9'}]"]], "3091": [[-1, "Call-based runtime error or time limit exceeded error = ValueError('too many values to unpack (expected 2)')too many values to unpack (expected 2)"]], "3092": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3093": [[false, "When inputs = 2 3\n2 1, output = [{'9'}], but correct output = [{'6'}]"]], "3094": [[false, "When inputs = 2\n1 2, output = [{'250000002'}], but correct output = [{'2'}]"]], "3095": [[false, "When inputs = 3 3\n1 3 1\n2 1 2\n1 1 1, output = [{'9'}], but correct output = [{'4'}]"]], "3096": [[false, "When inputs = 4\n2 1 3 4\n1 2\n1 3\n3 4, output = [{'8'}], but correct output = [{'6'}]"]], "3097": [[false, "When inputs = 1\n1 1000000000, output = [{'146718'}], but correct output = [{'1863025563'}]"]], "3098": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"'int' object is not subscriptable\")'int' object is not subscriptable"]], "3099": [[false, "When inputs = 4 0 4\n0 2\n0 1\n2 1\n2 3, output = [{'0'}], but correct output = [{'1'}]"]], "3100": [[false, "When inputs = 2 2 2, output = [{'1728'}], but correct output = [{'30'}]"]], "3101": [[false, "When inputs = 3\n2020 2020 2020, output = [{'2020'}], but correct output = [{'2020', '2021'}]"]], "3102": [[false, "When inputs = 30 70, output = [{'33'}], but correct output = [{'11'}]"]], "3103": [[false, "When inputs = 2 2 0\n>@\n>~, output = [{'1'}], but correct output = [{'2'}]"]], "3104": [[-1, "Call-based runtime error or time limit exceeded error = ValueError(\"invalid literal for int() with base 10: ''\")invalid literal for int() with base 10: ''"]], "3105": [[false, "When inputs = 8\n1\n3\n2\n4\n1\n5\n2\n4, output = [{'1'}], but correct output = [{'1', '2'}]"]], "3106": [[false, "When inputs = 1101, output = [], but correct output = [{'1'}]"]], "3107": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"'int' object is not subscriptable\")'int' object is not subscriptable"]], "3108": [[false, "When inputs = 4 1\n1 2 3 4, output = [{'6.000000'}], but correct output = [{'4.000000'}]"]], "3109": [[false, "When inputs = 2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0, output = [{'0.25'}], but correct output = [{'0.750'}]"]], "3110": [[false, "When inputs = 3 3\n1 2 4\n0 3 6\n4 0 3, output = [{'off', 'alarm', 'went'}], but correct output = [{'2'}]"]], "3111": [[true, ""]], "3112": [[-1, "Call-based runtime error or time limit exceeded error = TimeoutException()"]], "3113": [[false, "When inputs = 1\n2 0 2 4 4 2\n2\n2 0 2 2 4 2\n2 2 4 2 2 4, output = [{'no'}], but correct output = [{'yes'}]"]], "3114": [[false, "When inputs = 3 3\n1 2\n2 3\n1 3, output = [{'NO'}], but correct output = [{'YES'}, {'1', '3'}, {'1', '2'}, {'3', '2'}]"]], "3115": [[false, "When inputs = 5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4, output = [{'inconsistent'}], but correct output = [{'consistent'}]"]], "3116": [[-2, "type 1 compilation error = invalid syntax (<string>, line 19)"]], "3117": [[false, "When inputs = 18\ntrutrutiktiktappop, output = [{'3'}], but correct output = [{'4'}]"]], "3118": [[false, "When inputs = 3\n2 3 1\n3 1 2, output = [{'1'}], but correct output = [{'2'}]"]], "3119": [[false, "When inputs = 6 1\n0 10 20 26 40 50\n0 40, output = [{'10'}], but correct output = [{'9'}]"]], "3120": [[-1, "Call-based runtime error or time limit exceeded error = TimeoutException()"]], "3121": [[false, "When inputs = 1 3\n3 2\n1 2 1 2\n2 3 1 2, output = [{'7'}], but correct output = [{'1'}]"]], "3122": [[false, "When inputs = 4 4\n1 2 2\n2 3 1\n3 4 1\n4 1 2, output = [{'impossible'}], but correct output = [{'3'}]"]], "3123": [[false, "When inputs = 5\n2 1 1 1 3, output = [{'no', 'quotation'}], but correct output = [{'2'}]"]], "3124": [[false, "When inputs = 4\n1 2 3 4, output = [{'0'}], but correct output = [{'2'}]"]], "3125": [[false, "When inputs = a+b-c\na-b+d-c, output = [{'corrupted'}], but correct output = [{'-', '+d-'}]"]], "3126": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3127": [[false, "When inputs = 7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1, output = [{'3'}, {'4', '2', '6'}], but correct output = [{'2'}, {'4', '6'}]"]], "3128": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list assignment index out of range')list assignment index out of range"]], "3129": [[false, "When inputs = CPCC, output = [{'2'}], but correct output = [{'1'}]"]], "3130": [[-1, "Call-based runtime error or time limit exceeded error = ValueError(\"invalid literal for int() with base 10: '1 2'\")invalid literal for int() with base 10: '1 2'"]], "3131": [[-2, "type 1 compilation error = invalid syntax (<string>, line 19)"]], "3132": [[false, "When inputs = 3 3\nxx.\nxxx\n..., output = [{'2', '1'}, {'1'}], but correct output = [{'2', '1'}, {'3', '2', '1'}]"]], "3133": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3134": [[false, "When inputs = 0110\n1001, output = [{'1'}, {'0'}, {'0'}, {'1'}], but correct output = [{'1111'}, {'0111'}, {'1110'}, {'1111'}]"]], "3135": [[false, "When inputs = 1111, output = [{'++++'}], but correct output = [{'+000-'}]"]], "3136": [[-1, "Call-based runtime error or time limit exceeded error = KeyError(7)7"]], "3137": [[false, "When inputs = 3 3 1\n2 2\n1 1 R\n010\n000\n000, output = [{'-1'}], but correct output = [{'2'}]"]], "3138": [[false, "When inputs = 5\n2 2 1 2 3, output = [{'7'}], but correct output = [{'2'}]"]], "3139": [[false, "When inputs = 6\nD 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3, output = [{'1'}, {'2'}, {'3'}], but correct output = [{'NE'}, {'NE'}, {'NE'}]"]], "3140": [[false, "When inputs = 2 2 1 10\n0 0\n1 4\n3 2, output = [{'3'}], but correct output = [{'2'}]"]], "3141": [[-1, "Call-based runtime error or time limit exceeded error = EOFError('EOF when reading a line')EOF when reading a line"]], "3142": [[true, ""]], "3143": [[false, "When inputs = 1 1\n1\n1, output = [{'0'}], but correct output = [{'1'}, {'1'}]"]], "3144": [[false, "When inputs = 2 10 3 2, output = [{'9'}], but correct output = [{'4'}]"]], "3145": [[-1, "Call-based runtime error or time limit exceeded error = TimeoutException()"]], "3146": [[-1, "Call-based runtime error or time limit exceeded error = ZeroDivisionError('division by zero')division by zero"]], "3147": [[true, ""]], "3148": [[false, "When inputs = 5\n0 0\n0 1\n1 0\n0 -1\n-1 0, output = [{'0'}, {'0'}], but correct output = [{'-1', '-3'}, {'3', '1'}]"]], "3149": [[false, "When inputs = 3 6 5 45 20\n0 0\n2 0\n1 1.5, output = [{'0.000000', '1'}], but correct output = [{'5.086781', '2'}]"]], "3150": [[false, "When inputs = 6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1, output = [{'0'}], but correct output = [{'8'}]"]], "3151": [[true, ""]], "3152": [[true, ""]], "3153": [[false, "When inputs = 2 3\n5 1\n1 2\n1 2\n1 2, output = [{'18'}, {'1', '2'}, {'1', '2'}, {'1', '2'}, {'1', '2'}, {'1', '2'}, {'1', '2'}, {'1', '2'}, {'1', '2'}, {'1', '2'}, {'1', '2'}, {'1', '2'}, {'1', '2'}, {'1', '2'}, {'1', '2'}, {'1', '2'}, {'1', '2'}, {'1', '2'}, {'1', '2'}], but correct output = [{'3'}, {'1', '2'}, {'1', '2'}, {'1', '2'}]"]], "3154": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"'tuple' object does not support item assignment\")'tuple' object does not support item assignment"]], "3155": [[false, "When inputs = 10, output = [{'4'}], but correct output = [{'5', '2'}]"]], "3156": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"'NoneType' object is not callable\")'NoneType' object is not callable"]], "3157": [[false, "When inputs = 1 0 10, output = [{'1'}], but correct output = [{'0'}]"]], "3158": [[-1, "Call-based runtime error or time limit exceeded error = NameError(\"name 'atan2' is not defined\")name 'atan2' is not defined"]], "3159": [[false, "When inputs = 8 20\n apples are great!  \n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!, output = [{'apples', 'are', 'great!'}, {'++++++++++++++++++++'}, {'oranges', 'are', '+'}, {'way', 'better!', '+'}, {'#oranges>apples', '+'}, {'++'}, {'our', 'check', 'out'}, {'apples!', 'fresh'}], but correct output = [{'apples', 'are', 'great!'}, set(), set(), set(), set(), set(), {'our', 'check', 'out'}, {'apples!', 'fresh'}]"]], "3160": [[false, "When inputs = HH, output = [{'1'}], but correct output = [{'2.0'}]"]], "3161": [[-1, "Call-based runtime error or time limit exceeded error = TypeError('can only concatenate str (not \"tuple\") to str')can only concatenate str (not \"tuple\") to str"]], "3162": [[false, "When inputs = 4\nh 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3, output = [{'0'}], but correct output = [{'2'}]"]], "3163": [[-1, "Call-based runtime error or time limit exceeded error = ValueError('list.remove(x): x not in list')list.remove(x): x not in list"]], "3164": [[false, "When inputs = 6\n1 2 3 3 4 2, output = [{'0'}], but correct output = [{'2'}]"]], "3165": [[false, "When inputs = 2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2, output = [{'0'}, {'2'}, {'0'}], but correct output = [{'4'}, {'0'}]"]], "3166": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"'NoneType' object is not callable\")'NoneType' object is not callable"]], "3167": [[-1, "Call-based runtime error or time limit exceeded error = ValueError(\"invalid literal for int() with base 10: '1 1 2 1'\")invalid literal for int() with base 10: '1 1 2 1'"]], "3168": [[false, "When inputs = 5\n3\n2\n4\n1\n5, output = [{'0'}, {'0'}, {'2'}, {'2'}, {'6'}], but correct output = [{'0'}, {'1'}, {'2'}, {'4'}, {'6'}]"]], "3169": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('pop from empty list')pop from empty list"]], "3170": [[-1, "Call-based runtime error or time limit exceeded error = AttributeError(\"'str' object has no attribute 'pop'\")'str' object has no attribute 'pop'"]], "3171": [[false, "When inputs = 2 1\n1 and fabulist 1 fabulist 2, output = [{'charlatan'}, {'charlatan'}], but correct output = [{'fabulist'}, {'truther'}]"]], "3172": [[false, "When inputs = 5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00, output = [{'3'}], but correct output = [{'4'}]"]], "3173": [[-1, "Call-based runtime error or time limit exceeded error = AssertionError()"]], "3174": [[-1, "Call-based runtime error or time limit exceeded error = NameError(\"name 'd' is not defined\")name 'd' is not defined"]], "3175": [[false, "When inputs = 4 1 1 1 1, output = [{'1.414'}], but correct output = [{'1.0'}]"]], "3176": [[-1, "Call-based runtime error or time limit exceeded error = TypeError('list indices must be integers or slices, not NoneType')list indices must be integers or slices, not NoneType"]], "3177": [[false, "When inputs = 2 1\n2 1\n1 2, output = [{'0'}], but correct output = [{'1'}]"]], "3178": [[false, "When inputs = 5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5, output = [{'1'}], but correct output = [{'-1'}]"]], "3179": [[false, "When inputs = 4 1\n1 1\n5 1\n5 5\n4 2, output = [{'1.42'}], but correct output = [{'4.00'}]"]], "3180": [[false, "When inputs = 4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3, output = [{'2', '-3'}, {'2', '-3'}, {'2', '-3'}, {'2', '-3'}], but correct output = [{'3', '1', '2'}, {'1', '2'}, {'3', '1', '2'}, {'1', '2'}]"]], "3181": [[false, "When inputs = 4 3, output = [{'-1'}], but correct output = [{'4', '1', '3', '2'}]"]], "3182": [[true, ""]], "3183": [[false, "When inputs = 4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10, output = [], but correct output = [{'140', '4'}]"]], "3184": [[false, "When inputs = 100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20, output = [{'1'}], but correct output = [{'3'}]"]], "3185": [[false, "When inputs = 120, output = [{'1'}], but correct output = [{'5'}]"]], "3186": [[false, "When inputs = 10 1 2, output = [{'277179'}], but correct output = [{'45'}]"]], "3187": [[false, "When inputs = 5\n3 1\n4 1\n5 9\n2 6\n5 3\n10, output = [{'impossible'}], but correct output = [{'18'}]"]], "3188": [[false, "When inputs = 2\n1 5 10\n7 8 2, output = [], but correct output = [{'3'}]"]], "3189": [[false, "When inputs = 3 1\n110\n011, output = [{'1'}], but correct output = [{'2'}]"]], "3190": [[-1, "Call-based runtime error or time limit exceeded error = ZeroDivisionError('division by zero')division by zero"]], "3191": [[false, "When inputs = 1 100 20, output = [{'4'}], but correct output = [{'0'}]"]], "3192": [[-1, "Call-based runtime error or time limit exceeded error = ValueError(\"invalid literal for int() with base 10: 'c'\")invalid literal for int() with base 10: 'c'"]], "3193": [[-2, "type 1 compilation error = invalid syntax (<string>, line 17)"]], "3194": [[false, "When inputs = 2 10\n0 15\n5 20, output = [{'no'}], but correct output = [{'yes'}]"]], "3195": [[false, "When inputs = 4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green, output = [{'1'}], but correct output = [{'0.25'}]"]], "3196": [[false, "When inputs = 6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4, output = [{'5'}], but correct output = [{'3'}]"]], "3197": [[false, "When inputs = 12 3\n2 3 4 5 6 7 4 7 8 8 12 12, output = [{'3'}], but correct output = [{'2'}]"]], "3198": [[true, ""]], "3199": [[false, "When inputs = 1 1\n3, output = [{'4'}, {'2'}, {'3'}], but correct output = [{'2'}, {'2'}, {'5'}]"]], "3200": [[false, "When inputs = 1, output = [{'774.3387236630'}], but correct output = [{'44.72135955'}]"]], "3201": [[false, "When inputs = 2 3 1 5\n1 2, output = [{'1'}, {'2'}, {'2'}], but correct output = [{'1'}, {'3'}, {'2'}]"]], "3202": [[false, "When inputs = 2 5\n1 1, output = [{'0'}], but correct output = [{'3'}]"]], "3203": [[true, ""]], "3204": [[false, "When inputs = 2\n100\n200, output = [{'60'}], but correct output = [{'160'}]"]], "3205": [[true, ""]], "3206": [[false, "When inputs = 4 2\n3 3 2 2\n6 3, output = [{'2', '1'}, {'1'}], but correct output = [{'-1'}]"]], "3207": [[-1, "Call-based runtime error or time limit exceeded error = TypeError('list indices must be integers or slices, not str')list indices must be integers or slices, not str"]], "3208": [[false, "When inputs = ex eoii jpxbmx cvz uxju sjzzcn jzz, output = [{'Impossible'}], but correct output = [{'our', 'arr', 'avenge', 'will', 'dead', 'parrot', 'we'}]"]], "3209": [[false, "When inputs = Hamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120, output = [], but correct output = [{'68.3'}]"]], "3210": [[false, "When inputs = 3\n*-*.*\n|.|.|\n*.*-*\n|...|\n*.*.*, output = [{'0'}], but correct output = [{'3'}]"]], "3211": [[false, "When inputs = 8\n12210020, output = [{'impossible'}], but correct output = [{'4'}]"]], "3212": [[-1, "Call-based runtime error or time limit exceeded error = EOFError('EOF when reading a line')EOF when reading a line"]], "3213": [[false, "When inputs = 8 3\n++xx+x++, output = [{'ooxxoxoo'}], but correct output = [{'++xx+o++'}]"]], "3214": [[false, "When inputs = Lost is Close to Lose\n\n\"Better Documents Inc. wants to add Typo Checking in to the\nnext generation of word processors,\" he said.\n***, output = [{'add', 'aad:'}, {'add', 'aadd:'}, {'said', 'aaid:'}, {'wants', 'aants:'}, {'add', 'abd:'}, {'add', 'abdd:'}, {'abetter:', 'Better'}, {'acd:', 'add'}, {'add', 'acdd:'}, {'achecking:', 'Checking'}, {'aclose:', 'Close'}, {'add', 'ad:'}, {'add', 'ada:'}, {'adad:', 'add'}, {'add', 'adb:'}, {'add', 'adbd:'}, {'adc:', 'add'}, {'add', 'adcd:'}, {'addd:', 'add'}, {'ade:', 'add'}, {'add', 'aded:'}, {'adf:', 'add'}, {'add', 'adfd:'}, {'add', 'adg:'}, {'add', 'adgd:'}, {'add', 'adh:'}, {'adhd:', 'add'}, {'adi:', 'add'}, {'adid:', 'add'}, {'add', 'adj:'}, {'add', 'adjd:'}, {'adk:', 'add'}, {'add', 'adkd:'}, {'adl:', 'add'}, {'add', 'adld:'}, {'add', 'adm:'}, {'add', 'admd:'}, {'adn:', 'add'}, {'adnd:', 'add'}, {'add', 'ado:'}, {'Documents', 'adocuments:'}, {'adod:', 'add'}, {'adp:', 'add'}, {'adpd:', 'add'}, {'adq:', 'add'}, {'adqd:', 'add'}, {'add', 'adr:'}, {'adrd:', 'add'}, {'add', 'ads:'}, {'add', 'adsd:'}, {'adt:', 'add'}, {'add', 'adtd:'}, {'add', 'adu:'}, {'add', 'adud:'}, {'add', 'adv:'}, {'add', 'advd:'}, {'adw:', 'add'}, {'adwd:', 'add'}, {'adx:', 'add'}, {'add', 'adxd:'}, {'add', 'ady:'}, {'add', 'adyd:'}, {'add', 'adz:'}, {'add', 'adzd:'}, {'he', 'ae:'}, {'aed:', 'add'}, {'aedd:', 'add'}, {'aeneration:', 'generation'}, {'Better', 'aetter:'}, {'next', 'aext:'}, {'af:', 'of'}, {'afd:', 'add'}, {'afdd:', 'add'}, {'agd:', 'add'}, {'add', 'agdd:'}, {'ageneration:', 'generation'}, {'add', 'ahd:'}, {'ahdd:', 'add'}, {'ahe:', 'he', 'the'}, {'ahecking:', 'Checking'}, {'said', 'aid:', 'add'}, {'aidd:', 'add'}, {'in', 'ain:'}, {'ainc:', 'Inc'}, {'ais:', 'is'}, {'add', 'ajd:'}, {'ajdd:', 'add'}, {'akd:', 'add'}, {'akdd:', 'add'}, {'add', 'ald:'}, {'aldd:', 'add'}, {'Lose', 'Close', 'alose:'}, {'alost:', 'Lost'}, {'amd:', 'add'}, {'add', 'amdd:'}, {'in', 'an:'}, {'anc:', 'Inc'}, {'and:', 'add'}, {'andd:', 'add'}, {'anext:', 'next'}, {'ants:', 'wants'}, {'to', 'ao:'}, {'aocuments:', 'Documents'}, {'add', 'aod:'}, {'aodd:', 'add'}, {'aof:', 'of'}, {'aord:', 'word'}, {'aose:', 'Lose'}, {'Lost', 'aost:'}, {'apd:', 'add'}, {'add', 'apdd:'}, {'processors', 'aprocessors:'}, {'add', 'aqd:'}, {'add', 'aqdd:'}, {'ard:', 'add'}, {'add', 'ardd:'}, {'arocessors:', 'processors'}, {'is', 'as:'}, {'said', 'asaid:'}, {'asd:', 'add'}, {'asdd:', 'add'}, {'asid:', 'said'}, {'add', 'atd:'}, {'add', 'atdd:'}, {'athe:', 'the'}, {'to', 'ato:'}, {'Typo', 'atypo:'}, {'aud:', 'add'}, {'audd:', 'add'}, {'avd:', 'add'}, {'avdd:', 'add'}, {'awants:', 'wants'}, {'add', 'awd:'}, {'awdd:', 'add'}, {'wants', 'awnts:'}, {'aword:', 'word'}, {'add', 'axd:'}, {'add', 'axdd:'}, {'add', 'ayd:'}, {'aydd:', 'add'}, {'Typo', 'aypo:'}, {'azd:', 'add'}, {'azdd:', 'add'}, {'add', 'badd:'}, {'baetter:', 'Better'}, {'said', 'baid:'}, {'bants:', 'wants'}, {'batter:', 'Better'}, {'bbetter:', 'Better'}, {'bbtter:', 'Better'}, {'Better', 'bcetter:'}, {'bchecking:', 'Checking'}, {'bclose:', 'Close'}, {'Better', 'bctter:'}, {'bdd:', 'add'}, {'Better', 'bdetter:'}, {'bdocuments:', 'Documents'}, {'Better', 'bdtter:'}, {'he', 'be:'}, {'beater:', 'Better'}, {'Better', 'beatter:'}, {'Better', 'bebter:'}, {'Better', 'bebtter:'}, {'becter:', 'Better'}, {'bectter:', 'Better'}, {'Better', 'bedter:'}, {'Better', 'bedtter:'}, {'Better', 'beeter:'}, {'Better', 'beetter:'}, {'Better', 'befter:'}, {'beftter:', 'Better'}, {'begter:', 'Better'}, {'Better', 'begtter:'}, {'Better', 'behter:'}, {'Better', 'behtter:'}, {'Better', 'beiter:'}, {'beitter:', 'Better'}, {'bejter:', 'Better'}, {'Better', 'bejtter:'}, {'bekter:', 'Better'}, {'bektter:', 'Better'}, {'Better', 'belter:'}, {'Better', 'beltter:'}, {'Better', 'bemter:'}, {'Better', 'bemtter:'}, {'beneration:', 'generation'}, {'Better', 'benter:'}, {'Better', 'bentter:'}, {'beoter:', 'Better'}, {'Better', 'beotter:'}, {'Better', 'bepter:'}, {'Better', 'beptter:'}, {'Better', 'beqter:'}, {'Better', 'beqtter:'}, {'berter:', 'Better'}, {'Better', 'bertter:'}, {'Better', 'bester:'}, {'Better', 'bestter:'}, {'Better', 'betaer:'}, {'Better', 'betater:'}, {'betber:', 'Better'}, {'Better', 'betbter:'}, {'Better', 'betcer:'}, {'Better', 'betcter:'}, {'Better', 'betder:'}, {'betdter:', 'Better'}, {'Better', 'beteer:'}, {'Better', 'beter:'}, {'Better', 'beteter:'}, {'Better', 'betetr:'}, {'Better', 'betfer:'}, {'Better', 'betfter:'}, {'Better', 'betger:'}, {'Better', 'betgter:'}, {'Better', 'bether:'}, {'Better', 'bethter:'}, {'Better', 'betier:'}, {'betiter:', 'Better'}, {'Better', 'betjer:'}, {'Better', 'betjter:'}, {'Better', 'betker:'}, {'Better', 'betkter:'}, {'Better', 'betler:'}, {'betlter:', 'Better'}, {'betmer:', 'Better'}, {'Better', 'betmter:'}, {'betner:', 'Better'}, {'Better', 'betnter:'}, {'Better', 'betoer:'}, {'Better', 'betoter:'}, {'Better', 'betper:'}, {'betpter:', 'Better'}, {'Better', 'betqer:'}, {'Better', 'betqter:'}, {'Better', 'betrer:'}, {'Better', 'betrter:'}, {'Better', 'betser:'}, {'betster:', 'Better'}, {'bettaer:', 'Better'}, {'Better', 'bettar:'}, {'bettber:', 'Better'}, {'Better', 'bettbr:'}, {'bettcer:', 'Better'}, {'bettcr:', 'Better'}, {'Better', 'bettder:'}, {'bettdr:', 'Better'}, {'Better', 'bette:'}, {'bettea:', 'Better'}, {'Better', 'bettear:'}, {'betteb:', 'Better'}, {'Better', 'bettebr:'}, {'bettec:', 'Better'}, {'Better', 'bettecr:'}, {'betted:', 'Better'}, {'Better', 'bettedr:'}, {'Better', 'bettee:'}, {'Better', 'betteer:'}, {'Better', 'bettef:'}, {'bettefr:', 'Better'}, {'Better', 'betteg:'}, {'Better', 'bettegr:'}, {'Better', 'betteh:'}, {'Better', 'bettehr:'}, {'Better', 'bettei:'}, {'Better', 'betteir:'}, {'Better', 'bettej:'}, {'bettejr:', 'Better'}, {'Better', 'bettek:'}, {'Better', 'bettekr:'}, {'Better', 'bettel:'}, {'Better', 'bettelr:'}, {'Better', 'bettem:'}, {'Better', 'bettemr:'}, {'Better', 'betten:'}, {'bettenr:', 'Better'}, {'betteo:', 'Better'}, {'betteor:', 'Better'}, {'bettep:', 'Better'}, {'bettepr:', 'Better'}, {'Better', 'betteq:'}, {'Better', 'betteqr:'}, {'Better', 'better:'}, {'Better', 'betterr:'}, {'bettes:', 'Better'}, {'Better', 'bettesr:'}, {'Better', 'bettet:'}, {'Better', 'bettetr:'}, {'Better', 'betteu:'}, {'Better', 'betteur:'}, {'Better', 'bettev:'}, {'Better', 'bettevr:'}, {'Better', 'bettew:'}, {'Better', 'bettewr:'}, {'Better', 'bettex:'}, {'bettexr:', 'Better'}, {'Better', 'bettey:'}, {'betteyr:', 'Better'}, {'Better', 'bettez:'}, {'Better', 'bettezr:'}, {'Better', 'bettfer:'}, {'Better', 'bettfr:'}, {'Better', 'bettger:'}, {'Better', 'bettgr:'}, {'betther:', 'Better'}, {'Better', 'betthr:'}, {'Better', 'bettier:'}, {'bettir:', 'Better'}, {'Better', 'bettjer:'}, {'Better', 'bettjr:'}, {'bettker:', 'Better'}, {'bettkr:', 'Better'}, {'Better', 'bettler:'}, {'bettlr:', 'Better'}, {'bettmer:', 'Better'}, {'Better', 'bettmr:'}, {'Better', 'bettner:'}, {'bettnr:', 'Better'}, {'Better', 'bettoer:'}, {'bettor:', 'Better'}, {'Better', 'bettper:'}, {'Better', 'bettpr:'}, {'Better', 'bettqer:'}, {'Better', 'bettqr:'}, {'bettr:', 'Better'}, {'Better', 'bettre:'}, {'Better', 'bettrer:'}, {'Better', 'bettrr:'}, {'Better', 'bettser:'}, {'Better', 'bettsr:'}, {'Better', 'bettter:'}, {'Better', 'betttr:'}, {'Better', 'bettuer:'}, {'Better', 'bettur:'}, {'bettver:', 'Better'}, {'Better', 'bettvr:'}, {'Better', 'bettwer:'}, {'Better', 'bettwr:'}, {'Better', 'bettxer:'}, {'Better', 'bettxr:'}, {'Better', 'bettyer:'}, {'Better', 'bettyr:'}, {'Better', 'bettzer:'}, {'Better', 'bettzr:'}, {'Better', 'betuer:'}, {'Better', 'betuter:'}, {'Better', 'betver:'}, {'betvter:', 'Better'}, {'Better', 'betwer:'}, {'Better', 'betwter:'}, {'betxer:', 'Better'}, {'Better', 'betxter:'}, {'Better', 'betyer:'}, {'Better', 'betyter:'}, {'Better', 'betzer:'}, {'betzter:', 'Better'}, {'Better', 'beuter:'}, {'Better', 'beutter:'}, {'Better', 'bevter:'}, {'bevtter:', 'Better'}, {'bewter:', 'Better'}, {'Better', 'bewtter:'}, {'next', 'bext:'}, {'Better', 'bexter:'}, {'Better', 'bextter:'}, {'Better', 'beyter:'}, {'Better', 'beytter:'}, {'Better', 'bezter:'}, {'beztter:', 'Better'}, {'bf:', 'of'}, {'Better', 'bfetter:'}, {'Better', 'bftter:'}, {'bgeneration:', 'generation'}, {'bgetter:', 'Better'}, {'Better', 'bgtter:'}, {'bhe:', 'he', 'the'}, {'bhecking:', 'Checking'}, {'bhetter:', 'Better'}, {'bhtter:', 'Better'}, {'bietter:', 'Better'}, {'bin:', 'in'}, {'binc:', 'Inc'}, {'is', 'bis:'}, {'Better', 'bitter:'}, {'Better', 'bjetter:'}, {'bjtter:', 'Better'}, {'bketter:', 'Better'}, {'bktter:', 'Better'}, {'Better', 'bletter:'}, {'Lose', 'Close', 'blose:'}, {'Lost', 'blost:'}, {'bltter:', 'Better'}, {'Better', 'bmetter:'}, {'bmtter:', 'Better'}, {'in', 'bn:'}, {'bnc:', 'Inc'}, {'Better', 'bnetter:'}, {'next', 'bnext:'}, {'Better', 'bntter:'}, {'to', 'bo:'}, {'Documents', 'bocuments:'}, {'Better', 'boetter:'}, {'bof:', 'of'}, {'bord:', 'word'}, {'Lose', 'bose:'}, {'bost:', 'Lost'}, {'botter:', 'Better'}, {'Better', 'bpetter:'}, {'bprocessors:', 'processors'}, {'Better', 'bptter:'}, {'Better', 'bqetter:'}, {'Better', 'bqtter:'}, {'Better', 'bretter:'}, {'brocessors:', 'processors'}, {'brtter:', 'Better'}, {'bs:', 'is'}, {'bsaid:', 'said'}, {'Better', 'bsetter:'}, {'bstter:', 'Better'}, {'Better', 'bteter:'}, {'Better', 'btetter:'}, {'bthe:', 'the'}, {'to', 'bto:'}, {'Better', 'btter:'}, {'bttter:', 'Better'}, {'Typo', 'btypo:'}, {'Better', 'buetter:'}, {'butter:', 'Better'}, {'Better', 'bvetter:'}, {'Better', 'bvtter:'}, {'bwants:', 'wants'}, {'bwetter:', 'Better'}, {'word', 'bword:'}, {'Better', 'bwtter:'}, {'bxetter:', 'Better'}, {'Better', 'bxtter:'}, {'Better', 'byetter:'}, {'Typo', 'bypo:'}, {'Better', 'bytter:'}, {'bzetter:', 'Better'}, {'Better', 'bztter:'}, {'add', 'cadd:'}, {'caecking:', 'Checking'}, {'cahecking:', 'Checking'}, {'caid:', 'said'}, {'calose:', 'Close'}, {'wants', 'cants:'}, {'caose:', 'Close'}, {'cbecking:', 'Checking'}, {'Better', 'cbetter:'}, {'cbhecking:', 'Checking'}, {'cblose:', 'Close'}, {'cbose:', 'Close'}, {'ccecking:', 'Checking'}, {'cchecking:', 'Checking'}, {'cclose:', 'Close'}, {'ccose:', 'Close'}, {'add', 'cdd:'}, {'cdecking:', 'Checking'}, {'cdhecking:', 'Checking'}, {'cdlose:', 'Close'}, {'cdocuments:', 'Documents'}, {'cdose:', 'Close'}, {'ce:', 'he'}, {'cecking:', 'Checking'}, {'ceecking:', 'Checking'}, {'cehcking:', 'Checking'}, {'cehecking:', 'Checking'}, {'Close', 'celose:'}, {'ceneration:', 'generation'}, {'ceose:', 'Close'}, {'Better', 'cetter:'}, {'next', 'cext:'}, {'cf:', 'of'}, {'Checking', 'cfecking:'}, {'cfhecking:', 'Checking'}, {'cflose:', 'Close'}, {'cfose:', 'Close'}, {'Checking', 'cgecking:'}, {'cgeneration:', 'generation'}, {'cghecking:', 'Checking'}, {'cglose:', 'Close'}, {'cgose:', 'Close'}, {'chacking:', 'Checking'}, {'chaecking:', 'Checking'}, {'chbcking:', 'Checking'}, {'chbecking:', 'Checking'}, {'chccking:', 'Checking'}, {'chcecking:', 'Checking'}, {'chceking:', 'Checking'}, {'chcking:', 'Checking'}, {'chdcking:', 'Checking'}, {'chdecking:', 'Checking'}, {'he', 'the', 'che:'}, {'cheacking:', 'Checking'}, {'cheaking:', 'Checking'}, {'Checking', 'chebcking:'}, {'chebking:', 'Checking'}, {'Checking', 'checaing:'}, {'Checking', 'checaking:'}, {'checbing:', 'Checking'}, {'checbking:', 'Checking'}, {'checcing:', 'Checking'}, {'Checking', 'checcking:'}, {'checding:', 'Checking'}, {'Checking', 'checdking:'}, {'Checking', 'checeing:'}, {'checeking:', 'Checking'}, {'checfing:', 'Checking'}, {'checfking:', 'Checking'}, {'checging:', 'Checking'}, {'checgking:', 'Checking'}, {'cheching:', 'Checking'}, {'chechking:', 'Checking'}, {'Checking', 'checiing:'}, {'Checking', 'checiking:'}, {'checikng:', 'Checking'}, {'checing:', 'Checking'}, {'checjing:', 'Checking'}, {'checjking:', 'Checking'}, {'checkaing:', 'Checking'}, {'checkang:', 'Checking'}, {'checkbing:', 'Checking'}, {'checkbng:', 'Checking'}, {'checkcing:', 'Checking'}, {'Checking', 'checkcng:'}, {'Checking', 'checkding:'}, {'checkdng:', 'Checking'}, {'checkeing:', 'Checking'}, {'checkeng:', 'Checking'}, {'checkfing:', 'Checking'}, {'Checking', 'checkfng:'}, {'checkging:', 'Checking'}, {'checkgng:', 'Checking'}, {'checkhing:', 'Checking'}, {'checkhng:', 'Checking'}, {'checkiag:', 'Checking'}, {'checkiang:', 'Checking'}, {'checkibg:', 'Checking'}, {'checkibng:', 'Checking'}, {'checkicg:', 'Checking'}, {'checkicng:', 'Checking'}, {'checkidg:', 'Checking'}, {'checkidng:', 'Checking'}, {'checkieg:', 'Checking'}, {'checkieng:', 'Checking'}, {'checkifg:', 'Checking'}, {'checkifng:', 'Checking'}, {'checkig:', 'Checking'}, {'checkigg:', 'Checking'}, {'checkign:', 'Checking'}, {'checkigng:', 'Checking'}, {'Checking', 'checkihg:'}, {'checkihng:', 'Checking'}, {'checkiig:', 'Checking'}, {'checkiing:', 'Checking'}, {'checkijg:', 'Checking'}, {'checkijng:', 'Checking'}, {'Checking', 'checkikg:'}, {'Checking', 'checkikng:'}, {'checkilg:', 'Checking'}, {'checkilng:', 'Checking'}, {'checkimg:', 'Checking'}, {'checkimng:', 'Checking'}, {'checkin:', 'Checking'}, {'checkina:', 'Checking'}, {'Checking', 'checkinag:'}, {'Checking', 'checkinb:'}, {'Checking', 'checkinbg:'}, {'checkinc:', 'Checking'}, {'Checking', 'checkincg:'}, {'checkind:', 'Checking'}, {'Checking', 'checkindg:'}, {'checkine:', 'Checking'}, {'checkineg:', 'Checking'}, {'checkinf:', 'Checking'}, {'checkinfg:', 'Checking'}, {'Checking', 'checking:'}, {'checkingg:', 'Checking'}, {'checkinh:', 'Checking'}, {'checkinhg:', 'Checking'}, {'checkini:', 'Checking'}, {'Checking', 'checkinig:'}, {'Checking', 'checkinj:'}, {'Checking', 'checkinjg:'}, {'checkink:', 'Checking'}, {'checkinkg:', 'Checking'}, {'checkinl:', 'Checking'}, {'Checking', 'checkinlg:'}, {'checkinm:', 'Checking'}, {'checkinmg:', 'Checking'}, {'checkinn:', 'Checking'}, {'Checking', 'checkinng:'}, {'checkino:', 'Checking'}, {'checkinog:', 'Checking'}, {'checkinp:', 'Checking'}, {'checkinpg:', 'Checking'}, {'Checking', 'checkinq:'}, {'checkinqg:', 'Checking'}, {'checkinr:', 'Checking'}, {'checkinrg:', 'Checking'}, {'checkins:', 'Checking'}, {'checkinsg:', 'Checking'}, {'checkint:', 'Checking'}, {'checkintg:', 'Checking'}, {'checkinu:', 'Checking'}, {'checkinug:', 'Checking'}, {'Checking', 'checkinv:'}, {'checkinvg:', 'Checking'}, {'Checking', 'checkinw:'}, {'Checking', 'checkinwg:'}, {'checkinx:', 'Checking'}, {'checkinxg:', 'Checking'}, {'checkiny:', 'Checking'}, {'checkinyg:', 'Checking'}, {'Checking', 'checkinz:'}, {'Checking', 'checkinzg:'}, {'checkiog:', 'Checking'}, {'Checking', 'checkiong:'}, {'checkipg:', 'Checking'}, {'checkipng:', 'Checking'}, {'Checking', 'checkiqg:'}, {'checkiqng:', 'Checking'}, {'checkirg:', 'Checking'}, {'checkirng:', 'Checking'}, {'Checking', 'checkisg:'}, {'checkisng:', 'Checking'}, {'Checking', 'checkitg:'}, {'checkitng:', 'Checking'}, {'Checking', 'checkiug:'}, {'checkiung:', 'Checking'}, {'checkivg:', 'Checking'}, {'checkivng:', 'Checking'}, {'checkiwg:', 'Checking'}, {'checkiwng:', 'Checking'}, {'checkixg:', 'Checking'}, {'checkixng:', 'Checking'}, {'Checking', 'checkiyg:'}, {'checkiyng:', 'Checking'}, {'checkizg:', 'Checking'}, {'checkizng:', 'Checking'}, {'checkjing:', 'Checking'}, {'checkjng:', 'Checking'}, {'checkking:', 'Checking'}, {'checkkng:', 'Checking'}, {'checkling:', 'Checking'}, {'checklng:', 'Checking'}, {'checkming:', 'Checking'}, {'checkmng:', 'Checking'}, {'checkng:', 'Checking'}, {'checknig:', 'Checking'}, {'checkning:', 'Checking'}, {'checknng:', 'Checking'}, {'Checking', 'checkoing:'}, {'checkong:', 'Checking'}, {'Checking', 'checkping:'}, {'checkpng:', 'Checking'}, {'checkqing:', 'Checking'}, {'checkqng:', 'Checking'}, {'checkring:', 'Checking'}, {'checkrng:', 'Checking'}, {'checksing:', 'Checking'}, {'checksng:', 'Checking'}, {'Checking', 'checkting:'}, {'checktng:', 'Checking'}, {'checkuing:', 'Checking'}, {'checkung:', 'Checking'}, {'checkving:', 'Checking'}, {'checkvng:', 'Checking'}, {'checkwing:', 'Checking'}, {'checkwng:', 'Checking'}, {'checkxing:', 'Checking'}, {'checkxng:', 'Checking'}, {'checkying:', 'Checking'}, {'checkyng:', 'Checking'}, {'checkzing:', 'Checking'}, {'Checking', 'checkzng:'}, {'checling:', 'Checking'}, {'checlking:', 'Checking'}, {'Checking', 'checming:'}, {'checmking:', 'Checking'}, {'Checking', 'checning:'}, {'checnking:', 'Checking'}, {'checoing:', 'Checking'}, {'Checking', 'checoking:'}, {'checping:', 'Checking'}, {'checpking:', 'Checking'}, {'checqing:', 'Checking'}, {'checqking:', 'Checking'}, {'Checking', 'checring:'}, {'Checking', 'checrking:'}, {'checsing:', 'Checking'}, {'checsking:', 'Checking'}, {'Checking', 'checting:'}, {'chectking:', 'Checking'}, {'checuing:', 'Checking'}, {'checuking:', 'Checking'}, {'checving:', 'Checking'}, {'checvking:', 'Checking'}, {'checwing:', 'Checking'}, {'checwking:', 'Checking'}, {'checxing:', 'Checking'}, {'checxking:', 'Checking'}, {'checying:', 'Checking'}, {'Checking', 'checyking:'}, {'Checking', 'checzing:'}, {'checzking:', 'Checking'}, {'chedcking:', 'Checking'}, {'Checking', 'chedking:'}, {'cheecking:', 'Checking'}, {'cheeking:', 'Checking'}, {'chefcking:', 'Checking'}, {'chefking:', 'Checking'}, {'chegcking:', 'Checking'}, {'Checking', 'chegking:'}, {'chehcking:', 'Checking'}, {'Checking', 'chehking:'}, {'cheicking:', 'Checking'}, {'cheiking:', 'Checking'}, {'Checking', 'chejcking:'}, {'chejking:', 'Checking'}, {'chekcing:', 'Checking'}, {'Checking', 'chekcking:'}, {'cheking:', 'Checking'}, {'chekking:', 'Checking'}, {'chelcking:', 'Checking'}, {'chelking:', 'Checking'}, {'chemcking:', 'Checking'}, {'chemking:', 'Checking'}, {'chencking:', 'Checking'}, {'chenking:', 'Checking'}, {'cheocking:', 'Checking'}, {'cheoking:', 'Checking'}, {'chepcking:', 'Checking'}, {'chepking:', 'Checking'}, {'cheqcking:', 'Checking'}, {'cheqking:', 'Checking'}, {'Checking', 'chercking:'}, {'cherking:', 'Checking'}, {'chescking:', 'Checking'}, {'chesking:', 'Checking'}, {'chetcking:', 'Checking'}, {'chetking:', 'Checking'}, {'cheucking:', 'Checking'}, {'cheuking:', 'Checking'}, {'chevcking:', 'Checking'}, {'chevking:', 'Checking'}, {'chewcking:', 'Checking'}, {'chewking:', 'Checking'}, {'Checking', 'chexcking:'}, {'Checking', 'chexking:'}, {'cheycking:', 'Checking'}, {'cheyking:', 'Checking'}, {'chezcking:', 'Checking'}, {'Checking', 'chezking:'}, {'chfcking:', 'Checking'}, {'Checking', 'chfecking:'}, {'chgcking:', 'Checking'}, {'Checking', 'chgecking:'}, {'chhcking:', 'Checking'}, {'chhecking:', 'Checking'}, {'chicking:', 'Checking'}, {'chiecking:', 'Checking'}, {'chjcking:', 'Checking'}, {'chjecking:', 'Checking'}, {'chkcking:', 'Checking'}, {'chkecking:', 'Checking'}, {'chlcking:', 'Checking'}, {'chlecking:', 'Checking'}, {'chlose:', 'Close'}, {'chmcking:', 'Checking'}, {'chmecking:', 'Checking'}, {'Checking', 'chncking:'}, {'chnecking:', 'Checking'}, {'chocking:', 'Checking'}, {'choecking:', 'Checking'}, {'Close', 'chose:'}, {'chpcking:', 'Checking'}, {'chpecking:', 'Checking'}, {'chqcking:', 'Checking'}, {'chqecking:', 'Checking'}, {'chrcking:', 'Checking'}, {'chrecking:', 'Checking'}, {'chscking:', 'Checking'}, {'Checking', 'chsecking:'}, {'Checking', 'chtcking:'}, {'chtecking:', 'Checking'}, {'chucking:', 'Checking'}, {'chuecking:', 'Checking'}, {'Checking', 'chvcking:'}, {'chvecking:', 'Checking'}, {'chwcking:', 'Checking'}, {'chwecking:', 'Checking'}, {'chxcking:', 'Checking'}, {'chxecking:', 'Checking'}, {'chycking:', 'Checking'}, {'Checking', 'chyecking:'}, {'chzcking:', 'Checking'}, {'chzecking:', 'Checking'}, {'ciecking:', 'Checking'}, {'cihecking:', 'Checking'}, {'cilose:', 'Close'}, {'in', 'cin:'}, {'cinc:', 'Inc'}, {'Close', 'ciose:'}, {'is', 'cis:'}, {'cjecking:', 'Checking'}, {'Checking', 'cjhecking:'}, {'cjlose:', 'Close'}, {'Close', 'cjose:'}, {'ckecking:', 'Checking'}, {'ckhecking:', 'Checking'}, {'Close', 'cklose:'}, {'Close', 'ckose:'}, {'claose:', 'Close'}, {'clase:', 'Close'}, {'clbose:', 'Close'}, {'clbse:', 'Close'}, {'clcose:', 'Close'}, {'clcse:', 'Close'}, {'cldose:', 'Close'}, {'Close', 'cldse:'}, {'Checking', 'clecking:'}, {'cleose:', 'Close'}, {'clese:', 'Close'}, {'clfose:', 'Close'}, {'Close', 'clfse:'}, {'clgose:', 'Close'}, {'Close', 'clgse:'}, {'Checking', 'clhecking:'}, {'clhose:', 'Close'}, {'clhse:', 'Close'}, {'cliose:', 'Close'}, {'clise:', 'Close'}, {'Close', 'cljose:'}, {'Close', 'cljse:'}, {'clkose:', 'Close'}, {'clkse:', 'Close'}, {'cllose:', 'Close'}, {'cllse:', 'Close'}, {'clmose:', 'Close'}, {'clmse:', 'Close'}, {'clnose:', 'Close'}, {'clnse:', 'Close'}, {'cloae:', 'Close'}, {'cloase:', 'Close'}, {'clobe:', 'Close'}, {'Close', 'clobse:'}, {'cloce:', 'Close'}, {'clocse:', 'Close'}, {'clode:', 'Close'}, {'Close', 'clodse:'}, {'cloe:', 'Close'}, {'cloee:', 'Close'}, {'cloes:', 'Close'}, {'cloese:', 'Close'}, {'Close', 'clofe:'}, {'clofse:', 'Close'}, {'cloge:', 'Close'}, {'Close', 'clogse:'}, {'clohe:', 'Close'}, {'Close', 'clohse:'}, {'Close', 'cloie:'}, {'cloise:', 'Close'}, {'cloje:', 'Close'}, {'clojse:', 'Close'}, {'cloke:', 'Close'}, {'clokse:', 'Close'}, {'clole:', 'Close'}, {'clolse:', 'Close'}, {'Close', 'clome:'}, {'clomse:', 'Close'}, {'clone:', 'Close'}, {'clonse:', 'Close'}, {'clooe:', 'Close'}, {'cloose:', 'Close'}, {'clope:', 'Close'}, {'Close', 'clopse:'}, {'cloqe:', 'Close'}, {'cloqse:', 'Close'}, {'clore:', 'Close'}, {'clorse:', 'Close'}, {'Close', 'clos:'}, {'closa:', 'Close'}, {'closae:', 'Close'}, {'closb:', 'Close'}, {'closbe:', 'Close'}, {'closc:', 'Close'}, {'closce:', 'Close'}, {'closd:', 'Close'}, {'closde:', 'Close'}, {'Lose', 'Close', 'close:'}, {'closee:', 'Close'}, {'closf:', 'Close'}, {'closfe:', 'Close'}, {'Close', 'closg:'}, {'closge:', 'Close'}, {'closh:', 'Close'}, {'closhe:', 'Close'}, {'Close', 'closi:'}, {'closie:', 'Close'}, {'closj:', 'Close'}, {'Close', 'closje:'}, {'closk:', 'Close'}, {'closke:', 'Close'}, {'closl:', 'Close'}, {'closle:', 'Close'}, {'Close', 'closm:'}, {'closme:', 'Close'}, {'Close', 'closn:'}, {'closne:', 'Close'}, {'closo:', 'Close'}, {'closoe:', 'Close'}, {'closp:', 'Close'}, {'clospe:', 'Close'}, {'closq:', 'Close'}, {'Close', 'closqe:'}, {'closr:', 'Close'}, {'closre:', 'Close'}, {'Close', 'closs:'}, {'closse:', 'Close'}, {'Lost', 'Close', 'clost:'}, {'Close', 'closte:'}, {'closu:', 'Close'}, {'Close', 'closue:'}, {'closv:', 'Close'}, {'closve:', 'Close'}, {'Close', 'closw:'}, {'closwe:', 'Close'}, {'closx:', 'Close'}, {'closxe:', 'Close'}, {'Close', 'closy:'}, {'Close', 'closye:'}, {'closz:', 'Close'}, {'closze:', 'Close'}, {'clote:', 'Close'}, {'clotse:', 'Close'}, {'cloue:', 'Close'}, {'clouse:', 'Close'}, {'clove:', 'Close'}, {'clovse:', 'Close'}, {'clowe:', 'Close'}, {'clowse:', 'Close'}, {'cloxe:', 'Close'}, {'cloxse:', 'Close'}, {'Close', 'cloye:'}, {'cloyse:', 'Close'}, {'cloze:', 'Close'}, {'clozse:', 'Close'}, {'clpose:', 'Close'}, {'clpse:', 'Close'}, {'Close', 'clqose:'}, {'clqse:', 'Close'}, {'clrose:', 'Close'}, {'clrse:', 'Close'}, {'clse:', 'Close'}, {'clsoe:', 'Close'}, {'clsose:', 'Close'}, {'clsse:', 'Close'}, {'Close', 'cltose:'}, {'cltse:', 'Close'}, {'cluose:', 'Close'}, {'cluse:', 'Close'}, {'clvose:', 'Close'}, {'clvse:', 'Close'}, {'clwose:', 'Close'}, {'clwse:', 'Close'}, {'Close', 'clxose:'}, {'Close', 'clxse:'}, {'clyose:', 'Close'}, {'Close', 'clyse:'}, {'Close', 'clzose:'}, {'clzse:', 'Close'}, {'Checking', 'cmecking:'}, {'Checking', 'cmhecking:'}, {'Close', 'cmlose:'}, {'cmose:', 'Close'}, {'cn:', 'in'}, {'cnc:', 'Inc'}, {'cnecking:', 'Checking'}, {'cnext:', 'next'}, {'cnhecking:', 'Checking'}, {'cnlose:', 'Close'}, {'cnose:', 'Close'}, {'to', 'co:'}, {'cocuments:', 'Documents'}, {'coecking:', 'Checking'}, {'cof:', 'of'}, {'cohecking:', 'Checking'}, {'colose:', 'Close'}, {'colse:', 'Close'}, {'coose:', 'Close'}, {'cord:', 'word'}, {'cose:', 'Lose', 'Close'}, {'Lost', 'cost:'}, {'Checking', 'cpecking:'}, {'Checking', 'cphecking:'}, {'Close', 'cplose:'}, {'Close', 'cpose:'}, {'cprocessors:', 'processors'}, {'cqecking:', 'Checking'}, {'cqhecking:', 'Checking'}, {'cqlose:', 'Close'}, {'cqose:', 'Close'}, {'crecking:', 'Checking'}, {'crhecking:', 'Checking'}, {'Close', 'crlose:'}, {'processors', 'crocessors:'}, {'crose:', 'Close'}, {'is', 'cs:'}, {'said', 'csaid:'}, {'Checking', 'csecking:'}, {'cshecking:', 'Checking'}, {'cslose:', 'Close'}, {'csose:', 'Close'}, {'ctecking:', 'Checking'}, {'cthe:', 'the'}, {'cthecking:', 'Checking'}, {'Close', 'ctlose:'}, {'to', 'cto:'}, {'ctose:', 'Close'}, {'Typo', 'ctypo:'}, {'cuecking:', 'Checking'}, {'cuhecking:', 'Checking'}, {'Close', 'culose:'}, {'Close', 'cuose:'}, {'Checking', 'cvecking:'}, {'cvhecking:', 'Checking'}, {'cvlose:', 'Close'}, {'cvose:', 'Close'}, {'wants', 'cwants:'}, {'cwecking:', 'Checking'}, {'cwhecking:', 'Checking'}, {'cwlose:', 'Close'}, {'cword:', 'word'}, {'cwose:', 'Close'}, {'cxecking:', 'Checking'}, {'cxhecking:', 'Checking'}, {'cxlose:', 'Close'}, {'cxose:', 'Close'}, {'Checking', 'cyecking:'}, {'cyhecking:', 'Checking'}, {'cylose:', 'Close'}, {'Close', 'cyose:'}, {'Typo', 'cypo:'}, {'czecking:', 'Checking'}, {'czhecking:', 'Checking'}, {'czlose:', 'Close'}, {'czose:', 'Close'}, {'Documents', 'dacuments:'}, {'dad:', 'add'}, {'dadd:', 'add'}, {'said', 'daid:'}, {'wants', 'dants:'}, {'daocuments:', 'Documents'}, {'dbcuments:', 'Documents'}, {'Better', 'dbetter:'}, {'Documents', 'dbocuments:'}, {'dccuments:', 'Documents'}, {'Checking', 'dchecking:'}, {'dclose:', 'Close'}, {'dcocuments:', 'Documents'}, {'dcouments:', 'Documents'}, {'dcuments:', 'Documents'}, {'add', 'dd:'}, {'ddcuments:', 'Documents'}, {'add', 'ddd:'}, {'ddocuments:', 'Documents'}, {'he', 'de:'}, {'decuments:', 'Documents'}, {'deneration:', 'generation'}, {'deocuments:', 'Documents'}, {'Better', 'detter:'}, {'dext:', 'next'}, {'df:', 'of'}, {'dfcuments:', 'Documents'}, {'Documents', 'dfocuments:'}, {'Documents', 'dgcuments:'}, {'dgeneration:', 'generation'}, {'dgocuments:', 'Documents'}, {'Documents', 'dhcuments:'}, {'he', 'dhe:', 'the'}, {'Checking', 'dhecking:'}, {'dhocuments:', 'Documents'}, {'dicuments:', 'Documents'}, {'in', 'din:'}, {'dinc:', 'Inc'}, {'Documents', 'diocuments:'}, {'dis:', 'is'}, {'Documents', 'djcuments:'}, {'djocuments:', 'Documents'}, {'Documents', 'dkcuments:'}, {'Documents', 'dkocuments:'}, {'dlcuments:', 'Documents'}, {'dlocuments:', 'Documents'}, {'Lose', 'dlose:', 'Close'}, {'dlost:', 'Lost'}, {'dmcuments:', 'Documents'}, {'dmocuments:', 'Documents'}, {'in', 'dn:'}, {'dnc:', 'Inc'}, {'Documents', 'dncuments:'}, {'next', 'dnext:'}, {'dnocuments:', 'Documents'}, {'to', 'do:'}, {'Documents', 'doacuments:'}, {'doauments:', 'Documents'}, {'dobcuments:', 'Documents'}, {'dobuments:', 'Documents'}, {'Documents', 'docaments:'}, {'docauments:', 'Documents'}, {'docbments:', 'Documents'}, {'Documents', 'docbuments:'}, {'Documents', 'doccments:'}, {'Documents', 'doccuments:'}, {'docdments:', 'Documents'}, {'Documents', 'docduments:'}, {'Documents', 'docements:'}, {'Documents', 'doceuments:'}, {'docfments:', 'Documents'}, {'docfuments:', 'Documents'}, {'docgments:', 'Documents'}, {'Documents', 'docguments:'}, {'Documents', 'dochments:'}, {'dochuments:', 'Documents'}, {'dociments:', 'Documents'}, {'dociuments:', 'Documents'}, {'Documents', 'docjments:'}, {'docjuments:', 'Documents'}, {'Documents', 'dockments:'}, {'dockuments:', 'Documents'}, {'doclments:', 'Documents'}, {'docluments:', 'Documents'}, {'docments:', 'Documents'}, {'Documents', 'docmments:'}, {'docmuents:', 'Documents'}, {'docmuments:', 'Documents'}, {'docnments:', 'Documents'}, {'docnuments:', 'Documents'}, {'docoments:', 'Documents'}, {'docouments:', 'Documents'}, {'Documents', 'docpments:'}, {'docpuments:', 'Documents'}, {'Documents', 'docqments:'}, {'docquments:', 'Documents'}, {'docrments:', 'Documents'}, {'docruments:', 'Documents'}, {'docsments:', 'Documents'}, {'docsuments:', 'Documents'}, {'doctments:', 'Documents'}, {'Documents', 'doctuments:'}, {'Documents', 'docuaents:'}, {'docuaments:', 'Documents'}, {'docubents:', 'Documents'}, {'docubments:', 'Documents'}, {'docucents:', 'Documents'}, {'docucments:', 'Documents'}, {'docudents:', 'Documents'}, {'docudments:', 'Documents'}, {'Documents', 'docueents:'}, {'docuements:', 'Documents'}, {'docuemnts:', 'Documents'}, {'docuents:', 'Documents'}, {'docufents:', 'Documents'}, {'docufments:', 'Documents'}, {'docugents:', 'Documents'}, {'docugments:', 'Documents'}, {'Documents', 'docuhents:'}, {'docuhments:', 'Documents'}, {'docuients:', 'Documents'}, {'Documents', 'docuiments:'}, {'Documents', 'docujents:'}, {'Documents', 'docujments:'}, {'Documents', 'docukents:'}, {'docukments:', 'Documents'}, {'doculents:', 'Documents'}, {'Documents', 'doculments:'}, {'documaents:', 'Documents'}, {'documants:', 'Documents'}, {'Documents', 'documbents:'}, {'documbnts:', 'Documents'}, {'Documents', 'documcents:'}, {'Documents', 'documcnts:'}, {'documdents:', 'Documents'}, {'documdnts:', 'Documents'}, {'Documents', 'documeants:'}, {'documeats:', 'Documents'}, {'documebnts:', 'Documents'}, {'documebts:', 'Documents'}, {'Documents', 'documecnts:'}, {'Documents', 'documects:'}, {'documednts:', 'Documents'}, {'documedts:', 'Documents'}, {'Documents', 'documeents:'}, {'documeets:', 'Documents'}, {'documefnts:', 'Documents'}, {'documefts:', 'Documents'}, {'documegnts:', 'Documents'}, {'documegts:', 'Documents'}, {'Documents', 'documehnts:'}, {'Documents', 'documehts:'}, {'Documents', 'documeints:'}, {'Documents', 'documeits:'}, {'documejnts:', 'Documents'}, {'documejts:', 'Documents'}, {'Documents', 'documeknts:'}, {'documekts:', 'Documents'}, {'documelnts:', 'Documents'}, {'documelts:', 'Documents'}, {'Documents', 'documemnts:'}, {'documemts:', 'Documents'}, {'documenas:', 'Documents'}, {'documenats:', 'Documents'}, {'documenbs:', 'Documents'}, {'Documents', 'documenbts:'}, {'documencs:', 'Documents'}, {'Documents', 'documencts:'}, {'Documents', 'documends:'}, {'documendts:', 'Documents'}, {'documenes:', 'Documents'}, {'documenets:', 'Documents'}, {'documenfs:', 'Documents'}, {'Documents', 'documenfts:'}, {'documengs:', 'Documents'}, {'documengts:', 'Documents'}, {'Documents', 'documenhs:'}, {'Documents', 'documenhts:'}, {'documenis:', 'Documents'}, {'Documents', 'documenits:'}, {'documenjs:', 'Documents'}, {'documenjts:', 'Documents'}, {'documenks:', 'Documents'}, {'documenkts:', 'Documents'}, {'Documents', 'documenls:'}, {'documenlts:', 'Documents'}, {'documenms:', 'Documents'}, {'Documents', 'documenmts:'}, {'documenns:', 'Documents'}, {'documennts:', 'Documents'}, {'documenos:', 'Documents'}, {'documenots:', 'Documents'}, {'documenps:', 'Documents'}, {'documenpts:', 'Documents'}, {'documenqs:', 'Documents'}, {'Documents', 'documenqts:'}, {'Documents', 'documenrs:'}, {'documenrts:', 'Documents'}, {'documens:', 'Documents'}, {'documenss:', 'Documents'}, {'Documents', 'documenst:'}, {'documensts:', 'Documents'}, {'document:', 'Documents'}, {'Documents', 'documenta:'}, {'Documents', 'documentas:'}, {'documentb:', 'Documents'}, {'Documents', 'documentbs:'}, {'documentc:', 'Documents'}, {'documentcs:', 'Documents'}, {'documentd:', 'Documents'}, {'documentds:', 'Documents'}, {'documente:', 'Documents'}, {'documentes:', 'Documents'}, {'documentf:', 'Documents'}, {'documentfs:', 'Documents'}, {'documentg:', 'Documents'}, {'documentgs:', 'Documents'}, {'documenth:', 'Documents'}, {'documenths:', 'Documents'}, {'documenti:', 'Documents'}, {'documentis:', 'Documents'}, {'documentj:', 'Documents'}, {'documentjs:', 'Documents'}, {'documentk:', 'Documents'}, {'documentks:', 'Documents'}, {'Documents', 'documentl:'}, {'documentls:', 'Documents'}, {'documentm:', 'Documents'}, {'documentms:', 'Documents'}, {'documentn:', 'Documents'}, {'Documents', 'documentns:'}, {'Documents', 'documento:'}, {'documentos:', 'Documents'}, {'documentp:', 'Documents'}, {'Documents', 'documentps:'}, {'Documents', 'documentq:'}, {'documentqs:', 'Documents'}, {'documentr:', 'Documents'}, {'documentrs:', 'Documents'}, {'Documents', 'documents:'}, {'documentss:', 'Documents'}, {'documentt:', 'Documents'}, {'documentts:', 'Documents'}, {'Documents', 'documentu:'}, {'documentus:', 'Documents'}, {'documentv:', 'Documents'}, {'Documents', 'documentvs:'}, {'documentw:', 'Documents'}, {'Documents', 'documentws:'}, {'documentx:', 'Documents'}, {'documentxs:', 'Documents'}, {'Documents', 'documenty:'}, {'documentys:', 'Documents'}, {'documentz:', 'Documents'}, {'documentzs:', 'Documents'}, {'documenus:', 'Documents'}, {'documenuts:', 'Documents'}, {'documenvs:', 'Documents'}, {'Documents', 'documenvts:'}, {'documenws:', 'Documents'}, {'Documents', 'documenwts:'}, {'documenxs:', 'Documents'}, {'Documents', 'documenxts:'}, {'documenys:', 'Documents'}, {'Documents', 'documenyts:'}, {'documenzs:', 'Documents'}, {'Documents', 'documenzts:'}, {'Documents', 'documeonts:'}, {'documeots:', 'Documents'}, {'documepnts:', 'Documents'}, {'Documents', 'documepts:'}, {'Documents', 'documeqnts:'}, {'documeqts:', 'Documents'}, {'Documents', 'documernts:'}, {'documerts:', 'Documents'}, {'Documents', 'documesnts:'}, {'documests:', 'Documents'}, {'Documents', 'documetns:'}, {'documetnts:', 'Documents'}, {'documets:', 'Documents'}, {'documetts:', 'Documents'}, {'documeunts:', 'Documents'}, {'Documents', 'documeuts:'}, {'Documents', 'documevnts:'}, {'Documents', 'documevts:'}, {'Documents', 'documewnts:'}, {'Documents', 'documewts:'}, {'Documents', 'documexnts:'}, {'documexts:', 'Documents'}, {'Documents', 'documeynts:'}, {'Documents', 'documeyts:'}, {'Documents', 'documeznts:'}, {'documezts:', 'Documents'}, {'Documents', 'documfents:'}, {'Documents', 'documfnts:'}, {'Documents', 'documgents:'}, {'documgnts:', 'Documents'}, {'documhents:', 'Documents'}, {'Documents', 'documhnts:'}, {'Documents', 'documients:'}, {'Documents', 'documints:'}, {'documjents:', 'Documents'}, {'Documents', 'documjnts:'}, {'documkents:', 'Documents'}, {'Documents', 'documknts:'}, {'documlents:', 'Documents'}, {'documlnts:', 'Documents'}, {'documments:', 'Documents'}, {'Documents', 'docummnts:'}, {'Documents', 'documnents:'}, {'documnets:', 'Documents'}, {'Documents', 'documnnts:'}, {'documnts:', 'Documents'}, {'Documents', 'documoents:'}, {'documonts:', 'Documents'}, {'documpents:', 'Documents'}, {'Documents', 'documpnts:'}, {'documqents:', 'Documents'}, {'Documents', 'documqnts:'}, {'documrents:', 'Documents'}, {'documrnts:', 'Documents'}, {'documsents:', 'Documents'}, {'documsnts:', 'Documents'}, {'Documents', 'documtents:'}, {'documtnts:', 'Documents'}, {'documuents:', 'Documents'}, {'documunts:', 'Documents'}, {'Documents', 'documvents:'}, {'documvnts:', 'Documents'}, {'documwents:', 'Documents'}, {'documwnts:', 'Documents'}, {'Documents', 'documxents:'}, {'documxnts:', 'Documents'}, {'documyents:', 'Documents'}, {'Documents', 'documynts:'}, {'documzents:', 'Documents'}, {'Documents', 'documznts:'}, {'docunents:', 'Documents'}, {'docunments:', 'Documents'}, {'docuoents:', 'Documents'}, {'docuoments:', 'Documents'}, {'Documents', 'docupents:'}, {'Documents', 'docupments:'}, {'Documents', 'docuqents:'}, {'docuqments:', 'Documents'}, {'docurents:', 'Documents'}, {'docurments:', 'Documents'}, {'docusents:', 'Documents'}, {'Documents', 'docusments:'}, {'docutents:', 'Documents'}, {'docutments:', 'Documents'}, {'docuuents:', 'Documents'}, {'docuuments:', 'Documents'}, {'Documents', 'docuvents:'}, {'Documents', 'docuvments:'}, {'Documents', 'docuwents:'}, {'docuwments:', 'Documents'}, {'docuxents:', 'Documents'}, {'docuxments:', 'Documents'}, {'docuyents:', 'Documents'}, {'docuyments:', 'Documents'}, {'Documents', 'docuzents:'}, {'Documents', 'docuzments:'}, {'Documents', 'docvments:'}, {'Documents', 'docvuments:'}, {'docwments:', 'Documents'}, {'docwuments:', 'Documents'}, {'docxments:', 'Documents'}, {'docxuments:', 'Documents'}, {'Documents', 'docyments:'}, {'docyuments:', 'Documents'}, {'doczments:', 'Documents'}, {'doczuments:', 'Documents'}, {'Documents', 'dodcuments:'}, {'Documents', 'doduments:'}, {'Documents', 'doecuments:'}, {'doeuments:', 'Documents'}, {'dof:', 'of'}, {'dofcuments:', 'Documents'}, {'Documents', 'dofuments:'}, {'Documents', 'dogcuments:'}, {'doguments:', 'Documents'}, {'dohcuments:', 'Documents'}, {'dohuments:', 'Documents'}, {'doicuments:', 'Documents'}, {'Documents', 'doiuments:'}, {'dojcuments:', 'Documents'}, {'dojuments:', 'Documents'}, {'dokcuments:', 'Documents'}, {'Documents', 'dokuments:'}, {'Documents', 'dolcuments:'}, {'doluments:', 'Documents'}, {'domcuments:', 'Documents'}, {'domuments:', 'Documents'}, {'doncuments:', 'Documents'}, {'donuments:', 'Documents'}, {'doocuments:', 'Documents'}, {'doouments:', 'Documents'}, {'dopcuments:', 'Documents'}, {'dopuments:', 'Documents'}, {'doqcuments:', 'Documents'}, {'Documents', 'doquments:'}, {'dorcuments:', 'Documents'}, {'dord:', 'word'}, {'doruments:', 'Documents'}, {'Documents', 'doscuments:'}, {'dose:', 'Lose'}, {'dost:', 'Lost'}, {'dosuments:', 'Documents'}, {'dotcuments:', 'Documents'}, {'dotuments:', 'Documents'}, {'doucments:', 'Documents'}, {'doucuments:', 'Documents'}, {'douments:', 'Documents'}, {'douuments:', 'Documents'}, {'dovcuments:', 'Documents'}, {'dovuments:', 'Documents'}, {'Documents', 'dowcuments:'}, {'Documents', 'dowuments:'}, {'Documents', 'doxcuments:'}, {'Documents', 'doxuments:'}, {'Documents', 'doycuments:'}, {'doyuments:', 'Documents'}, {'dozcuments:', 'Documents'}, {'dozuments:', 'Documents'}, {'dpcuments:', 'Documents'}, {'dpocuments:', 'Documents'}, {'dprocessors:', 'processors'}, {'dqcuments:', 'Documents'}, {'Documents', 'dqocuments:'}, {'Documents', 'drcuments:'}, {'drocessors:', 'processors'}, {'drocuments:', 'Documents'}, {'is', 'ds:'}, {'dsaid:', 'said'}, {'dscuments:', 'Documents'}, {'Documents', 'dsocuments:'}, {'Documents', 'dtcuments:'}, {'the', 'dthe:'}, {'to', 'dto:'}, {'dtocuments:', 'Documents'}, {'Typo', 'dtypo:'}, {'ducuments:', 'Documents'}, {'duocuments:', 'Documents'}, {'Documents', 'dvcuments:'}, {'dvocuments:', 'Documents'}, {'dwants:', 'wants'}, {'dwcuments:', 'Documents'}, {'dwocuments:', 'Documents'}, {'dword:', 'word'}, {'dxcuments:', 'Documents'}, {'dxocuments:', 'Documents'}, {'dycuments:', 'Documents'}, {'Documents', 'dyocuments:'}, {'Typo', 'dypo:'}, {'dzcuments:', 'Documents'}, {'dzocuments:', 'Documents'}, {'e:', 'he'}, {'add', 'eadd:'}, {'said', 'eaid:'}, {'wants', 'eants:'}, {'Better', 'ebetter:'}, {'Better', 'ebtter:'}, {'echecking:', 'Checking'}, {'eclose:', 'Close'}, {'add', 'edd:'}, {'edocuments:', 'Documents'}, {'he', 'ee:'}, {'eeneration:', 'generation'}, {'Better', 'eetter:'}, {'next', 'eext:'}, {'ef:', 'of'}, {'egeneration:', 'generation'}, {'egneration:', 'generation'}, {'he', 'eh:'}, {'ehe:', 'he', 'the'}, {'ehecking:', 'Checking'}, {'in', 'ein:'}, {'einc:', 'Inc'}, {'is', 'eis:'}, {'elose:', 'Lose', 'Close'}, {'Lost', 'elost:'}, {'in', 'en:'}, {'enc:', 'Inc'}, {'generation', 'eneration:'}, {'next', 'enext:'}, {'next', 'enxt:'}, {'to', 'eo:'}, {'Documents', 'eocuments:'}, {'eof:', 'of'}, {'eord:', 'word'}, {'Lose', 'eose:'}, {'Lost', 'eost:'}, {'eprocessors:', 'processors'}, {'erocessors:', 'processors'}, {'es:', 'is'}, {'esaid:', 'said'}, {'the', 'ethe:'}, {'to', 'eto:'}, {'Better', 'etter:'}, {'Typo', 'etypo:'}, {'wants', 'ewants:'}, {'eword:', 'word'}, {'ext:', 'next'}, {'Typo', 'eypo:'}, {'f:', 'of'}, {'add', 'fadd:'}, {'said', 'faid:'}, {'wants', 'fants:'}, {'Better', 'fbetter:'}, {'fchecking:', 'Checking'}, {'fclose:', 'Close'}, {'fdd:', 'add'}, {'fdocuments:', 'Documents'}, {'he', 'fe:'}, {'feneration:', 'generation'}, {'fetter:', 'Better'}, {'next', 'fext:'}, {'ff:', 'of'}, {'fgeneration:', 'generation'}, {'he', 'the', 'fhe:'}, {'fhecking:', 'Checking'}, {'fin:', 'in'}, {'finc:', 'Inc'}, {'fis:', 'is'}, {'Lose', 'flose:', 'Close'}, {'flost:', 'Lost'}, {'fn:', 'in'}, {'fnc:', 'Inc'}, {'fnext:', 'next'}, {'to', 'fo:', 'of'}, {'focuments:', 'Documents'}, {'fof:', 'of'}, {'ford:', 'word'}, {'Lose', 'fose:'}, {'Lost', 'fost:'}, {'fprocessors:', 'processors'}, {'frocessors:', 'processors'}, {'is', 'fs:'}, {'fsaid:', 'said'}, {'the', 'fthe:'}, {'to', 'fto:'}, {'Typo', 'ftypo:'}, {'fwants:', 'wants'}, {'fword:', 'word'}, {'Typo', 'fypo:'}, {'gadd:', 'add'}, {'generation', 'gaeneration:'}, {'said', 'gaid:'}, {'ganeration:', 'generation'}, {'gants:', 'wants'}, {'gbeneration:', 'generation'}, {'gbetter:', 'Better'}, {'gbneration:', 'generation'}, {'gceneration:', 'generation'}, {'gchecking:', 'Checking'}, {'gclose:', 'Close'}, {'gcneration:', 'generation'}, {'gdd:', 'add'}, {'gdeneration:', 'generation'}, {'gdneration:', 'generation'}, {'gdocuments:', 'Documents'}, {'he', 'ge:'}, {'geaeration:', 'generation'}, {'geaneration:', 'generation'}, {'geberation:', 'generation'}, {'gebneration:', 'generation'}, {'geceration:', 'generation'}, {'gecneration:', 'generation'}, {'gederation:', 'generation'}, {'gedneration:', 'generation'}, {'generation', 'geeeration:'}, {'geeneration:', 'generation'}, {'geenration:', 'generation'}, {'geeration:', 'generation'}, {'geferation:', 'generation'}, {'gefneration:', 'generation'}, {'gegeration:', 'generation'}, {'gegneration:', 'generation'}, {'geheration:', 'generation'}, {'gehneration:', 'generation'}, {'geieration:', 'generation'}, {'generation', 'geineration:'}, {'gejeration:', 'generation'}, {'gejneration:', 'generation'}, {'gekeration:', 'generation'}, {'gekneration:', 'generation'}, {'geleration:', 'generation'}, {'gelneration:', 'generation'}, {'generation', 'gemeration:'}, {'gemneration:', 'generation'}, {'genaeration:', 'generation'}, {'genaration:', 'generation'}, {'genberation:', 'generation'}, {'genbration:', 'generation'}, {'genceration:', 'generation'}, {'gencration:', 'generation'}, {'genderation:', 'generation'}, {'gendration:', 'generation'}, {'geneaation:', 'generation'}, {'genearation:', 'generation'}, {'geneartion:', 'generation'}, {'geneation:', 'generation'}, {'genebation:', 'generation'}, {'generation', 'genebration:'}, {'genecation:', 'generation'}, {'genecration:', 'generation'}, {'genedation:', 'generation'}, {'generation', 'genedration:'}, {'geneeation:', 'generation'}, {'generation', 'geneeration:'}, {'genefation:', 'generation'}, {'genefration:', 'generation'}, {'genegation:', 'generation'}, {'genegration:', 'generation'}, {'genehation:', 'generation'}, {'genehration:', 'generation'}, {'geneiation:', 'generation'}, {'geneiration:', 'generation'}, {'genejation:', 'generation'}, {'genejration:', 'generation'}, {'generation', 'genekation:'}, {'genekration:', 'generation'}, {'genelation:', 'generation'}, {'generation', 'genelration:'}, {'genemation:', 'generation'}, {'genemration:', 'generation'}, {'genenation:', 'generation'}, {'genenration:', 'generation'}, {'geneoation:', 'generation'}, {'geneoration:', 'generation'}, {'genepation:', 'generation'}, {'genepration:', 'generation'}, {'geneqation:', 'generation'}, {'geneqration:', 'generation'}, {'generaaion:', 'generation'}, {'generaation:', 'generation'}, {'generabion:', 'generation'}, {'generabtion:', 'generation'}, {'generacion:', 'generation'}, {'generaction:', 'generation'}, {'generadion:', 'generation'}, {'generadtion:', 'generation'}, {'generaeion:', 'generation'}, {'generaetion:', 'generation'}, {'generafion:', 'generation'}, {'generaftion:', 'generation'}, {'generagion:', 'generation'}, {'generagtion:', 'generation'}, {'generahion:', 'generation'}, {'generahtion:', 'generation'}, {'generaiion:', 'generation'}, {'generaion:', 'generation'}, {'generaition:', 'generation'}, {'generation', 'generaiton:'}, {'generajion:', 'generation'}, {'generajtion:', 'generation'}, {'generakion:', 'generation'}, {'generaktion:', 'generation'}, {'generation', 'generalion:'}, {'generaltion:', 'generation'}, {'generamion:', 'generation'}, {'generamtion:', 'generation'}, {'generanion:', 'generation'}, {'generantion:', 'generation'}, {'generaoion:', 'generation'}, {'generaotion:', 'generation'}, {'generapion:', 'generation'}, {'generation', 'generaption:'}, {'generaqion:', 'generation'}, {'generation', 'generaqtion:'}, {'generation', 'generarion:'}, {'generartion:', 'generation'}, {'generasion:', 'generation'}, {'generastion:', 'generation'}, {'generataion:', 'generation'}, {'generataon:', 'generation'}, {'generatbion:', 'generation'}, {'generatbon:', 'generation'}, {'generatcion:', 'generation'}, {'generatcon:', 'generation'}, {'generatdion:', 'generation'}, {'generatdon:', 'generation'}, {'generation', 'generateion:'}, {'generateon:', 'generation'}, {'generatfion:', 'generation'}, {'generatfon:', 'generation'}, {'generatgion:', 'generation'}, {'generatgon:', 'generation'}, {'generathion:', 'generation'}, {'generathon:', 'generation'}, {'generatian:', 'generation'}, {'generatiaon:', 'generation'}, {'generatibn:', 'generation'}, {'generatibon:', 'generation'}, {'generation', 'generaticn:'}, {'generaticon:', 'generation'}, {'generatidn:', 'generation'}, {'generatidon:', 'generation'}, {'generatien:', 'generation'}, {'generatieon:', 'generation'}, {'generatifn:', 'generation'}, {'generatifon:', 'generation'}, {'generatign:', 'generation'}, {'generatigon:', 'generation'}, {'generatihn:', 'generation'}, {'generatihon:', 'generation'}, {'generatiin:', 'generation'}, {'generatiion:', 'generation'}, {'generatijn:', 'generation'}, {'generatijon:', 'generation'}, {'generatikn:', 'generation'}, {'generatikon:', 'generation'}, {'generatiln:', 'generation'}, {'generatilon:', 'generation'}, {'generatimn:', 'generation'}, {'generatimon:', 'generation'}, {'generatin:', 'generation'}, {'generatinn:', 'generation'}, {'generatino:', 'generation'}, {'generatinon:', 'generation'}, {'generatio:', 'generation'}, {'generatioa:', 'generation'}, {'generatioan:', 'generation'}, {'generatiob:', 'generation'}, {'generatiobn:', 'generation'}, {'generatioc:', 'generation'}, {'generation', 'generatiocn:'}, {'generatiod:', 'generation'}, {'generatiodn:', 'generation'}, {'generatioe:', 'generation'}, {'generatioen:', 'generation'}, {'generatiof:', 'generation'}, {'generation', 'generatiofn:'}, {'generatiog:', 'generation'}, {'generation', 'generatiogn:'}, {'generatioh:', 'generation'}, {'generatiohn:', 'generation'}, {'generatioi:', 'generation'}, {'generatioin:', 'generation'}, {'generatioj:', 'generation'}, {'generatiojn:', 'generation'}, {'generation', 'generatiok:'}, {'generatiokn:', 'generation'}, {'generatiol:', 'generation'}, {'generatioln:', 'generation'}, {'generation', 'generatiom:'}, {'generatiomn:', 'generation'}, {'generationn:', 'generation'}, {'generatioo:', 'generation'}, {'generatioon:', 'generation'}, {'generatiop:', 'generation'}, {'generation', 'generatiopn:'}, {'generatioq:', 'generation'}, {'generatioqn:', 'generation'}, {'generatior:', 'generation'}, {'generatiorn:', 'generation'}, {'generatios:', 'generation'}, {'generation', 'generatiosn:'}, {'generatiot:', 'generation'}, {'generation', 'generatiotn:'}, {'generatiou:', 'generation'}, {'generatioun:', 'generation'}, {'generatiov:', 'generation'}, {'generatiovn:', 'generation'}, {'generatiow:', 'generation'}, {'generatiown:', 'generation'}, {'generatiox:', 'generation'}, {'generatioxn:', 'generation'}, {'generatioy:', 'generation'}, {'generatioyn:', 'generation'}, {'generatioz:', 'generation'}, {'generatiozn:', 'generation'}, {'generation', 'generatipn:'}, {'generatipon:', 'generation'}, {'generatiqn:', 'generation'}, {'generatiqon:', 'generation'}, {'generation', 'generatirn:'}, {'generatiron:', 'generation'}, {'generatisn:', 'generation'}, {'generatison:', 'generation'}, {'generatitn:', 'generation'}, {'generatiton:', 'generation'}, {'generatiun:', 'generation'}, {'generatiuon:', 'generation'}, {'generativn:', 'generation'}, {'generativon:', 'generation'}, {'generatiwn:', 'generation'}, {'generatiwon:', 'generation'}, {'generatixn:', 'generation'}, {'generatixon:', 'generation'}, {'generatiyn:', 'generation'}, {'generatiyon:', 'generation'}, {'generatizn:', 'generation'}, {'generation', 'generatizon:'}, {'generatjion:', 'generation'}, {'generatjon:', 'generation'}, {'generation', 'generatkion:'}, {'generatkon:', 'generation'}, {'generatlion:', 'generation'}, {'generatlon:', 'generation'}, {'generation', 'generatmion:'}, {'generatmon:', 'generation'}, {'generatnion:', 'generation'}, {'generation', 'generatnon:'}, {'generation', 'generatoin:'}, {'generatoion:', 'generation'}, {'generaton:', 'generation'}, {'generatoon:', 'generation'}, {'generatpion:', 'generation'}, {'generation', 'generatpon:'}, {'generatqion:', 'generation'}, {'generatqon:', 'generation'}, {'generatrion:', 'generation'}, {'generatron:', 'generation'}, {'generatsion:', 'generation'}, {'generatson:', 'generation'}, {'generattion:', 'generation'}, {'generatton:', 'generation'}, {'generatuion:', 'generation'}, {'generation', 'generatuon:'}, {'generation', 'generatvion:'}, {'generatvon:', 'generation'}, {'generatwion:', 'generation'}, {'generatwon:', 'generation'}, {'generatxion:', 'generation'}, {'generatxon:', 'generation'}, {'generatyion:', 'generation'}, {'generatyon:', 'generation'}, {'generatzion:', 'generation'}, {'generatzon:', 'generation'}, {'generauion:', 'generation'}, {'generaution:', 'generation'}, {'generavion:', 'generation'}, {'generavtion:', 'generation'}, {'generawion:', 'generation'}, {'generawtion:', 'generation'}, {'generaxion:', 'generation'}, {'generaxtion:', 'generation'}, {'generation', 'generayion:'}, {'generaytion:', 'generation'}, {'generazion:', 'generation'}, {'generaztion:', 'generation'}, {'generbation:', 'generation'}, {'generbtion:', 'generation'}, {'genercation:', 'generation'}, {'generction:', 'generation'}, {'generation', 'generdation:'}, {'generdtion:', 'generation'}, {'genereation:', 'generation'}, {'generetion:', 'generation'}, {'generfation:', 'generation'}, {'generftion:', 'generation'}, {'genergation:', 'generation'}, {'genergtion:', 'generation'}, {'generhation:', 'generation'}, {'generhtion:', 'generation'}, {'generiation:', 'generation'}, {'generition:', 'generation'}, {'generjation:', 'generation'}, {'generjtion:', 'generation'}, {'generkation:', 'generation'}, {'generktion:', 'generation'}, {'generlation:', 'generation'}, {'generltion:', 'generation'}, {'genermation:', 'generation'}, {'genermtion:', 'generation'}, {'genernation:', 'generation'}, {'generntion:', 'generation'}, {'generoation:', 'generation'}, {'generotion:', 'generation'}, {'generpation:', 'generation'}, {'generation', 'generption:'}, {'generqation:', 'generation'}, {'generqtion:', 'generation'}, {'generration:', 'generation'}, {'generrtion:', 'generation'}, {'genersation:', 'generation'}, {'generstion:', 'generation'}, {'genertaion:', 'generation'}, {'genertation:', 'generation'}, {'genertion:', 'generation'}, {'generttion:', 'generation'}, {'generuation:', 'generation'}, {'generution:', 'generation'}, {'genervation:', 'generation'}, {'genervtion:', 'generation'}, {'generwation:', 'generation'}, {'generwtion:', 'generation'}, {'generxation:', 'generation'}, {'generxtion:', 'generation'}, {'generyation:', 'generation'}, {'generytion:', 'generation'}, {'generzation:', 'generation'}, {'generztion:', 'generation'}, {'genesation:', 'generation'}, {'genesration:', 'generation'}, {'genetation:', 'generation'}, {'genetration:', 'generation'}, {'geneuation:', 'generation'}, {'generation', 'geneuration:'}, {'genevation:', 'generation'}, {'genevration:', 'generation'}, {'genewation:', 'generation'}, {'genewration:', 'generation'}, {'genexation:', 'generation'}, {'genexration:', 'generation'}, {'geneyation:', 'generation'}, {'generation', 'geneyration:'}, {'genezation:', 'generation'}, {'genezration:', 'generation'}, {'genferation:', 'generation'}, {'genfration:', 'generation'}, {'gengeration:', 'generation'}, {'gengration:', 'generation'}, {'genheration:', 'generation'}, {'generation', 'genhration:'}, {'genieration:', 'generation'}, {'geniration:', 'generation'}, {'genjeration:', 'generation'}, {'generation', 'genjration:'}, {'genkeration:', 'generation'}, {'genkration:', 'generation'}, {'genleration:', 'generation'}, {'genlration:', 'generation'}, {'genmeration:', 'generation'}, {'genmration:', 'generation'}, {'genneration:', 'generation'}, {'gennration:', 'generation'}, {'genoeration:', 'generation'}, {'genoration:', 'generation'}, {'genperation:', 'generation'}, {'generation', 'genpration:'}, {'generation', 'genqeration:'}, {'genqration:', 'generation'}, {'genration:', 'generation'}, {'genreation:', 'generation'}, {'genreration:', 'generation'}, {'genrration:', 'generation'}, {'genseration:', 'generation'}, {'gensration:', 'generation'}, {'genteration:', 'generation'}, {'gentration:', 'generation'}, {'genueration:', 'generation'}, {'genuration:', 'generation'}, {'genveration:', 'generation'}, {'genvration:', 'generation'}, {'genweration:', 'generation'}, {'genwration:', 'generation'}, {'genxeration:', 'generation'}, {'genxration:', 'generation'}, {'genyeration:', 'generation'}, {'genyration:', 'generation'}, {'genzeration:', 'generation'}, {'genzration:', 'generation'}, {'geoeration:', 'generation'}, {'generation', 'geoneration:'}, {'geperation:', 'generation'}, {'gepneration:', 'generation'}, {'geqeration:', 'generation'}, {'geqneration:', 'generation'}, {'gereration:', 'generation'}, {'gerneration:', 'generation'}, {'geseration:', 'generation'}, {'gesneration:', 'generation'}, {'generation', 'geteration:'}, {'generation', 'getneration:'}, {'getter:', 'Better'}, {'geueration:', 'generation'}, {'geuneration:', 'generation'}, {'geveration:', 'generation'}, {'gevneration:', 'generation'}, {'geweration:', 'generation'}, {'gewneration:', 'generation'}, {'gexeration:', 'generation'}, {'gexneration:', 'generation'}, {'gext:', 'next'}, {'geyeration:', 'generation'}, {'generation', 'geyneration:'}, {'gezeration:', 'generation'}, {'gezneration:', 'generation'}, {'gf:', 'of'}, {'gfeneration:', 'generation'}, {'gfneration:', 'generation'}, {'ggeneration:', 'generation'}, {'ggneration:', 'generation'}, {'he', 'the', 'ghe:'}, {'ghecking:', 'Checking'}, {'gheneration:', 'generation'}, {'ghneration:', 'generation'}, {'generation', 'gieneration:'}, {'in', 'gin:'}, {'ginc:', 'Inc'}, {'generation', 'gineration:'}, {'gis:', 'is'}, {'gjeneration:', 'generation'}, {'gjneration:', 'generation'}, {'gkeneration:', 'generation'}, {'generation', 'gkneration:'}, {'gleneration:', 'generation'}, {'glneration:', 'generation'}, {'Lose', 'glose:', 'Close'}, {'Lost', 'glost:'}, {'generation', 'gmeneration:'}, {'gmneration:', 'generation'}, {'in', 'gn:'}, {'gnc:', 'Inc'}, {'gneeration:', 'generation'}, {'gneneration:', 'generation'}, {'gneration:', 'generation'}, {'next', 'gnext:'}, {'gnneration:', 'generation'}, {'go:', 'to'}, {'Documents', 'gocuments:'}, {'goeneration:', 'generation'}, {'of', 'gof:'}, {'goneration:', 'generation'}, {'gord:', 'word'}, {'Lose', 'gose:'}, {'Lost', 'gost:'}, {'gpeneration:', 'generation'}, {'gpneration:', 'generation'}, {'gprocessors:', 'processors'}, {'gqeneration:', 'generation'}, {'generation', 'gqneration:'}, {'greneration:', 'generation'}, {'grneration:', 'generation'}, {'processors', 'grocessors:'}, {'is', 'gs:'}, {'said', 'gsaid:'}, {'gseneration:', 'generation'}, {'gsneration:', 'generation'}, {'generation', 'gteneration:'}, {'the', 'gthe:'}, {'gtneration:', 'generation'}, {'to', 'gto:'}, {'Typo', 'gtypo:'}, {'gueneration:', 'generation'}, {'generation', 'guneration:'}, {'gveneration:', 'generation'}, {'gvneration:', 'generation'}, {'wants', 'gwants:'}, {'gweneration:', 'generation'}, {'gwneration:', 'generation'}, {'word', 'gword:'}, {'gxeneration:', 'generation'}, {'gxneration:', 'generation'}, {'gyeneration:', 'generation'}, {'gyneration:', 'generation'}, {'Typo', 'gypo:'}, {'gzeneration:', 'generation'}, {'gzneration:', 'generation'}, {'he', 'h:'}, {'he', 'ha:'}, {'add', 'hadd:'}, {'hae:', 'he'}, {'haid:', 'said'}, {'wants', 'hants:'}, {'hb:', 'he'}, {'hbe:', 'he'}, {'Better', 'hbetter:'}, {'hc:', 'he'}, {'he', 'hce:'}, {'hcecking:', 'Checking'}, {'Checking', 'hchecking:'}, {'hclose:', 'Close'}, {'he', 'hd:'}, {'add', 'hdd:'}, {'hde:', 'he'}, {'hdocuments:', 'Documents'}, {'the', 'he:'}, {'hecking:', 'Checking'}, {'hee:', 'he'}, {'heneration:', 'generation'}, {'Better', 'hetter:'}, {'next', 'hext:'}, {'he', 'of', 'hf:'}, {'he', 'hfe:'}, {'he', 'hg:'}, {'he', 'hge:'}, {'hgeneration:', 'generation'}, {'he', 'hh:'}, {'hhe:', 'he', 'the'}, {'hhecking:', 'Checking'}, {'he', 'hi:'}, {'he', 'hie:'}, {'hin:', 'in'}, {'Inc', 'hinc:'}, {'his:', 'is'}, {'he', 'hj:'}, {'he', 'hje:'}, {'he', 'hk:'}, {'he', 'hke:'}, {'he', 'hl:'}, {'he', 'hle:'}, {'Lose', 'hlose:', 'Close'}, {'Lost', 'hlost:'}, {'hm:', 'he'}, {'he', 'hme:'}, {'he', 'in', 'hn:'}, {'hnc:', 'Inc'}, {'he', 'hne:'}, {'next', 'hnext:'}, {'he', 'to', 'ho:'}, {'Documents', 'hocuments:'}, {'hoe:', 'he'}, {'hof:', 'of'}, {'hord:', 'word'}, {'hose:', 'Lose'}, {'Lost', 'host:'}, {'he', 'hp:'}, {'he', 'hpe:'}, {'hprocessors:', 'processors'}, {'he', 'hq:'}, {'he', 'hqe:'}, {'hr:', 'he'}, {'he', 'hre:'}, {'processors', 'hrocessors:'}, {'hs:', 'he', 'is'}, {'said', 'hsaid:'}, {'he', 'hse:'}, {'he', 'ht:'}, {'he', 'the', 'hte:'}, {'the', 'hthe:'}, {'to', 'hto:'}, {'Typo', 'htypo:'}, {'he', 'hu:'}, {'he', 'hue:'}, {'he', 'hv:'}, {'he', 'hve:'}, {'he', 'hw:'}, {'hwants:', 'wants'}, {'he', 'hwe:'}, {'hword:', 'word'}, {'he', 'hx:'}, {'he', 'hxe:'}, {'hy:', 'he'}, {'he', 'hye:'}, {'Typo', 'hypo:'}, {'he', 'hz:'}, {'he', 'hze:'}, {'in', 'i:', 'is'}, {'ia:', 'in', 'is'}, {'Inc', 'iac:'}, {'add', 'iadd:'}, {'iaid:', 'said'}, {'ian:', 'in'}, {'ianc:', 'Inc'}, {'wants', 'iants:'}, {'ias:', 'is'}, {'in', 'is', 'ib:'}, {'ibc:', 'Inc'}, {'Better', 'ibetter:'}, {'in', 'ibn:'}, {'Inc', 'ibnc:'}, {'ibs:', 'is'}, {'in', 'is', 'Inc', 'ic:'}, {'icc:', 'Inc'}, {'Checking', 'ichecking:'}, {'iclose:', 'Close'}, {'in', 'icn:', 'Inc'}, {'Inc', 'icnc:'}, {'ics:', 'is'}, {'id:', 'in', 'is'}, {'idc:', 'Inc'}, {'add', 'idd:'}, {'idn:', 'in'}, {'idnc:', 'Inc'}, {'idocuments:', 'Documents'}, {'ids:', 'is'}, {'he', 'in', 'ie:', 'is'}, {'iec:', 'Inc'}, {'in', 'ien:'}, {'ienc:', 'Inc'}, {'ieneration:', 'generation'}, {'is', 'ies:'}, {'ietter:', 'Better'}, {'iext:', 'next'}, {'in', 'is', 'if:', 'of'}, {'Inc', 'ifc:'}, {'in', 'ifn:'}, {'Inc', 'ifnc:'}, {'is', 'ifs:'}, {'in', 'is', 'ig:'}, {'igc:', 'Inc'}, {'generation', 'igeneration:'}, {'in', 'ign:'}, {'ignc:', 'Inc'}, {'igs:', 'is'}, {'in', 'is', 'ih:'}, {'ihc:', 'Inc'}, {'he', 'the', 'ihe:'}, {'Checking', 'ihecking:'}, {'in', 'ihn:'}, {'ihnc:', 'Inc'}, {'is', 'ihs:'}, {'in', 'ii:', 'is'}, {'iic:', 'Inc'}, {'in', 'iin:'}, {'Inc', 'iinc:'}, {'is', 'iis:'}, {'ij:', 'in', 'is'}, {'Inc', 'ijc:'}, {'ijn:', 'in'}, {'ijnc:', 'Inc'}, {'is', 'ijs:'}, {'in', 'ik:', 'is'}, {'ikc:', 'Inc'}, {'in', 'ikn:'}, {'iknc:', 'Inc'}, {'is', 'iks:'}, {'il:', 'in', 'is'}, {'ilc:', 'Inc'}, {'iln:', 'in'}, {'Inc', 'ilnc:'}, {'ilose:', 'Close', 'Lose'}, {'Lost', 'ilost:'}, {'is', 'ils:'}, {'in', 'im:', 'is'}, {'imc:', 'Inc'}, {'in', 'imn:'}, {'imnc:', 'Inc'}, {'is', 'ims:'}, {'in:', 'is', 'Inc'}, {'Inc', 'ina:'}, {'Inc', 'inac:'}, {'Inc', 'inb:'}, {'inbc:', 'Inc'}, {'Inc', 'inc:'}, {'incc:', 'Inc'}, {'ind:', 'Inc'}, {'indc:', 'Inc'}, {'Inc', 'ine:'}, {'inec:', 'Inc'}, {'inext:', 'next'}, {'Inc', 'inf:'}, {'infc:', 'Inc'}, {'ing:', 'Inc'}, {'Inc', 'ingc:'}, {'Inc', 'inh:'}, {'inhc:', 'Inc'}, {'ini:', 'Inc'}, {'inic:', 'Inc'}, {'Inc', 'inj:'}, {'injc:', 'Inc'}, {'Inc', 'ink:'}, {'inkc:', 'Inc'}, {'inl:', 'Inc'}, {'Inc', 'inlc:'}, {'Inc', 'inm:'}, {'inmc:', 'Inc'}, {'in', 'Inc', 'inn:'}, {'innc:', 'Inc'}, {'ino:', 'Inc'}, {'inoc:', 'Inc'}, {'inp:', 'Inc'}, {'inpc:', 'Inc'}, {'inq:', 'Inc'}, {'inqc:', 'Inc'}, {'inr:', 'Inc'}, {'inrc:', 'Inc'}, {'is', 'Inc', 'ins:'}, {'Inc', 'insc:'}, {'Inc', 'int:'}, {'intc:', 'Inc'}, {'Inc', 'inu:'}, {'inuc:', 'Inc'}, {'inv:', 'Inc'}, {'Inc', 'invc:'}, {'Inc', 'inw:'}, {'inwc:', 'Inc'}, {'Inc', 'inx:'}, {'Inc', 'inxc:'}, {'iny:', 'Inc'}, {'inyc:', 'Inc'}, {'inz:', 'Inc'}, {'inzc:', 'Inc'}, {'in', 'is', 'to', 'io:'}, {'Inc', 'ioc:'}, {'iocuments:', 'Documents'}, {'iof:', 'of'}, {'in', 'ion:'}, {'ionc:', 'Inc'}, {'iord:', 'word'}, {'is', 'ios:'}, {'Lose', 'iose:'}, {'iost:', 'Lost'}, {'ip:', 'in', 'is'}, {'Inc', 'ipc:'}, {'in', 'ipn:'}, {'Inc', 'ipnc:'}, {'iprocessors:', 'processors'}, {'ips:', 'is'}, {'in', 'iq:', 'is'}, {'iqc:', 'Inc'}, {'in', 'iqn:'}, {'Inc', 'iqnc:'}, {'is', 'iqs:'}, {'in', 'is', 'ir:'}, {'irc:', 'Inc'}, {'in', 'irn:'}, {'irnc:', 'Inc'}, {'irocessors:', 'processors'}, {'is', 'irs:'}, {'is:', 'in'}, {'said', 'isaid:'}, {'isc:', 'Inc'}, {'in', 'isn:'}, {'isnc:', 'Inc'}, {'iss:', 'is'}, {'in', 'is', 'it:'}, {'itc:', 'Inc'}, {'ithe:', 'the'}, {'itn:', 'in'}, {'itnc:', 'Inc'}, {'to', 'ito:'}, {'is', 'its:'}, {'Typo', 'itypo:'}, {'in', 'is', 'iu:'}, {'Inc', 'iuc:'}, {'iun:', 'in'}, {'Inc', 'iunc:'}, {'ius:', 'is'}, {'in', 'is', 'iv:'}, {'ivc:', 'Inc'}, {'in', 'ivn:'}, {'ivnc:', 'Inc'}, {'ivs:', 'is'}, {'in', 'is', 'iw:'}, {'wants', 'iwants:'}, {'Inc', 'iwc:'}, {'iwn:', 'in'}, {'iwnc:', 'Inc'}, {'iword:', 'word'}, {'iws:', 'is'}, {'in', 'is', 'ix:'}, {'Inc', 'ixc:'}, {'ixn:', 'in'}, {'ixnc:', 'Inc'}, {'ixs:', 'is'}, {'in', 'iy:', 'is'}, {'iyc:', 'Inc'}, {'in', 'iyn:'}, {'iync:', 'Inc'}, {'Typo', 'iypo:'}, {'iys:', 'is'}, {'iz:', 'in', 'is'}, {'izc:', 'Inc'}, {'in', 'izn:'}, {'Inc', 'iznc:'}, {'izs:', 'is'}, {'add', 'jadd:'}, {'said', 'jaid:'}, {'wants', 'jants:'}, {'jbetter:', 'Better'}, {'jchecking:', 'Checking'}, {'Close', 'jclose:'}, {'jdd:', 'add'}, {'Documents', 'jdocuments:'}, {'he', 'je:'}, {'jeneration:', 'generation'}, {'Better', 'jetter:'}, {'jext:', 'next'}, {'jf:', 'of'}, {'jgeneration:', 'generation'}, {'he', 'the', 'jhe:'}, {'Checking', 'jhecking:'}, {'in', 'jin:'}, {'jinc:', 'Inc'}, {'is', 'jis:'}, {'Lose', 'Close', 'jlose:'}, {'Lost', 'jlost:'}, {'in', 'jn:'}, {'Inc', 'jnc:'}, {'next', 'jnext:'}, {'to', 'jo:'}, {'Documents', 'jocuments:'}, {'of', 'jof:'}, {'jord:', 'word'}, {'jose:', 'Lose'}, {'Lost', 'jost:'}, {'jprocessors:', 'processors'}, {'jrocessors:', 'processors'}, {'js:', 'is'}, {'jsaid:', 'said'}, {'the', 'jthe:'}, {'jto:', 'to'}, {'Typo', 'jtypo:'}, {'wants', 'jwants:'}, {'jword:', 'word'}, {'Typo', 'jypo:'}, {'kadd:', 'add'}, {'said', 'kaid:'}, {'wants', 'kants:'}, {'Better', 'kbetter:'}, {'Checking', 'kchecking:'}, {'kclose:', 'Close'}, {'add', 'kdd:'}, {'Documents', 'kdocuments:'}, {'ke:', 'he'}, {'keneration:', 'generation'}, {'Better', 'ketter:'}, {'kext:', 'next'}, {'kf:', 'of'}, {'generation', 'kgeneration:'}, {'khe:', 'he', 'the'}, {'Checking', 'khecking:'}, {'in', 'kin:'}, {'Inc', 'kinc:'}, {'is', 'kis:'}, {'klose:', 'Close', 'Lose'}, {'Lost', 'klost:'}, {'in', 'kn:'}, {'knc:', 'Inc'}, {'next', 'knext:'}, {'ko:', 'to'}, {'kocuments:', 'Documents'}, {'kof:', 'of'}, {'kord:', 'word'}, {'Lose', 'kose:'}, {'Lost', 'kost:'}, {'kprocessors:', 'processors'}, {'krocessors:', 'processors'}, {'ks:', 'is'}, {'said', 'ksaid:'}, {'kthe:', 'the'}, {'kto:', 'to'}, {'Typo', 'ktypo:'}, {'kwants:', 'wants'}, {'word', 'kword:'}, {'Typo', 'kypo:'}, {'add', 'ladd:'}, {'said', 'laid:'}, {'wants', 'lants:'}, {'laose:', 'Lose'}, {'Lost', 'laost:'}, {'lase:', 'Lose'}, {'Lost', 'last:'}, {'Better', 'lbetter:'}, {'lbose:', 'Lose'}, {'Lost', 'lbost:'}, {'Lose', 'lbse:'}, {'Lost', 'lbst:'}, {'lchecking:', 'Checking'}, {'lclose:', 'Close'}, {'Lose', 'Close', 'lcose:'}, {'Lost', 'lcost:'}, {'Lose', 'lcse:'}, {'lcst:', 'Lost'}, {'add', 'ldd:'}, {'Documents', 'ldocuments:'}, {'ldose:', 'Lose'}, {'Lost', 'ldost:'}, {'Lose', 'ldse:'}, {'Lost', 'ldst:'}, {'he', 'le:'}, {'leneration:', 'generation'}, {'Lose', 'leose:'}, {'Lost', 'leost:'}, {'Lose', 'lese:'}, {'Lost', 'lest:'}, {'Better', 'letter:'}, {'lext:', 'next'}, {'lf:', 'of'}, {'Lose', 'lfose:'}, {'Lost', 'lfost:'}, {'Lose', 'lfse:'}, {'Lost', 'lfst:'}, {'lgeneration:', 'generation'}, {'Lose', 'lgose:'}, {'Lost', 'lgost:'}, {'Lose', 'lgse:'}, {'Lost', 'lgst:'}, {'he', 'the', 'lhe:'}, {'Checking', 'lhecking:'}, {'lhose:', 'Lose'}, {'Lost', 'lhost:'}, {'lhse:', 'Lose'}, {'Lost', 'lhst:'}, {'in', 'lin:'}, {'linc:', 'Inc'}, {'Lose', 'liose:'}, {'Lost', 'liost:'}, {'is', 'lis:'}, {'lise:', 'Lose'}, {'Lost', 'list:'}, {'ljose:', 'Lose'}, {'ljost:', 'Lost'}, {'ljse:', 'Lose'}, {'Lost', 'ljst:'}, {'Lose', 'lkose:'}, {'Lost', 'lkost:'}, {'lkse:', 'Lose'}, {'Lost', 'lkst:'}, {'llose:', 'Lose', 'Close'}, {'Lost', 'llost:'}, {'llse:', 'Lose'}, {'Lost', 'llst:'}, {'Lose', 'lmose:'}, {'Lost', 'lmost:'}, {'Lose', 'lmse:'}, {'lmst:', 'Lost'}, {'ln:', 'in'}, {'Inc', 'lnc:'}, {'lnext:', 'next'}, {'lnose:', 'Lose'}, {'Lost', 'lnost:'}, {'lnse:', 'Lose'}, {'lnst:', 'Lost'}, {'to', 'lo:'}, {'Lose', 'loae:'}, {'loase:', 'Lose'}, {'loast:', 'Lost'}, {'Lost', 'loat:'}, {'lobe:', 'Lose'}, {'Lose', 'lobse:'}, {'Lost', 'lobst:'}, {'Lost', 'lobt:'}, {'Lose', 'loce:'}, {'locse:', 'Lose'}, {'Lost', 'locst:'}, {'Lost', 'loct:'}, {'locuments:', 'Documents'}, {'lode:', 'Lose'}, {'Lose', 'lodse:'}, {'Lost', 'lodst:'}, {'Lost', 'lodt:'}, {'loe:', 'Lose'}, {'Lose', 'loee:'}, {'Lose', 'loes:'}, {'Lose', 'loese:'}, {'Lost', 'loest:'}, {'Lost', 'loet:'}, {'lof:', 'of'}, {'lofe:', 'Lose'}, {'Lose', 'lofse:'}, {'Lost', 'lofst:'}, {'Lost', 'loft:'}, {'loge:', 'Lose'}, {'Lose', 'logse:'}, {'Lost', 'logst:'}, {'Lost', 'logt:'}, {'Lose', 'lohe:'}, {'Lose', 'lohse:'}, {'Lost', 'lohst:'}, {'Lost', 'loht:'}, {'loie:', 'Lose'}, {'Lose', 'loise:'}, {'Lost', 'loist:'}, {'Lost', 'loit:'}, {'Lose', 'loje:'}, {'lojse:', 'Lose'}, {'Lost', 'lojst:'}, {'Lost', 'lojt:'}, {'loke:', 'Lose'}, {'lokse:', 'Lose'}, {'Lost', 'lokst:'}, {'Lost', 'lokt:'}, {'Lose', 'lole:'}, {'lolse:', 'Lose'}, {'Lost', 'lolst:'}, {'lolt:', 'Lost'}, {'Lose', 'lome:'}, {'Lose', 'lomse:'}, {'Lost', 'lomst:'}, {'Lost', 'lomt:'}, {'lone:', 'Lose'}, {'Lose', 'lonse:'}, {'Lost', 'lonst:'}, {'Lost', 'lont:'}, {'looe:', 'Lose'}, {'Lose', 'loose:'}, {'loost:', 'Lost'}, {'Lost', 'loot:'}, {'lope:', 'Lose'}, {'Lose', 'lopse:'}, {'Lost', 'lopst:'}, {'Lost', 'lopt:'}, {'Lose', 'loqe:'}, {'loqse:', 'Lose'}, {'Lost', 'loqst:'}, {'loqt:', 'Lost'}, {'lord:', 'word'}, {'Lose', 'lore:'}, {'lorse:', 'Lose'}, {'lorst:', 'Lost'}, {'Lost', 'lort:'}, {'Lost', 'los:', 'Lose'}, {'Lost', 'losa:', 'Lose'}, {'losae:', 'Lose'}, {'Lost', 'losat:'}, {'Lost', 'Lose', 'losb:'}, {'Lose', 'losbe:'}, {'losbt:', 'Lost'}, {'Lost', 'losc:', 'Lose'}, {'losce:', 'Lose'}, {'Lost', 'losct:'}, {'Lost', 'Lose', 'losd:'}, {'Lose', 'losde:'}, {'Lost', 'losdt:'}, {'lose:', 'Lost', 'Lose', 'Close'}, {'Lose', 'losee:'}, {'Lost', 'loset:'}, {'Lost', 'Lose', 'losf:'}, {'losfe:', 'Lose'}, {'Lost', 'losft:'}, {'Lost', 'Lose', 'losg:'}, {'losge:', 'Lose'}, {'losgt:', 'Lost'}, {'losh:', 'Lost', 'Lose'}, {'loshe:', 'Lose'}, {'Lost', 'losht:'}, {'losi:', 'Lost', 'Lose'}, {'losie:', 'Lose'}, {'Lost', 'losit:'}, {'losj:', 'Lost', 'Lose'}, {'Lose', 'losje:'}, {'Lost', 'losjt:'}, {'losk:', 'Lost', 'Lose'}, {'Lose', 'loske:'}, {'Lost', 'loskt:'}, {'losl:', 'Lost', 'Lose'}, {'Lose', 'losle:'}, {'Lost', 'loslt:'}, {'losm:', 'Lost', 'Lose'}, {'losme:', 'Lose'}, {'Lost', 'losmt:'}, {'losn:', 'Lost', 'Lose'}, {'losne:', 'Lose'}, {'losnt:', 'Lost'}, {'Lost', 'Lose', 'loso:'}, {'Lose', 'losoe:'}, {'Lost', 'losot:'}, {'losp:', 'Lost', 'Lose'}, {'Lose', 'lospe:'}, {'lospt:', 'Lost'}, {'Lost', 'losq:', 'Lose'}, {'losqe:', 'Lose'}, {'Lost', 'losqt:'}, {'Lost', 'Lose', 'losr:'}, {'losre:', 'Lose'}, {'Lost', 'losrt:'}, {'Lost', 'Lose', 'loss:'}, {'losse:', 'Lose'}, {'Lost', 'losst:'}, {'lost:', 'Lost', 'Lose'}, {'loste:', 'Lose'}, {'Lost', 'lostt:'}, {'Lost', 'Lose', 'losu:'}, {'Lose', 'losue:'}, {'losut:', 'Lost'}, {'Lost', 'Lose', 'losv:'}, {'losve:', 'Lose'}, {'Lost', 'losvt:'}, {'losw:', 'Lost', 'Lose'}, {'Lose', 'loswe:'}, {'Lost', 'loswt:'}, {'losx:', 'Lost', 'Lose'}, {'Lose', 'losxe:'}, {'Lost', 'losxt:'}, {'losy:', 'Lost', 'Lose'}, {'Lose', 'losye:'}, {'losyt:', 'Lost'}, {'Lost', 'Lose', 'losz:'}, {'losze:', 'Lose'}, {'Lost', 'loszt:'}, {'lot:', 'Lost'}, {'lote:', 'Lose'}, {'Lost', 'lots:'}, {'lotse:', 'Lose'}, {'Lost', 'lotst:'}, {'Lost', 'lott:'}, {'loue:', 'Lose'}, {'louse:', 'Lose'}, {'Lost', 'loust:'}, {'lout:', 'Lost'}, {'Lose', 'love:'}, {'Lose', 'lovse:'}, {'Lost', 'lovst:'}, {'Lost', 'lovt:'}, {'Lose', 'lowe:'}, {'lowse:', 'Lose'}, {'Lost', 'lowst:'}, {'lowt:', 'Lost'}, {'loxe:', 'Lose'}, {'loxse:', 'Lose'}, {'Lost', 'loxst:'}, {'Lost', 'loxt:'}, {'loye:', 'Lose'}, {'Lose', 'loyse:'}, {'Lost', 'loyst:'}, {'loyt:', 'Lost'}, {'Lose', 'loze:'}, {'lozse:', 'Lose'}, {'Lost', 'lozst:'}, {'Lost', 'lozt:'}, {'lpose:', 'Lose'}, {'Lost', 'lpost:'}, {'lprocessors:', 'processors'}, {'Lose', 'lpse:'}, {'Lost', 'lpst:'}, {'lqose:', 'Lose'}, {'Lost', 'lqost:'}, {'Lose', 'lqse:'}, {'Lost', 'lqst:'}, {'lrocessors:', 'processors'}, {'Lose', 'lrose:'}, {'Lost', 'lrost:'}, {'lrse:', 'Lose'}, {'Lost', 'lrst:'}, {'ls:', 'is'}, {'said', 'lsaid:'}, {'lse:', 'Lose'}, {'Lose', 'lsoe:'}, {'lsose:', 'Lose'}, {'Lost', 'lsost:'}, {'Lost', 'lsot:'}, {'Lose', 'lsse:'}, {'lsst:', 'Lost'}, {'lst:', 'Lost'}, {'the', 'lthe:'}, {'to', 'lto:'}, {'ltose:', 'Lose'}, {'ltost:', 'Lost'}, {'ltse:', 'Lose'}, {'Lost', 'ltst:'}, {'Typo', 'ltypo:'}, {'Lose', 'luose:'}, {'Lost', 'luost:'}, {'Lose', 'luse:'}, {'Lost', 'lust:'}, {'Lose', 'lvose:'}, {'Lost', 'lvost:'}, {'lvse:', 'Lose'}, {'Lost', 'lvst:'}, {'wants', 'lwants:'}, {'lword:', 'word'}, {'Lose', 'lwose:'}, {'Lost', 'lwost:'}, {'Lose', 'lwse:'}, {'Lost', 'lwst:'}, {'Lose', 'lxose:'}, {'Lost', 'lxost:'}, {'Lose', 'lxse:'}, {'Lost', 'lxst:'}, {'Lose', 'lyose:'}, {'Lost', 'lyost:'}, {'Typo', 'lypo:'}, {'lyse:', 'Lose'}, {'lyst:', 'Lost'}, {'lzose:', 'Lose'}, {'Lost', 'lzost:'}, {'Lose', 'lzse:'}, {'Lost', 'lzst:'}, {'madd:', 'add'}, {'said', 'maid:'}, {'wants', 'mants:'}, {'Better', 'mbetter:'}, {'mchecking:', 'Checking'}, {'mclose:', 'Close'}, {'mdd:', 'add'}, {'mdocuments:', 'Documents'}, {'me:', 'he'}, {'meneration:', 'generation'}, {'Better', 'metter:'}, {'next', 'mext:'}, {'mf:', 'of'}, {'mgeneration:', 'generation'}, {'mhe:', 'he', 'the'}, {'Checking', 'mhecking:'}, {'in', 'min:'}, {'Inc', 'minc:'}, {'mis:', 'is'}, {'Lose', 'Close', 'mlose:'}, {'mlost:', 'Lost'}, {'in', 'mn:'}, {'mnc:', 'Inc'}, {'next', 'mnext:'}, {'mo:', 'to'}, {'mocuments:', 'Documents'}, {'mof:', 'of'}, {'mord:', 'word'}, {'mose:', 'Lose'}, {'Lost', 'most:'}, {'mprocessors:', 'processors'}, {'mrocessors:', 'processors'}, {'is', 'ms:'}, {'said', 'msaid:'}, {'mthe:', 'the'}, {'mto:', 'to'}, {'Typo', 'mtypo:'}, {'wants', 'mwants:'}, {'mword:', 'word'}, {'Typo', 'mypo:'}, {'n:', 'in'}, {'nadd:', 'add'}, {'naext:', 'next'}, {'said', 'naid:'}, {'wants', 'nants:'}, {'naxt:', 'next'}, {'nbetter:', 'Better'}, {'next', 'nbext:'}, {'next', 'nbxt:'}, {'nc:', 'Inc'}, {'ncext:', 'next'}, {'nchecking:', 'Checking'}, {'nclose:', 'Close'}, {'ncxt:', 'next'}, {'add', 'ndd:'}, {'ndext:', 'next'}, {'ndocuments:', 'Documents'}, {'ndxt:', 'next'}, {'he', 'ne:'}, {'neat:', 'next'}, {'next', 'neaxt:'}, {'nebt:', 'next'}, {'nebxt:', 'next'}, {'nect:', 'next'}, {'next', 'necxt:'}, {'next', 'nedt:'}, {'nedxt:', 'next'}, {'neet:', 'next'}, {'neext:', 'next'}, {'next', 'neft:'}, {'nefxt:', 'next'}, {'negt:', 'next'}, {'negxt:', 'next'}, {'neht:', 'next'}, {'nehxt:', 'next'}, {'neit:', 'next'}, {'next', 'neixt:'}, {'nejt:', 'next'}, {'nejxt:', 'next'}, {'next', 'nekt:'}, {'nekxt:', 'next'}, {'nelt:', 'next'}, {'nelxt:', 'next'}, {'nemt:', 'next'}, {'nemxt:', 'next'}, {'neneration:', 'generation'}, {'next', 'nent:'}, {'next', 'nenxt:'}, {'neot:', 'next'}, {'neoxt:', 'next'}, {'next', 'nept:'}, {'next', 'nepxt:'}, {'next', 'neqt:'}, {'next', 'neqxt:'}, {'nert:', 'next'}, {'nerxt:', 'next'}, {'next', 'nest:'}, {'next', 'nesxt:'}, {'net:', 'next'}, {'nett:', 'next'}, {'Better', 'netter:'}, {'netx:', 'next'}, {'netxt:', 'next'}, {'next', 'neut:'}, {'next', 'neuxt:'}, {'nevt:', 'next'}, {'nevxt:', 'next'}, {'newt:', 'next'}, {'next', 'newxt:'}, {'nex:', 'next'}, {'next', 'nexa:'}, {'next', 'nexat:'}, {'nexb:', 'next'}, {'next', 'nexbt:'}, {'nexc:', 'next'}, {'next', 'nexct:'}, {'nexd:', 'next'}, {'next', 'nexdt:'}, {'nexe:', 'next'}, {'nexet:', 'next'}, {'nexf:', 'next'}, {'next', 'nexft:'}, {'next', 'nexg:'}, {'nexgt:', 'next'}, {'nexh:', 'next'}, {'next', 'nexht:'}, {'nexi:', 'next'}, {'next', 'nexit:'}, {'next', 'nexj:'}, {'nexjt:', 'next'}, {'nexk:', 'next'}, {'next', 'nexkt:'}, {'next', 'nexl:'}, {'nexlt:', 'next'}, {'next', 'nexm:'}, {'nexmt:', 'next'}, {'nexn:', 'next'}, {'next', 'nexnt:'}, {'next', 'nexo:'}, {'nexot:', 'next'}, {'nexp:', 'next'}, {'nexpt:', 'next'}, {'nexq:', 'next'}, {'next', 'nexqt:'}, {'next', 'nexr:'}, {'next', 'nexrt:'}, {'nexs:', 'next'}, {'nexst:', 'next'}, {'nextt:', 'next'}, {'next', 'nexu:'}, {'next', 'nexut:'}, {'nexv:', 'next'}, {'nexvt:', 'next'}, {'nexw:', 'next'}, {'next', 'nexwt:'}, {'next', 'nexx:'}, {'next', 'nexxt:'}, {'nexy:', 'next'}, {'nexyt:', 'next'}, {'next', 'nexz:'}, {'next', 'nexzt:'}, {'next', 'neyt:'}, {'neyxt:', 'next'}, {'next', 'nezt:'}, {'next', 'nezxt:'}, {'nf:', 'of'}, {'next', 'nfext:'}, {'next', 'nfxt:'}, {'ngeneration:', 'generation'}, {'next', 'ngext:'}, {'next', 'ngxt:'}, {'he', 'nhe:', 'the'}, {'nhecking:', 'Checking'}, {'next', 'nhext:'}, {'next', 'nhxt:'}, {'in', 'ni:'}, {'Inc', 'nic:'}, {'niext:', 'next'}, {'nin:', 'in'}, {'ninc:', 'Inc'}, {'is', 'nis:'}, {'next', 'nixt:'}, {'njext:', 'next'}, {'njxt:', 'next'}, {'nkext:', 'next'}, {'nkxt:', 'next'}, {'nlext:', 'next'}, {'nlose:', 'Lose', 'Close'}, {'Lost', 'nlost:'}, {'next', 'nlxt:'}, {'nmext:', 'next'}, {'next', 'nmxt:'}, {'in', 'nn:'}, {'nnc:', 'Inc'}, {'nnext:', 'next'}, {'nnxt:', 'next'}, {'to', 'no:'}, {'Documents', 'nocuments:'}, {'noext:', 'next'}, {'nof:', 'of'}, {'nord:', 'word'}, {'Lose', 'nose:'}, {'Lost', 'nost:'}, {'next', 'noxt:'}, {'next', 'npext:'}, {'nprocessors:', 'processors'}, {'next', 'npxt:'}, {'next', 'nqext:'}, {'nqxt:', 'next'}, {'nrext:', 'next'}, {'nrocessors:', 'processors'}, {'next', 'nrxt:'}, {'ns:', 'is'}, {'said', 'nsaid:'}, {'next', 'nsext:'}, {'next', 'nsxt:'}, {'ntext:', 'next'}, {'nthe:', 'the'}, {'nto:', 'to'}, {'next', 'ntxt:'}, {'Typo', 'ntypo:'}, {'next', 'nuext:'}, {'next', 'nuxt:'}, {'next', 'nvext:'}, {'nvxt:', 'next'}, {'wants', 'nwants:'}, {'next', 'nwext:'}, {'nword:', 'word'}, {'nwxt:', 'next'}, {'next', 'nxet:'}, {'nxext:', 'next'}, {'next', 'nxt:'}, {'nxxt:', 'next'}, {'nyext:', 'next'}, {'nypo:', 'Typo'}, {'next', 'nyxt:'}, {'next', 'nzext:'}, {'next', 'nzxt:'}, {'o:', 'to', 'of'}, {'oa:', 'of'}, {'add', 'oadd:'}, {'oaf:', 'of'}, {'said', 'oaid:'}, {'oants:', 'wants'}, {'ob:', 'of'}, {'Better', 'obetter:'}, {'obf:', 'of'}, {'oc:', 'of'}, {'of', 'ocf:'}, {'ochecking:', 'Checking'}, {'Close', 'oclose:'}, {'Documents', 'ocuments:'}, {'od:', 'of'}, {'odcuments:', 'Documents'}, {'odd:', 'add'}, {'odf:', 'of'}, {'odocuments:', 'Documents'}, {'he', 'oe:', 'of'}, {'oef:', 'of'}, {'oeneration:', 'generation'}, {'oetter:', 'Better'}, {'next', 'oext:'}, {'off:', 'of'}, {'og:', 'of'}, {'ogeneration:', 'generation'}, {'ogf:', 'of'}, {'oh:', 'of'}, {'he', 'the', 'ohe:'}, {'ohecking:', 'Checking'}, {'ohf:', 'of'}, {'oi:', 'of'}, {'oif:', 'of'}, {'in', 'oin:'}, {'oinc:', 'Inc'}, {'is', 'ois:'}, {'oj:', 'of'}, {'ojf:', 'of'}, {'of', 'ok:'}, {'okf:', 'of'}, {'ol:', 'of'}, {'olf:', 'of'}, {'Lose', 'Close', 'olose:'}, {'Lost', 'olost:'}, {'olse:', 'Lose'}, {'Lost', 'olst:'}, {'of', 'om:'}, {'omf:', 'of'}, {'on:', 'in', 'of'}, {'Inc', 'onc:'}, {'next', 'onext:'}, {'of', 'onf:'}, {'to', 'of', 'oo:'}, {'Documents', 'oocuments:'}, {'oof:', 'of'}, {'oord:', 'word'}, {'Lose', 'oose:'}, {'Lost', 'oost:'}, {'op:', 'of'}, {'opf:', 'of'}, {'oprocessors:', 'processors'}, {'oq:', 'of'}, {'oqf:', 'of'}, {'or:', 'of'}, {'ord:', 'word'}, {'orf:', 'of'}, {'orocessors:', 'processors'}, {'is', 'of', 'os:'}, {'osaid:', 'said'}, {'ose:', 'Lose'}, {'osf:', 'of'}, {'Lost', 'ost:'}, {'ot:', 'to', 'of'}, {'otf:', 'of'}, {'othe:', 'the'}, {'oto:', 'to'}, {'Typo', 'otypo:'}, {'ou:', 'of'}, {'ouf:', 'of'}, {'ov:', 'of'}, {'ovf:', 'of'}, {'ow:', 'of'}, {'owants:', 'wants'}, {'owf:', 'of'}, {'word', 'oword:'}, {'owrd:', 'word'}, {'ox:', 'of'}, {'oxf:', 'of'}, {'oy:', 'of'}, {'oyf:', 'of'}, {'Typo', 'oypo:'}, {'oz:', 'of'}, {'ozf:', 'of'}, {'padd:', 'add'}, {'said', 'paid:'}, {'pants:', 'wants'}, {'paocessors:', 'processors'}, {'parocessors:', 'processors'}, {'Better', 'pbetter:'}, {'pbocessors:', 'processors'}, {'pbrocessors:', 'processors'}, {'pchecking:', 'Checking'}, {'pclose:', 'Close'}, {'pcocessors:', 'processors'}, {'pcrocessors:', 'processors'}, {'add', 'pdd:'}, {'pdocessors:', 'processors'}, {'Documents', 'pdocuments:'}, {'pdrocessors:', 'processors'}, {'he', 'pe:'}, {'peneration:', 'generation'}, {'peocessors:', 'processors'}, {'perocessors:', 'processors'}, {'petter:', 'Better'}, {'pext:', 'next'}, {'pf:', 'of'}, {'pfocessors:', 'processors'}, {'pfrocessors:', 'processors'}, {'generation', 'pgeneration:'}, {'pgocessors:', 'processors'}, {'pgrocessors:', 'processors'}, {'phe:', 'he', 'the'}, {'phecking:', 'Checking'}, {'phocessors:', 'processors'}, {'phrocessors:', 'processors'}, {'in', 'pin:'}, {'pinc:', 'Inc'}, {'piocessors:', 'processors'}, {'pirocessors:', 'processors'}, {'is', 'pis:'}, {'pjocessors:', 'processors'}, {'pjrocessors:', 'processors'}, {'pkocessors:', 'processors'}, {'pkrocessors:', 'processors'}, {'plocessors:', 'processors'}, {'plose:', 'Lose', 'Close'}, {'Lost', 'plost:'}, {'plrocessors:', 'processors'}, {'pmocessors:', 'processors'}, {'pmrocessors:', 'processors'}, {'in', 'pn:'}, {'pnc:', 'Inc'}, {'pnext:', 'next'}, {'pnocessors:', 'processors'}, {'pnrocessors:', 'processors'}, {'to', 'po:'}, {'pocessors:', 'processors'}, {'Documents', 'pocuments:'}, {'pof:', 'of'}, {'poocessors:', 'processors'}, {'porcessors:', 'processors'}, {'pord:', 'word'}, {'porocessors:', 'processors'}, {'Lose', 'pose:'}, {'Lost', 'post:'}, {'ppocessors:', 'processors'}, {'pprocessors:', 'processors'}, {'pqocessors:', 'processors'}, {'pqrocessors:', 'processors'}, {'processors', 'pracessors:'}, {'praocessors:', 'processors'}, {'prbcessors:', 'processors'}, {'prbocessors:', 'processors'}, {'prccessors:', 'processors'}, {'prcessors:', 'processors'}, {'prcocessors:', 'processors'}, {'prcoessors:', 'processors'}, {'prdcessors:', 'processors'}, {'prdocessors:', 'processors'}, {'precessors:', 'processors'}, {'preocessors:', 'processors'}, {'prfcessors:', 'processors'}, {'prfocessors:', 'processors'}, {'prgcessors:', 'processors'}, {'prgocessors:', 'processors'}, {'processors', 'prhcessors:'}, {'prhocessors:', 'processors'}, {'pricessors:', 'processors'}, {'priocessors:', 'processors'}, {'prjcessors:', 'processors'}, {'prjocessors:', 'processors'}, {'prkcessors:', 'processors'}, {'prkocessors:', 'processors'}, {'prlcessors:', 'processors'}, {'prlocessors:', 'processors'}, {'prmcessors:', 'processors'}, {'prmocessors:', 'processors'}, {'prncessors:', 'processors'}, {'prnocessors:', 'processors'}, {'proacessors:', 'processors'}, {'proaessors:', 'processors'}, {'probcessors:', 'processors'}, {'probessors:', 'processors'}, {'procaessors:', 'processors'}, {'processors', 'procassors:'}, {'procbessors:', 'processors'}, {'procbssors:', 'processors'}, {'proccessors:', 'processors'}, {'proccssors:', 'processors'}, {'procdessors:', 'processors'}, {'procdssors:', 'processors'}, {'proceasors:', 'processors'}, {'proceassors:', 'processors'}, {'procebsors:', 'processors'}, {'processors', 'procebssors:'}, {'procecsors:', 'processors'}, {'processors', 'procecssors:'}, {'procedsors:', 'processors'}, {'procedssors:', 'processors'}, {'proceesors:', 'processors'}, {'processors', 'proceessors:'}, {'procefsors:', 'processors'}, {'procefssors:', 'processors'}, {'procegsors:', 'processors'}, {'procegssors:', 'processors'}, {'procehsors:', 'processors'}, {'procehssors:', 'processors'}, {'processors', 'proceisors:'}, {'proceissors:', 'processors'}, {'procejsors:', 'processors'}, {'procejssors:', 'processors'}, {'proceksors:', 'processors'}, {'procekssors:', 'processors'}, {'procelsors:', 'processors'}, {'processors', 'procelssors:'}, {'procemsors:', 'processors'}, {'procemssors:', 'processors'}, {'procensors:', 'processors'}, {'procenssors:', 'processors'}, {'proceosors:', 'processors'}, {'proceossors:', 'processors'}, {'procepsors:', 'processors'}, {'procepssors:', 'processors'}, {'proceqsors:', 'processors'}, {'proceqssors:', 'processors'}, {'procersors:', 'processors'}, {'procerssors:', 'processors'}, {'procesaors:', 'processors'}, {'processors', 'procesasors:'}, {'procesbors:', 'processors'}, {'procesbsors:', 'processors'}, {'processors', 'procescors:'}, {'procescsors:', 'processors'}, {'processors', 'procesdors:'}, {'procesdsors:', 'processors'}, {'proceseors:', 'processors'}, {'procesesors:', 'processors'}, {'procesfors:', 'processors'}, {'procesfsors:', 'processors'}, {'procesgors:', 'processors'}, {'processors', 'procesgsors:'}, {'processors', 'proceshors:'}, {'proceshsors:', 'processors'}, {'procesiors:', 'processors'}, {'procesisors:', 'processors'}, {'procesjors:', 'processors'}, {'procesjsors:', 'processors'}, {'proceskors:', 'processors'}, {'procesksors:', 'processors'}, {'proceslors:', 'processors'}, {'proceslsors:', 'processors'}, {'procesmors:', 'processors'}, {'procesmsors:', 'processors'}, {'procesnors:', 'processors'}, {'procesnsors:', 'processors'}, {'procesoors:', 'processors'}, {'procesors:', 'processors'}, {'processors', 'procesosors:'}, {'processors', 'procesosrs:'}, {'procespors:', 'processors'}, {'processors', 'procespsors:'}, {'procesqors:', 'processors'}, {'processors', 'procesqsors:'}, {'processors', 'procesrors:'}, {'procesrsors:', 'processors'}, {'processors', 'processaors:'}, {'processars:', 'processors'}, {'processbors:', 'processors'}, {'processbrs:', 'processors'}, {'processors', 'processcors:'}, {'processcrs:', 'processors'}, {'processdors:', 'processors'}, {'processdrs:', 'processors'}, {'processeors:', 'processors'}, {'processers:', 'processors'}, {'processfors:', 'processors'}, {'processfrs:', 'processors'}, {'processgors:', 'processors'}, {'processgrs:', 'processors'}, {'processhors:', 'processors'}, {'processhrs:', 'processors'}, {'processiors:', 'processors'}, {'processirs:', 'processors'}, {'processjors:', 'processors'}, {'processjrs:', 'processors'}, {'processkors:', 'processors'}, {'processkrs:', 'processors'}, {'processlors:', 'processors'}, {'processlrs:', 'processors'}, {'processmors:', 'processors'}, {'processmrs:', 'processors'}, {'processnors:', 'processors'}, {'processnrs:', 'processors'}, {'processoars:', 'processors'}, {'processors', 'processoas:'}, {'processors', 'processobrs:'}, {'processors', 'processobs:'}, {'processocrs:', 'processors'}, {'processocs:', 'processors'}, {'processodrs:', 'processors'}, {'processods:', 'processors'}, {'processors', 'processoers:'}, {'processoes:', 'processors'}, {'processofrs:', 'processors'}, {'processofs:', 'processors'}, {'processogrs:', 'processors'}, {'processogs:', 'processors'}, {'processohrs:', 'processors'}, {'processohs:', 'processors'}, {'processoirs:', 'processors'}, {'processois:', 'processors'}, {'processojrs:', 'processors'}, {'processojs:', 'processors'}, {'processokrs:', 'processors'}, {'processoks:', 'processors'}, {'processolrs:', 'processors'}, {'processols:', 'processors'}, {'processomrs:', 'processors'}, {'processoms:', 'processors'}, {'processonrs:', 'processors'}, {'processons:', 'processors'}, {'processoors:', 'processors'}, {'processoos:', 'processors'}, {'processoprs:', 'processors'}, {'processops:', 'processors'}, {'processoqrs:', 'processors'}, {'processoqs:', 'processors'}, {'processor:', 'processors'}, {'processora:', 'processors'}, {'processoras:', 'processors'}, {'processorb:', 'processors'}, {'processorbs:', 'processors'}, {'processorc:', 'processors'}, {'processorcs:', 'processors'}, {'processord:', 'processors'}, {'processords:', 'processors'}, {'processore:', 'processors'}, {'processores:', 'processors'}, {'processors', 'processorf:'}, {'processorfs:', 'processors'}, {'processorg:', 'processors'}, {'processorgs:', 'processors'}, {'processorh:', 'processors'}, {'processorhs:', 'processors'}, {'processori:', 'processors'}, {'processoris:', 'processors'}, {'processorj:', 'processors'}, {'processorjs:', 'processors'}, {'processork:', 'processors'}, {'processorks:', 'processors'}, {'processorl:', 'processors'}, {'processorls:', 'processors'}, {'processorm:', 'processors'}, {'processorms:', 'processors'}, {'processorn:', 'processors'}, {'processorns:', 'processors'}, {'processoro:', 'processors'}, {'processoros:', 'processors'}, {'processorp:', 'processors'}, {'processorps:', 'processors'}, {'processorq:', 'processors'}, {'processorqs:', 'processors'}, {'processorr:', 'processors'}, {'processorrs:', 'processors'}, {'processorss:', 'processors'}, {'processort:', 'processors'}, {'processorts:', 'processors'}, {'processoru:', 'processors'}, {'processors', 'processorus:'}, {'processorv:', 'processors'}, {'processors', 'processorvs:'}, {'processorw:', 'processors'}, {'processorws:', 'processors'}, {'processorx:', 'processors'}, {'processors', 'processorxs:'}, {'processory:', 'processors'}, {'processorys:', 'processors'}, {'processorz:', 'processors'}, {'processorzs:', 'processors'}, {'processos:', 'processors'}, {'processosr:', 'processors'}, {'processosrs:', 'processors'}, {'processors', 'processoss:'}, {'processors', 'processotrs:'}, {'processors', 'processots:'}, {'processours:', 'processors'}, {'processous:', 'processors'}, {'processovrs:', 'processors'}, {'processovs:', 'processors'}, {'processowrs:', 'processors'}, {'processows:', 'processors'}, {'processoxrs:', 'processors'}, {'processoxs:', 'processors'}, {'processoyrs:', 'processors'}, {'processoys:', 'processors'}, {'processozrs:', 'processors'}, {'processozs:', 'processors'}, {'processpors:', 'processors'}, {'processprs:', 'processors'}, {'processors', 'processqors:'}, {'processqrs:', 'processors'}, {'processrors:', 'processors'}, {'processros:', 'processors'}, {'processrrs:', 'processors'}, {'processrs:', 'processors'}, {'processsors:', 'processors'}, {'processsrs:', 'processors'}, {'processors', 'processtors:'}, {'processtrs:', 'processors'}, {'processuors:', 'processors'}, {'processurs:', 'processors'}, {'processvors:', 'processors'}, {'processvrs:', 'processors'}, {'processwors:', 'processors'}, {'processwrs:', 'processors'}, {'processxors:', 'processors'}, {'processxrs:', 'processors'}, {'processors', 'processyors:'}, {'processors', 'processyrs:'}, {'processzors:', 'processors'}, {'processors', 'processzrs:'}, {'procestors:', 'processors'}, {'procestsors:', 'processors'}, {'procesuors:', 'processors'}, {'procesusors:', 'processors'}, {'procesvors:', 'processors'}, {'procesvsors:', 'processors'}, {'proceswors:', 'processors'}, {'proceswsors:', 'processors'}, {'procesxors:', 'processors'}, {'processors', 'procesxsors:'}, {'procesyors:', 'processors'}, {'procesysors:', 'processors'}, {'proceszors:', 'processors'}, {'proceszsors:', 'processors'}, {'procetsors:', 'processors'}, {'procetssors:', 'processors'}, {'proceusors:', 'processors'}, {'proceussors:', 'processors'}, {'procevsors:', 'processors'}, {'procevssors:', 'processors'}, {'procewsors:', 'processors'}, {'procewssors:', 'processors'}, {'procexsors:', 'processors'}, {'procexssors:', 'processors'}, {'proceysors:', 'processors'}, {'proceyssors:', 'processors'}, {'procezsors:', 'processors'}, {'processors', 'procezssors:'}, {'procfessors:', 'processors'}, {'procfssors:', 'processors'}, {'procgessors:', 'processors'}, {'procgssors:', 'processors'}, {'prochessors:', 'processors'}, {'processors', 'prochssors:'}, {'prociessors:', 'processors'}, {'procissors:', 'processors'}, {'processors', 'procjessors:'}, {'processors', 'procjssors:'}, {'prockessors:', 'processors'}, {'prockssors:', 'processors'}, {'proclessors:', 'processors'}, {'processors', 'proclssors:'}, {'processors', 'procmessors:'}, {'procmssors:', 'processors'}, {'procnessors:', 'processors'}, {'procnssors:', 'processors'}, {'procoessors:', 'processors'}, {'procossors:', 'processors'}, {'procpessors:', 'processors'}, {'procpssors:', 'processors'}, {'procqessors:', 'processors'}, {'procqssors:', 'processors'}, {'procressors:', 'processors'}, {'procrssors:', 'processors'}, {'procsesors:', 'processors'}, {'procsessors:', 'processors'}, {'procssors:', 'processors'}, {'procsssors:', 'processors'}, {'processors', 'proctessors:'}, {'proctssors:', 'processors'}, {'procuessors:', 'processors'}, {'procussors:', 'processors'}, {'procvessors:', 'processors'}, {'procvssors:', 'processors'}, {'procwessors:', 'processors'}, {'procwssors:', 'processors'}, {'procxessors:', 'processors'}, {'processors', 'procxssors:'}, {'procyessors:', 'processors'}, {'procyssors:', 'processors'}, {'proczessors:', 'processors'}, {'proczssors:', 'processors'}, {'prodcessors:', 'processors'}, {'prodessors:', 'processors'}, {'processors', 'proecessors:'}, {'processors', 'proecssors:'}, {'proeessors:', 'processors'}, {'proessors:', 'processors'}, {'profcessors:', 'processors'}, {'professors:', 'processors'}, {'progcessors:', 'processors'}, {'progessors:', 'processors'}, {'prohcessors:', 'processors'}, {'prohessors:', 'processors'}, {'proicessors:', 'processors'}, {'proiessors:', 'processors'}, {'projcessors:', 'processors'}, {'projessors:', 'processors'}, {'prokcessors:', 'processors'}, {'prokessors:', 'processors'}, {'prolcessors:', 'processors'}, {'prolessors:', 'processors'}, {'promcessors:', 'processors'}, {'promessors:', 'processors'}, {'proncessors:', 'processors'}, {'pronessors:', 'processors'}, {'proocessors:', 'processors'}, {'prooessors:', 'processors'}, {'propcessors:', 'processors'}, {'propessors:', 'processors'}, {'proqcessors:', 'processors'}, {'processors', 'proqessors:'}, {'prorcessors:', 'processors'}, {'proressors:', 'processors'}, {'proscessors:', 'processors'}, {'prosessors:', 'processors'}, {'protcessors:', 'processors'}, {'protessors:', 'processors'}, {'proucessors:', 'processors'}, {'processors', 'prouessors:'}, {'provcessors:', 'processors'}, {'provessors:', 'processors'}, {'prowcessors:', 'processors'}, {'prowessors:', 'processors'}, {'proxcessors:', 'processors'}, {'proxessors:', 'processors'}, {'proycessors:', 'processors'}, {'proyessors:', 'processors'}, {'processors', 'prozcessors:'}, {'prozessors:', 'processors'}, {'prpcessors:', 'processors'}, {'prpocessors:', 'processors'}, {'prqcessors:', 'processors'}, {'prqocessors:', 'processors'}, {'prrcessors:', 'processors'}, {'prrocessors:', 'processors'}, {'prscessors:', 'processors'}, {'prsocessors:', 'processors'}, {'prtcessors:', 'processors'}, {'processors', 'prtocessors:'}, {'prucessors:', 'processors'}, {'pruocessors:', 'processors'}, {'prvcessors:', 'processors'}, {'processors', 'prvocessors:'}, {'processors', 'prwcessors:'}, {'processors', 'prwocessors:'}, {'prxcessors:', 'processors'}, {'prxocessors:', 'processors'}, {'prycessors:', 'processors'}, {'pryocessors:', 'processors'}, {'przcessors:', 'processors'}, {'przocessors:', 'processors'}, {'ps:', 'is'}, {'said', 'psaid:'}, {'psocessors:', 'processors'}, {'psrocessors:', 'processors'}, {'pthe:', 'the'}, {'pto:', 'to'}, {'ptocessors:', 'processors'}, {'ptrocessors:', 'processors'}, {'Typo', 'ptypo:'}, {'puocessors:', 'processors'}, {'purocessors:', 'processors'}, {'pvocessors:', 'processors'}, {'pvrocessors:', 'processors'}, {'wants', 'pwants:'}, {'pwocessors:', 'processors'}, {'pword:', 'word'}, {'processors', 'pwrocessors:'}, {'pxocessors:', 'processors'}, {'pxrocessors:', 'processors'}, {'pyocessors:', 'processors'}, {'Typo', 'pypo:'}, {'pyrocessors:', 'processors'}, {'pzocessors:', 'processors'}, {'pzrocessors:', 'processors'}, {'qadd:', 'add'}, {'qaid:', 'said'}, {'wants', 'qants:'}, {'Better', 'qbetter:'}, {'qchecking:', 'Checking'}, {'Close', 'qclose:'}, {'add', 'qdd:'}, {'Documents', 'qdocuments:'}, {'he', 'qe:'}, {'qeneration:', 'generation'}, {'Better', 'qetter:'}, {'next', 'qext:'}, {'qf:', 'of'}, {'qgeneration:', 'generation'}, {'he', 'the', 'qhe:'}, {'qhecking:', 'Checking'}, {'in', 'qin:'}, {'Inc', 'qinc:'}, {'qis:', 'is'}, {'Lose', 'qlose:', 'Close'}, {'qlost:', 'Lost'}, {'in', 'qn:'}, {'qnc:', 'Inc'}, {'next', 'qnext:'}, {'qo:', 'to'}, {'qocuments:', 'Documents'}, {'qof:', 'of'}, {'word', 'qord:'}, {'Lose', 'qose:'}, {'Lost', 'qost:'}, {'qprocessors:', 'processors'}, {'qrocessors:', 'processors'}, {'qs:', 'is'}, {'qsaid:', 'said'}, {'qthe:', 'the'}, {'to', 'qto:'}, {'Typo', 'qtypo:'}, {'wants', 'qwants:'}, {'qword:', 'word'}, {'Typo', 'qypo:'}, {'add', 'radd:'}, {'raid:', 'said'}, {'rants:', 'wants'}, {'Better', 'rbetter:'}, {'rchecking:', 'Checking'}, {'rclose:', 'Close'}, {'add', 'rdd:'}, {'Documents', 'rdocuments:'}, {'he', 're:'}, {'reneration:', 'generation'}, {'Better', 'retter:'}, {'next', 'rext:'}, {'rf:', 'of'}, {'rgeneration:', 'generation'}, {'he', 'the', 'rhe:'}, {'Checking', 'rhecking:'}, {'in', 'rin:'}, {'rinc:', 'Inc'}, {'is', 'ris:'}, {'rlose:', 'Lose', 'Close'}, {'rlost:', 'Lost'}, {'in', 'rn:'}, {'Inc', 'rnc:'}, {'next', 'rnext:'}, {'to', 'ro:'}, {'rocessors:', 'processors'}, {'rocuments:', 'Documents'}, {'of', 'rof:'}, {'rord:', 'word'}, {'Lose', 'rose:'}, {'rost:', 'Lost'}, {'processors', 'rpocessors:'}, {'rprocessors:', 'processors'}, {'rrocessors:', 'processors'}, {'rs:', 'is'}, {'rsaid:', 'said'}, {'the', 'rthe:'}, {'to', 'rto:'}, {'Typo', 'rtypo:'}, {'rwants:', 'wants'}, {'rword:', 'word'}, {'Typo', 'rypo:'}, {'s:', 'is'}, {'said', 'saad:'}, {'said', 'saaid:'}, {'said', 'sabd:'}, {'sabid:', 'said'}, {'said', 'sacd:'}, {'said', 'sacid:'}, {'said', 'sad:'}, {'add', 'sadd:', 'said'}, {'sadi:', 'said'}, {'said', 'sadid:'}, {'said', 'saed:'}, {'said', 'saeid:'}, {'said', 'safd:'}, {'safid:', 'said'}, {'said', 'sagd:'}, {'sagid:', 'said'}, {'said', 'sahd:'}, {'sahid:', 'said'}, {'said', 'sai:'}, {'said', 'saia:'}, {'said', 'saiad:'}, {'said', 'saib:'}, {'said', 'saibd:'}, {'said', 'saic:'}, {'saicd:', 'said'}, {'said', 'saidd:'}, {'said', 'saie:'}, {'saied:', 'said'}, {'said', 'saif:'}, {'said', 'saifd:'}, {'said', 'saig:'}, {'said', 'saigd:'}, {'saih:', 'said'}, {'said', 'saihd:'}, {'said', 'saii:'}, {'said', 'saiid:'}, {'saij:', 'said'}, {'said', 'saijd:'}, {'said', 'saik:'}, {'said', 'saikd:'}, {'said', 'sail:'}, {'said', 'saild:'}, {'said', 'saim:'}, {'saimd:', 'said'}, {'said', 'sain:'}, {'said', 'saind:'}, {'said', 'saio:'}, {'said', 'saiod:'}, {'said', 'saip:'}, {'said', 'saipd:'}, {'saiq:', 'said'}, {'said', 'saiqd:'}, {'said', 'sair:'}, {'said', 'saird:'}, {'said', 'sais:'}, {'said', 'saisd:'}, {'said', 'sait:'}, {'said', 'saitd:'}, {'said', 'saiu:'}, {'saiud:', 'said'}, {'said', 'saiv:'}, {'said', 'saivd:'}, {'saiw:', 'said'}, {'said', 'saiwd:'}, {'said', 'saix:'}, {'said', 'saixd:'}, {'said', 'saiy:'}, {'said', 'saiyd:'}, {'said', 'saiz:'}, {'saizd:', 'said'}, {'said', 'sajd:'}, {'sajid:', 'said'}, {'said', 'sakd:'}, {'said', 'sakid:'}, {'sald:', 'said'}, {'salid:', 'said'}, {'said', 'samd:'}, {'samid:', 'said'}, {'said', 'sand:'}, {'said', 'sanid:'}, {'wants', 'sants:'}, {'said', 'saod:'}, {'said', 'saoid:'}, {'sapd:', 'said'}, {'said', 'sapid:'}, {'said', 'saqd:'}, {'said', 'saqid:'}, {'sard:', 'said'}, {'sarid:', 'said'}, {'sasd:', 'said'}, {'said', 'sasid:'}, {'said', 'satd:'}, {'said', 'satid:'}, {'saud:', 'said'}, {'said', 'sauid:'}, {'said', 'savd:'}, {'savid:', 'said'}, {'said', 'sawd:'}, {'said', 'sawid:'}, {'said', 'saxd:'}, {'said', 'saxid:'}, {'sayd:', 'said'}, {'sayid:', 'said'}, {'sazd:', 'said'}, {'said', 'sazid:'}, {'said', 'sbaid:'}, {'Better', 'sbetter:'}, {'said', 'sbid:'}, {'said', 'scaid:'}, {'schecking:', 'Checking'}, {'said', 'scid:'}, {'sclose:', 'Close'}, {'sdaid:', 'said'}, {'add', 'sdd:'}, {'said', 'sdid:'}, {'sdocuments:', 'Documents'}, {'he', 'se:'}, {'said', 'seaid:'}, {'seid:', 'said'}, {'generation', 'seneration:'}, {'setter:', 'Better'}, {'sext:', 'next'}, {'sf:', 'of'}, {'said', 'sfaid:'}, {'said', 'sfid:'}, {'sgaid:', 'said'}, {'sgeneration:', 'generation'}, {'said', 'sgid:'}, {'shaid:', 'said'}, {'he', 'the', 'she:'}, {'shecking:', 'Checking'}, {'said', 'shid:'}, {'si:', 'is'}, {'siad:', 'said'}, {'said', 'siaid:'}, {'said', 'sid:'}, {'said', 'siid:'}, {'sin:', 'in'}, {'Inc', 'sinc:'}, {'sis:', 'is'}, {'sjaid:', 'said'}, {'said', 'sjid:'}, {'said', 'skaid:'}, {'said', 'skid:'}, {'slaid:', 'said'}, {'said', 'slid:'}, {'slose:', 'Lose', 'Close'}, {'Lost', 'slost:'}, {'said', 'smaid:'}, {'said', 'smid:'}, {'sn:', 'in'}, {'said', 'snaid:'}, {'Inc', 'snc:'}, {'snext:', 'next'}, {'said', 'snid:'}, {'to', 'so:'}, {'said', 'soaid:'}, {'Documents', 'socuments:'}, {'sof:', 'of'}, {'soid:', 'said'}, {'sord:', 'word'}, {'Lose', 'sose:'}, {'Lost', 'sost:'}, {'said', 'spaid:'}, {'said', 'spid:'}, {'processors', 'sprocessors:'}, {'said', 'sqaid:'}, {'said', 'sqid:'}, {'said', 'sraid:'}, {'said', 'srid:'}, {'srocessors:', 'processors'}, {'ss:', 'is'}, {'said', 'ssaid:'}, {'said', 'ssid:'}, {'said', 'staid:'}, {'sthe:', 'the'}, {'said', 'stid:'}, {'to', 'sto:'}, {'Typo', 'stypo:'}, {'said', 'suaid:'}, {'suid:', 'said'}, {'svaid:', 'said'}, {'said', 'svid:'}, {'said', 'swaid:'}, {'wants', 'swants:'}, {'swid:', 'said'}, {'sword:', 'word'}, {'said', 'sxaid:'}, {'said', 'sxid:'}, {'said', 'syaid:'}, {'said', 'syid:'}, {'Typo', 'sypo:'}, {'said', 'szaid:'}, {'said', 'szid:'}, {'to', 't:'}, {'to', 'ta:'}, {'add', 'tadd:'}, {'tae:', 'the'}, {'tahe:', 'the'}, {'said', 'taid:'}, {'tants:', 'wants'}, {'to', 'tao:'}, {'Typo', 'tapo:'}, {'Typo', 'taypo:'}, {'to', 'tb:'}, {'tbe:', 'the'}, {'tbetter:', 'Better'}, {'tbhe:', 'the'}, {'to', 'tbo:'}, {'Typo', 'tbpo:'}, {'Typo', 'tbypo:'}, {'tc:', 'to'}, {'tce:', 'the'}, {'tche:', 'the'}, {'tchecking:', 'Checking'}, {'tclose:', 'Close'}, {'tco:', 'to'}, {'Typo', 'tcpo:'}, {'Typo', 'tcypo:'}, {'td:', 'to'}, {'add', 'tdd:'}, {'the', 'tde:'}, {'tdhe:', 'the'}, {'tdo:', 'to'}, {'tdocuments:', 'Documents'}, {'Typo', 'tdpo:'}, {'Typo', 'tdypo:'}, {'he', 'to', 'the', 'te:'}, {'tee:', 'the'}, {'teh:', 'the'}, {'tehe:', 'the'}, {'teneration:', 'generation'}, {'teo:', 'to'}, {'Typo', 'tepo:'}, {'Better', 'tetter:'}, {'text:', 'next'}, {'teypo:', 'Typo'}, {'tf:', 'to', 'of'}, {'tfe:', 'the'}, {'tfhe:', 'the'}, {'tfo:', 'to'}, {'Typo', 'tfpo:'}, {'Typo', 'tfypo:'}, {'tg:', 'to'}, {'the', 'tge:'}, {'tgeneration:', 'generation'}, {'the', 'tghe:'}, {'tgo:', 'to'}, {'Typo', 'tgpo:'}, {'tgypo:', 'Typo'}, {'th:', 'to', 'the'}, {'tha:', 'the'}, {'the', 'thae:'}, {'the', 'thb:'}, {'thbe:', 'the'}, {'thc:', 'the'}, {'thce:', 'the'}, {'the', 'thd:'}, {'thde:', 'the'}, {'he', 'the:'}, {'Checking', 'thecking:'}, {'the', 'thee:'}, {'thf:', 'the'}, {'the', 'thfe:'}, {'the', 'thg:'}, {'the', 'thge:'}, {'thh:', 'the'}, {'the', 'thhe:'}, {'thi:', 'the'}, {'the', 'thie:'}, {'the', 'thj:'}, {'thje:', 'the'}, {'thk:', 'the'}, {'the', 'thke:'}, {'the', 'thl:'}, {'thle:', 'the'}, {'thm:', 'the'}, {'the', 'thme:'}, {'the', 'thn:'}, {'the', 'thne:'}, {'tho:', 'to', 'the'}, {'thoe:', 'the'}, {'thp:', 'the'}, {'the', 'thpe:'}, {'Typo', 'thpo:'}, {'the', 'thq:'}, {'thqe:', 'the'}, {'the', 'thr:'}, {'the', 'thre:'}, {'ths:', 'the'}, {'the', 'thse:'}, {'tht:', 'the'}, {'thte:', 'the'}, {'thu:', 'the'}, {'the', 'thue:'}, {'the', 'thv:'}, {'the', 'thve:'}, {'thw:', 'the'}, {'thwe:', 'the'}, {'thx:', 'the'}, {'thxe:', 'the'}, {'thy:', 'the'}, {'thye:', 'the'}, {'Typo', 'thypo:'}, {'the', 'thz:'}, {'the', 'thze:'}, {'to', 'ti:'}, {'the', 'tie:'}, {'tihe:', 'the'}, {'in', 'tin:'}, {'tinc:', 'Inc'}, {'tio:', 'to'}, {'Typo', 'tipo:'}, {'tis:', 'is'}, {'Typo', 'tiypo:'}, {'to', 'tj:'}, {'the', 'tje:'}, {'tjhe:', 'the'}, {'to', 'tjo:'}, {'tjpo:', 'Typo'}, {'Typo', 'tjypo:'}, {'to', 'tk:'}, {'the', 'tke:'}, {'tkhe:', 'the'}, {'to', 'tko:'}, {'tkpo:', 'Typo'}, {'Typo', 'tkypo:'}, {'tl:', 'to'}, {'tle:', 'the'}, {'the', 'tlhe:'}, {'to', 'tlo:'}, {'Lose', 'tlose:', 'Close'}, {'Lost', 'tlost:'}, {'Typo', 'tlpo:'}, {'Typo', 'tlypo:'}, {'to', 'tm:'}, {'tme:', 'the'}, {'tmhe:', 'the'}, {'to', 'tmo:'}, {'Typo', 'tmpo:'}, {'Typo', 'tmypo:'}, {'in', 'to', 'tn:'}, {'tnc:', 'Inc'}, {'the', 'tne:'}, {'next', 'tnext:'}, {'the', 'tnhe:'}, {'to', 'tno:'}, {'tnpo:', 'Typo'}, {'tnypo:', 'Typo'}, {'tocuments:', 'Documents'}, {'the', 'toe:'}, {'tof:', 'of'}, {'tohe:', 'the'}, {'to', 'too:'}, {'Typo', 'topo:'}, {'tord:', 'word'}, {'tose:', 'Lose'}, {'Lost', 'tost:'}, {'Typo', 'toypo:'}, {'to', 'tp:'}, {'tpe:', 'the'}, {'tphe:', 'the'}, {'Typo', 'tpo:', 'to'}, {'tppo:', 'Typo'}, {'tprocessors:', 'processors'}, {'Typo', 'tpyo:'}, {'Typo', 'tpypo:'}, {'tq:', 'to'}, {'tqe:', 'the'}, {'tqhe:', 'the'}, {'to', 'tqo:'}, {'Typo', 'tqpo:'}, {'Typo', 'tqypo:'}, {'tr:', 'to'}, {'the', 'tre:'}, {'the', 'trhe:'}, {'to', 'tro:'}, {'trocessors:', 'processors'}, {'Typo', 'trpo:'}, {'Typo', 'trypo:'}, {'ts:', 'is', 'to'}, {'said', 'tsaid:'}, {'tse:', 'the'}, {'the', 'tshe:'}, {'to', 'tso:'}, {'Typo', 'tspo:'}, {'Typo', 'tsypo:'}, {'to', 'tt:'}, {'tte:', 'the'}, {'the', 'tthe:'}, {'to', 'tto:'}, {'Typo', 'ttpo:'}, {'Typo', 'ttypo:'}, {'to', 'tu:'}, {'the', 'tue:'}, {'the', 'tuhe:'}, {'to', 'tuo:'}, {'Typo', 'tupo:'}, {'Typo', 'tuypo:'}, {'to', 'tv:'}, {'tve:', 'the'}, {'tvhe:', 'the'}, {'tvo:', 'to'}, {'Typo', 'tvpo:'}, {'Typo', 'tvypo:'}, {'to', 'tw:'}, {'twants:', 'wants'}, {'the', 'twe:'}, {'twhe:', 'the'}, {'two:', 'to'}, {'tword:', 'word'}, {'Typo', 'twpo:'}, {'Typo', 'twypo:'}, {'to', 'tx:'}, {'txe:', 'the'}, {'txhe:', 'the'}, {'to', 'txo:'}, {'Typo', 'txpo:'}, {'Typo', 'txypo:'}, {'to', 'ty:'}, {'Typo', 'tyao:'}, {'Typo', 'tyapo:'}, {'tybo:', 'Typo'}, {'Typo', 'tybpo:'}, {'Typo', 'tyco:'}, {'Typo', 'tycpo:'}, {'Typo', 'tydo:'}, {'Typo', 'tydpo:'}, {'tye:', 'the'}, {'Typo', 'tyeo:'}, {'tyepo:', 'Typo'}, {'Typo', 'tyfo:'}, {'Typo', 'tyfpo:'}, {'Typo', 'tygo:'}, {'tygpo:', 'Typo'}, {'the', 'tyhe:'}, {'Typo', 'tyho:'}, {'Typo', 'tyhpo:'}, {'tyio:', 'Typo'}, {'Typo', 'tyipo:'}, {'Typo', 'tyjo:'}, {'Typo', 'tyjpo:'}, {'Typo', 'tyko:'}, {'tykpo:', 'Typo'}, {'Typo', 'tylo:'}, {'Typo', 'tylpo:'}, {'tymo:', 'Typo'}, {'Typo', 'tympo:'}, {'Typo', 'tyno:'}, {'Typo', 'tynpo:'}, {'Typo', 'to', 'tyo:'}, {'Typo', 'tyoo:'}, {'Typo', 'tyop:'}, {'Typo', 'tyopo:'}, {'Typo', 'typ:'}, {'typa:', 'Typo'}, {'Typo', 'typao:'}, {'Typo', 'typb:'}, {'Typo', 'typbo:'}, {'Typo', 'typc:'}, {'typco:', 'Typo'}, {'Typo', 'typd:'}, {'Typo', 'typdo:'}, {'Typo', 'type:'}, {'Typo', 'typeo:'}, {'Typo', 'typf:'}, {'typfo:', 'Typo'}, {'Typo', 'typg:'}, {'Typo', 'typgo:'}, {'Typo', 'typh:'}, {'Typo', 'typho:'}, {'Typo', 'typi:'}, {'Typo', 'typio:'}, {'Typo', 'typj:'}, {'Typo', 'typjo:'}, {'Typo', 'typk:'}, {'Typo', 'typko:'}, {'Typo', 'typl:'}, {'Typo', 'typlo:'}, {'Typo', 'typm:'}, {'Typo', 'typmo:'}, {'Typo', 'typn:'}, {'Typo', 'typno:'}, {'Typo', 'typo:'}, {'Typo', 'typoo:'}, {'Typo', 'typp:'}, {'Typo', 'typpo:'}, {'Typo', 'typq:'}, {'Typo', 'typqo:'}, {'Typo', 'typr:'}, {'Typo', 'typro:'}, {'Typo', 'typs:'}, {'Typo', 'typso:'}, {'Typo', 'typt:'}, {'Typo', 'typto:'}, {'typu:', 'Typo'}, {'Typo', 'typuo:'}, {'Typo', 'typv:'}, {'Typo', 'typvo:'}, {'Typo', 'typw:'}, {'Typo', 'typwo:'}, {'typx:', 'Typo'}, {'Typo', 'typxo:'}, {'Typo', 'typy:'}, {'Typo', 'typyo:'}, {'Typo', 'typz:'}, {'Typo', 'typzo:'}, {'Typo', 'tyqo:'}, {'tyqpo:', 'Typo'}, {'Typo', 'tyro:'}, {'Typo', 'tyrpo:'}, {'Typo', 'tyso:'}, {'Typo', 'tyspo:'}, {'Typo', 'tyto:'}, {'Typo', 'tytpo:'}, {'Typo', 'tyuo:'}, {'tyupo:', 'Typo'}, {'Typo', 'tyvo:'}, {'Typo', 'tyvpo:'}, {'Typo', 'tywo:'}, {'Typo', 'tywpo:'}, {'Typo', 'tyxo:'}, {'Typo', 'tyxpo:'}, {'Typo', 'tyyo:'}, {'tyypo:', 'Typo'}, {'Typo', 'tyzo:'}, {'Typo', 'tyzpo:'}, {'to', 'tz:'}, {'the', 'tze:'}, {'the', 'tzhe:'}, {'to', 'tzo:'}, {'Typo', 'tzpo:'}, {'Typo', 'tzypo:'}, {'uadd:', 'add'}, {'uaid:', 'said'}, {'uants:', 'wants'}, {'ubetter:', 'Better'}, {'uchecking:', 'Checking'}, {'uclose:', 'Close'}, {'add', 'udd:'}, {'udocuments:', 'Documents'}, {'he', 'ue:'}, {'ueneration:', 'generation'}, {'Better', 'uetter:'}, {'uext:', 'next'}, {'of', 'uf:'}, {'ugeneration:', 'generation'}, {'he', 'the', 'uhe:'}, {'uhecking:', 'Checking'}, {'in', 'uin:'}, {'uinc:', 'Inc'}, {'is', 'uis:'}, {'Lose', 'Close', 'ulose:'}, {'Lost', 'ulost:'}, {'in', 'un:'}, {'unc:', 'Inc'}, {'next', 'unext:'}, {'uo:', 'to'}, {'uocuments:', 'Documents'}, {'uof:', 'of'}, {'uord:', 'word'}, {'uose:', 'Lose'}, {'Lost', 'uost:'}, {'uprocessors:', 'processors'}, {'urocessors:', 'processors'}, {'us:', 'is'}, {'usaid:', 'said'}, {'the', 'uthe:'}, {'to', 'uto:'}, {'utypo:', 'Typo'}, {'uwants:', 'wants'}, {'uword:', 'word'}, {'Typo', 'uypo:'}, {'add', 'vadd:'}, {'said', 'vaid:'}, {'vants:', 'wants'}, {'vbetter:', 'Better'}, {'vchecking:', 'Checking'}, {'Close', 'vclose:'}, {'vdd:', 'add'}, {'vdocuments:', 'Documents'}, {'he', 've:'}, {'veneration:', 'generation'}, {'vetter:', 'Better'}, {'vext:', 'next'}, {'vf:', 'of'}, {'vgeneration:', 'generation'}, {'vhe:', 'he', 'the'}, {'Checking', 'vhecking:'}, {'in', 'vin:'}, {'vinc:', 'Inc'}, {'is', 'vis:'}, {'Lose', 'vlose:', 'Close'}, {'Lost', 'vlost:'}, {'in', 'vn:'}, {'vnc:', 'Inc'}, {'next', 'vnext:'}, {'to', 'vo:'}, {'Documents', 'vocuments:'}, {'vof:', 'of'}, {'vord:', 'word'}, {'vose:', 'Lose'}, {'Lost', 'vost:'}, {'vprocessors:', 'processors'}, {'vrocessors:', 'processors'}, {'is', 'vs:'}, {'said', 'vsaid:'}, {'the', 'vthe:'}, {'to', 'vto:'}, {'Typo', 'vtypo:'}, {'wants', 'vwants:'}, {'vword:', 'word'}, {'Typo', 'vypo:'}, {'wants', 'waants:'}, {'wants', 'waats:'}, {'wabnts:', 'wants'}, {'wants', 'wabts:'}, {'wants', 'wacnts:'}, {'wants', 'wacts:'}, {'wadd:', 'add'}, {'wants', 'wadnts:'}, {'wants', 'wadts:'}, {'wants', 'waents:'}, {'waets:', 'wants'}, {'wants', 'wafnts:'}, {'wants', 'wafts:'}, {'wants', 'wagnts:'}, {'wants', 'wagts:'}, {'wahnts:', 'wants'}, {'wants', 'wahts:'}, {'said', 'waid:'}, {'wants', 'waints:'}, {'wants', 'waits:'}, {'wants', 'wajnts:'}, {'wajts:', 'wants'}, {'wants', 'waknts:'}, {'wants', 'wakts:'}, {'walnts:', 'wants'}, {'wants', 'walts:'}, {'wamnts:', 'wants'}, {'wants', 'wamts:'}, {'wants', 'wanas:'}, {'wanats:', 'wants'}, {'wanbs:', 'wants'}, {'wanbts:', 'wants'}, {'wants', 'wancs:'}, {'wants', 'wancts:'}, {'wands:', 'wants'}, {'wandts:', 'wants'}, {'wanes:', 'wants'}, {'wanets:', 'wants'}, {'wants', 'wanfs:'}, {'wanfts:', 'wants'}, {'wants', 'wangs:'}, {'wangts:', 'wants'}, {'wants', 'wanhs:'}, {'wanhts:', 'wants'}, {'wants', 'wanis:'}, {'wants', 'wanits:'}, {'wanjs:', 'wants'}, {'wanjts:', 'wants'}, {'wanks:', 'wants'}, {'wants', 'wankts:'}, {'wants', 'wanls:'}, {'wanlts:', 'wants'}, {'wants', 'wanms:'}, {'wanmts:', 'wants'}, {'wanns:', 'wants'}, {'wannts:', 'wants'}, {'wants', 'wanos:'}, {'wanots:', 'wants'}, {'wanps:', 'wants'}, {'wants', 'wanpts:'}, {'wants', 'wanqs:'}, {'wants', 'wanqts:'}, {'wants', 'wanrs:'}, {'wants', 'wanrts:'}, {'wants', 'wans:'}, {'wants', 'wanss:'}, {'wants', 'wanst:'}, {'wants', 'wansts:'}, {'wants', 'want:'}, {'wants', 'wanta:'}, {'wantas:', 'wants'}, {'wants', 'wantb:'}, {'wants', 'wantbs:'}, {'wants', 'wantc:'}, {'wants', 'wantcs:'}, {'wantd:', 'wants'}, {'wants', 'wantds:'}, {'wante:', 'wants'}, {'wants', 'wantes:'}, {'wants', 'wantf:'}, {'wantfs:', 'wants'}, {'wantg:', 'wants'}, {'wantgs:', 'wants'}, {'wanth:', 'wants'}, {'wants', 'wanths:'}, {'wants', 'wanti:'}, {'wantis:', 'wants'}, {'wants', 'wantj:'}, {'wants', 'wantjs:'}, {'wants', 'wantk:'}, {'wants', 'wantks:'}, {'wants', 'wantl:'}, {'wants', 'wantls:'}, {'wants', 'wantm:'}, {'wants', 'wantms:'}, {'wantn:', 'wants'}, {'wants', 'wantns:'}, {'wants', 'wanto:'}, {'wantos:', 'wants'}, {'wants', 'wantp:'}, {'wants', 'wantps:'}, {'wants', 'wantq:'}, {'wants', 'wantqs:'}, {'wants', 'wantr:'}, {'wants', 'wantrs:'}, {'wants', 'wantss:'}, {'wantt:', 'wants'}, {'wantts:', 'wants'}, {'wants', 'wantu:'}, {'wants', 'wantus:'}, {'wants', 'wantv:'}, {'wantvs:', 'wants'}, {'wantw:', 'wants'}, {'wantws:', 'wants'}, {'wants', 'wantx:'}, {'wants', 'wantxs:'}, {'wants', 'wanty:'}, {'wants', 'wantys:'}, {'wants', 'wantz:'}, {'wantzs:', 'wants'}, {'wants', 'wanus:'}, {'wants', 'wanuts:'}, {'wants', 'wanvs:'}, {'wants', 'wanvts:'}, {'wanws:', 'wants'}, {'wants', 'wanwts:'}, {'wanxs:', 'wants'}, {'wants', 'wanxts:'}, {'wanys:', 'wants'}, {'wants', 'wanyts:'}, {'wanzs:', 'wants'}, {'wants', 'wanzts:'}, {'wants', 'waonts:'}, {'waord:', 'word'}, {'wants', 'waots:'}, {'wants', 'wapnts:'}, {'wapts:', 'wants'}, {'waqnts:', 'wants'}, {'wants', 'waqts:'}, {'ward:', 'word'}, {'warnts:', 'wants'}, {'wants', 'warts:'}, {'wants', 'wasnts:'}, {'wants', 'wasts:'}, {'watns:', 'wants'}, {'wants', 'watnts:'}, {'wats:', 'wants'}, {'wants', 'watts:'}, {'wants', 'waunts:'}, {'wauts:', 'wants'}, {'wavnts:', 'wants'}, {'wants', 'wavts:'}, {'wants', 'wawnts:'}, {'wawts:', 'wants'}, {'waxnts:', 'wants'}, {'waxts:', 'wants'}, {'waynts:', 'wants'}, {'wants', 'wayts:'}, {'waznts:', 'wants'}, {'wants', 'wazts:'}, {'wbants:', 'wants'}, {'Better', 'wbetter:'}, {'wants', 'wbnts:'}, {'wbord:', 'word'}, {'wbrd:', 'word'}, {'wcants:', 'wants'}, {'wchecking:', 'Checking'}, {'wclose:', 'Close'}, {'wants', 'wcnts:'}, {'wcord:', 'word'}, {'wcrd:', 'word'}, {'wdants:', 'wants'}, {'wdd:', 'add'}, {'wdnts:', 'wants'}, {'wdocuments:', 'Documents'}, {'wdord:', 'word'}, {'wdrd:', 'word'}, {'he', 'we:'}, {'wants', 'weants:'}, {'weneration:', 'generation'}, {'wants', 'wents:'}, {'weord:', 'word'}, {'werd:', 'word'}, {'wetter:', 'Better'}, {'wext:', 'next'}, {'wf:', 'of'}, {'wants', 'wfants:'}, {'wfnts:', 'wants'}, {'wford:', 'word'}, {'wfrd:', 'word'}, {'wants', 'wgants:'}, {'wgeneration:', 'generation'}, {'wgnts:', 'wants'}, {'wgord:', 'word'}, {'wgrd:', 'word'}, {'wants', 'whants:'}, {'he', 'the', 'whe:'}, {'Checking', 'whecking:'}, {'whnts:', 'wants'}, {'whord:', 'word'}, {'whrd:', 'word'}, {'wants', 'wiants:'}, {'in', 'win:'}, {'winc:', 'Inc'}, {'wints:', 'wants'}, {'wiord:', 'word'}, {'wird:', 'word'}, {'wis:', 'is'}, {'wants', 'wjants:'}, {'wjnts:', 'wants'}, {'wjord:', 'word'}, {'wjrd:', 'word'}, {'wants', 'wkants:'}, {'wants', 'wknts:'}, {'wkord:', 'word'}, {'wkrd:', 'word'}, {'wlants:', 'wants'}, {'wants', 'wlnts:'}, {'word', 'wlord:'}, {'Lose', 'Close', 'wlose:'}, {'Lost', 'wlost:'}, {'word', 'wlrd:'}, {'wants', 'wmants:'}, {'wants', 'wmnts:'}, {'wmord:', 'word'}, {'wmrd:', 'word'}, {'in', 'wn:'}, {'wants', 'wnants:'}, {'wnats:', 'wants'}, {'Inc', 'wnc:'}, {'wnext:', 'next'}, {'wants', 'wnnts:'}, {'wnord:', 'word'}, {'wnrd:', 'word'}, {'wants', 'wnts:'}, {'to', 'wo:'}, {'woad:', 'word'}, {'wants', 'woants:'}, {'woard:', 'word'}, {'wobd:', 'word'}, {'wobrd:', 'word'}, {'wocd:', 'word'}, {'wocrd:', 'word'}, {'Documents', 'wocuments:'}, {'wod:', 'word'}, {'wodd:', 'word'}, {'wodr:', 'word'}, {'wodrd:', 'word'}, {'woed:', 'word'}, {'word', 'woerd:'}, {'wof:', 'of'}, {'wofd:', 'word'}, {'word', 'wofrd:'}, {'wogd:', 'word'}, {'wogrd:', 'word'}, {'wohd:', 'word'}, {'wohrd:', 'word'}, {'woid:', 'word'}, {'woird:', 'word'}, {'wojd:', 'word'}, {'wojrd:', 'word'}, {'wokd:', 'word'}, {'wokrd:', 'word'}, {'wold:', 'word'}, {'wolrd:', 'word'}, {'womd:', 'word'}, {'womrd:', 'word'}, {'wond:', 'word'}, {'wonrd:', 'word'}, {'wants', 'wonts:'}, {'wood:', 'word'}, {'woord:', 'word'}, {'wopd:', 'word'}, {'woprd:', 'word'}, {'woqd:', 'word'}, {'woqrd:', 'word'}, {'word', 'wor:'}, {'wora:', 'word'}, {'word', 'worad:'}, {'worb:', 'word'}, {'worbd:', 'word'}, {'worc:', 'word'}, {'worcd:', 'word'}, {'word', 'wordd:'}, {'wore:', 'word'}, {'wored:', 'word'}, {'word', 'worf:'}, {'worfd:', 'word'}, {'worg:', 'word'}, {'worgd:', 'word'}, {'worh:', 'word'}, {'worhd:', 'word'}, {'wori:', 'word'}, {'worid:', 'word'}, {'worj:', 'word'}, {'word', 'worjd:'}, {'work:', 'word'}, {'workd:', 'word'}, {'worl:', 'word'}, {'world:', 'word'}, {'worm:', 'word'}, {'wormd:', 'word'}, {'worn:', 'word'}, {'wornd:', 'word'}, {'woro:', 'word'}, {'word', 'worod:'}, {'worp:', 'word'}, {'worpd:', 'word'}, {'worq:', 'word'}, {'worqd:', 'word'}, {'worr:', 'word'}, {'worrd:', 'word'}, {'wors:', 'word'}, {'worsd:', 'word'}, {'wort:', 'word'}, {'wortd:', 'word'}, {'woru:', 'word'}, {'worud:', 'word'}, {'word', 'worv:'}, {'worvd:', 'word'}, {'worw:', 'word'}, {'worwd:', 'word'}, {'worx:', 'word'}, {'worxd:', 'word'}, {'wory:', 'word'}, {'woryd:', 'word'}, {'worz:', 'word'}, {'worzd:', 'word'}, {'wosd:', 'word'}, {'wose:', 'Lose'}, {'wosrd:', 'word'}, {'Lost', 'wost:'}, {'wotd:', 'word'}, {'wotrd:', 'word'}, {'woud:', 'word'}, {'wourd:', 'word'}, {'wovd:', 'word'}, {'wovrd:', 'word'}, {'word', 'wowd:'}, {'wowrd:', 'word'}, {'woxd:', 'word'}, {'woxrd:', 'word'}, {'woyd:', 'word'}, {'woyrd:', 'word'}, {'word', 'wozd:'}, {'wozrd:', 'word'}, {'wants', 'wpants:'}, {'wpnts:', 'wants'}, {'wpord:', 'word'}, {'wprd:', 'word'}, {'wprocessors:', 'processors'}, {'wants', 'wqants:'}, {'wants', 'wqnts:'}, {'wqord:', 'word'}, {'wqrd:', 'word'}, {'wants', 'wrants:'}, {'wrd:', 'word'}, {'wants', 'wrnts:'}, {'wrocessors:', 'processors'}, {'wrod:', 'word'}, {'wrord:', 'word'}, {'wrrd:', 'word'}, {'is', 'ws:'}, {'said', 'wsaid:'}, {'wsants:', 'wants'}, {'wsnts:', 'wants'}, {'wsord:', 'word'}, {'wsrd:', 'word'}, {'wants', 'wtants:'}, {'the', 'wthe:'}, {'wtnts:', 'wants'}, {'to', 'wto:'}, {'wtord:', 'word'}, {'wtrd:', 'word'}, {'Typo', 'wtypo:'}, {'wuants:', 'wants'}, {'wants', 'wunts:'}, {'wuord:', 'word'}, {'wurd:', 'word'}, {'wants', 'wvants:'}, {'wants', 'wvnts:'}, {'wvord:', 'word'}, {'wvrd:', 'word'}, {'wwants:', 'wants'}, {'wants', 'wwnts:'}, {'wword:', 'word'}, {'wwrd:', 'word'}, {'wants', 'wxants:'}, {'wxnts:', 'wants'}, {'wxord:', 'word'}, {'wxrd:', 'word'}, {'wants', 'wyants:'}, {'wynts:', 'wants'}, {'wyord:', 'word'}, {'wypo:', 'Typo'}, {'wyrd:', 'word'}, {'wants', 'wzants:'}, {'wants', 'wznts:'}, {'word', 'wzord:'}, {'wzrd:', 'word'}, {'xadd:', 'add'}, {'said', 'xaid:'}, {'wants', 'xants:'}, {'Better', 'xbetter:'}, {'xchecking:', 'Checking'}, {'xclose:', 'Close'}, {'xdd:', 'add'}, {'Documents', 'xdocuments:'}, {'xe:', 'he'}, {'xeneration:', 'generation'}, {'Better', 'xetter:'}, {'next', 'xext:'}, {'xf:', 'of'}, {'xgeneration:', 'generation'}, {'xhe:', 'he', 'the'}, {'xhecking:', 'Checking'}, {'in', 'xin:'}, {'xinc:', 'Inc'}, {'is', 'xis:'}, {'Lose', 'xlose:', 'Close'}, {'Lost', 'xlost:'}, {'in', 'xn:'}, {'xnc:', 'Inc'}, {'xnext:', 'next'}, {'to', 'xo:'}, {'xocuments:', 'Documents'}, {'xof:', 'of'}, {'xord:', 'word'}, {'xose:', 'Lose'}, {'Lost', 'xost:'}, {'xprocessors:', 'processors'}, {'processors', 'xrocessors:'}, {'xs:', 'is'}, {'xsaid:', 'said'}, {'xthe:', 'the'}, {'xto:', 'to'}, {'Typo', 'xtypo:'}, {'wants', 'xwants:'}, {'xword:', 'word'}, {'xypo:', 'Typo'}, {'yadd:', 'add'}, {'said', 'yaid:'}, {'wants', 'yants:'}, {'Better', 'ybetter:'}, {'ychecking:', 'Checking'}, {'yclose:', 'Close'}, {'ydd:', 'add'}, {'ydocuments:', 'Documents'}, {'he', 'ye:'}, {'yeneration:', 'generation'}, {'Better', 'yetter:'}, {'yext:', 'next'}, {'of', 'yf:'}, {'ygeneration:', 'generation'}, {'yhe:', 'he', 'the'}, {'yhecking:', 'Checking'}, {'yin:', 'in'}, {'Inc', 'yinc:'}, {'yis:', 'is'}, {'ylose:', 'Lose', 'Close'}, {'Lost', 'ylost:'}, {'yn:', 'in'}, {'Inc', 'ync:'}, {'next', 'ynext:'}, {'yo:', 'to'}, {'yocuments:', 'Documents'}, {'yof:', 'of'}, {'yord:', 'word'}, {'yose:', 'Lose'}, {'Lost', 'yost:'}, {'Typo', 'ypo:'}, {'yprocessors:', 'processors'}, {'yrocessors:', 'processors'}, {'is', 'ys:'}, {'ysaid:', 'said'}, {'ythe:', 'the'}, {'to', 'yto:'}, {'Typo', 'ytpo:'}, {'Typo', 'ytypo:'}, {'wants', 'ywants:'}, {'word', 'yword:'}, {'Typo', 'yypo:'}, {'add', 'zadd:'}, {'said', 'zaid:'}, {'zants:', 'wants'}, {'zbetter:', 'Better'}, {'zchecking:', 'Checking'}, {'Close', 'zclose:'}, {'add', 'zdd:'}, {'Documents', 'zdocuments:'}, {'he', 'ze:'}, {'zeneration:', 'generation'}, {'zetter:', 'Better'}, {'next', 'zext:'}, {'zf:', 'of'}, {'zgeneration:', 'generation'}, {'he', 'the', 'zhe:'}, {'zhecking:', 'Checking'}, {'zin:', 'in'}, {'zinc:', 'Inc'}, {'is', 'zis:'}, {'zlose:', 'Lose', 'Close'}, {'Lost', 'zlost:'}, {'zn:', 'in'}, {'Inc', 'znc:'}, {'next', 'znext:'}, {'zo:', 'to'}, {'Documents', 'zocuments:'}, {'of', 'zof:'}, {'zord:', 'word'}, {'Lose', 'zose:'}, {'Lost', 'zost:'}, {'zprocessors:', 'processors'}, {'zrocessors:', 'processors'}, {'is', 'zs:'}, {'zsaid:', 'said'}, {'the', 'zthe:'}, {'to', 'zto:'}, {'Typo', 'ztypo:'}, {'zwants:', 'wants'}, {'zword:', 'word'}, {'Typo', 'zypo:'}], but correct output = [{'lose', 'close:'}, {'the', 'he:'}, {'in:', 'is', 'inc'}, {'in', 'inc:'}, {'is:', 'in'}, {'lose:', 'close', 'lost'}, {'lost:', 'lose'}, {'he', 'the:'}]"]], "3215": [[false, "When inputs = 10\n1 2 7 3 8 9 4 5 10 6, output = [{'6'}], but correct output = [{'1'}]"]], "3216": [[-1, "Call-based runtime error or time limit exceeded error = ZeroDivisionError('Fraction(142857, 0)')Fraction(142857, 0)"]], "3217": [[false, "When inputs = 2\n0 0 0\n0 0 1, output = [{'34'}], but correct output = [{'10'}]"]], "3218": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3219": [[false, "When inputs = 1001, output = [], but correct output = [{'3'}]"]], "3220": [[-1, "Call-based runtime error or time limit exceeded error = ValueError('list.remove(x): x not in list')list.remove(x): x not in list"]], "3221": [[false, "When inputs = 7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000, output = [], but correct output = [{'49000000000070'}]"]], "3222": [[false, "When inputs = 4 4\n0 1\n1 0\n2 3\n3 2, output = [{'Yeah!'}], but correct output = [{'2'}, {'2'}, {'0'}, {'1'}, {'2'}, {'2'}, {'3'}]"]], "3223": [[false, "When inputs = 3\n1 1 2, output = [{'IMPOSSIBLE'}], but correct output = [{'POSSIBLE'}, {'3', '1'}, {'3', '2'}]"]], "3224": [[false, "When inputs = 0 0 0\n1 0 0\n0 1 0\n0 0 1, output = [{'0.0000000000', '0.5000000000'}], but correct output = [{'0.5'}]"]], "3225": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"'int' object is not iterable\")'int' object is not iterable"]], "3226": [[-1, "Call-based runtime error or time limit exceeded error = ValueError(\"invalid literal for int() with base 10: '1 2 7'\")invalid literal for int() with base 10: '1 2 7'"]], "3227": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"'NoneType' object is not callable\")'NoneType' object is not callable"]], "3228": [[false, "When inputs = 4 10 2\n0\n15\n30\n45, output = [{'-1'}], but correct output = [{'10'}]"]], "3229": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"'int' object is not iterable\")'int' object is not iterable"]], "3230": [[false, "When inputs = 4 4\n.XLX\n.X..\n...L\n.X.., output = [{'1'}], but correct output = [{'2'}]"]], "3231": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"'NoneType' object is not callable\")'NoneType' object is not callable"]], "3232": [[false, "When inputs = tralalal, output = [{'aallatlr'}], but correct output = [{'allatral'}]"]], "3233": [[false, "When inputs = 6\n3 2 1 6 4 5, output = [{'6'}], but correct output = [{'8'}]"]], "3234": [[false, "When inputs = 47, output = [{'3'}], but correct output = [{'1'}]"]], "3235": [[false, "When inputs = 4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20, output = [], but correct output = [{'0'}]"]], "3236": [[false, "When inputs = 5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5, output = [{'2'}], but correct output = [{'5'}]"]], "3237": [[false, "When inputs = 020302, output = [], but correct output = [{'7'}]"]], "3238": [[false, "When inputs = 8 10\n#.#..##..#\n####..####\n###.##....\n...#..####\n....##....\n.#.##..##.\n##########\n##########, output = [], but correct output = [{'3', '10', '1'}]"]], "3239": [[false, "When inputs = 50 0.125, output = [{'4.018697864'}], but correct output = [{'16.339203308'}]"]], "3240": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"'int' object is not iterable\")'int' object is not iterable"]], "3241": [[false, "When inputs = 3\n7 1\n3 2\n10 0, output = [{'-1'}], but correct output = [{'10.5'}]"]], "3242": [[false, "When inputs = 2 0.5\n2 0.5\n1 0.5, output = [{'0'}], but correct output = [{'1'}]"]], "3243": [[false, "When inputs = 3 0 3\n1 1 1, output = [{'yes'}], but correct output = [{'no'}]"]], "3244": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3245": [[false, "When inputs = 3\npython\np^ main.py\n^ -n 10, output = [{'python'}, {'main.py'}, {'-n', '10'}], but correct output = [{'python'}, {'python', 'main.py'}, {'-n', 'python', '10', 'main.py'}]"]], "3246": [[false, "When inputs = tihssnetnceemkaesprfecetsesne\n5\nmakes\nperfect\nsense\nsentence\nthis, output = [{'impossible'}], but correct output = [{'makes', 'perfect', 'sense', 'sentence', 'this'}]"]], "3247": [[false, "When inputs = 1 2, output = [], but correct output = [{'4'}]"]], "3248": [[true, ""]], "3249": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3250": [[false, "When inputs = 10 11, output = [{'no'}], but correct output = [{'yes'}]"]], "3251": [[false, "When inputs = 3\n3 4\n2 5\n1 6, output = [{'1'}, {'1', '6'}], but correct output = [{'3'}, {'1', '6'}, {'5', '2'}, {'4', '3'}]"]], "3252": [[-1, "Call-based runtime error or time limit exceeded error = NameError(\"name 'instances' is not defined\")name 'instances' is not defined"]], "3253": [[false, "When inputs = 3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99, output = [{'impossible'}], but correct output = [{'50'}]"]], "3254": [[false, "When inputs = 5.0, output = [{'5'}], but correct output = [{'1', '0'}]"]], "3255": [[false, "When inputs = 8 3 1\n1 7 8 2 6 4 3 5, output = [{'3'}], but correct output = [{'8'}]"]], "3256": [[false, "When inputs = 4 2\n2 3 4 1, output = [{'2'}], but correct output = [{'3'}]"]], "3257": [[false, "When inputs = 1 1 1.732050, output = [{'0.433013'}], but correct output = [{'1.732050808'}]"]], "3258": [[-1, "Call-based runtime error or time limit exceeded error = TimeoutException()"]], "3259": [[true, ""]], "3260": [[false, "When inputs = 1 7 1000000007, output = [{'2'}], but correct output = [{'1'}]"]], "3261": [[false, "When inputs = 10 10\n6, output = [{'1'}], but correct output = [{'5'}]"]], "3262": [[false, "When inputs = 4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 2\n1 2 1\n3 2 1, output = [{'1'}], but correct output = [{'2'}]"]], "3263": [[false, "When inputs = 4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120, output = [{'4'}], but correct output = [{'3'}]"]], "3264": [[false, "When inputs = 3, output = [{'3'}], but correct output = [{'5'}]"]], "3265": [[-1, "Call-based runtime error or time limit exceeded error = NotImplementedError('subtracting a sparse matrix from a nonzero scalar is not supported')subtracting a sparse matrix from a nonzero scalar is not supported"]], "3266": [[false, "When inputs = 2 1 1 0\n0 1 100000, output = [{'1', '100000', '2'}, {'100000', '1', '0'}], but correct output = [{'0', '2'}]"]], "3267": [[true, ""]], "3268": [[false, "When inputs = 13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a, output = [], but correct output = [{'2'}, {'c', '3'}, {'6', 'c'}]"]], "3269": [[false, "When inputs = 1 5, output = [{'4'}], but correct output = [{'40'}]"]], "3270": [[-2, "type 1 compilation error = invalid syntax (<string>, line 91)"]], "3271": [[false, "When inputs = 10 1, output = [{'10'}], but correct output = [{'9'}]"]], "3272": [[false, "When inputs = 5 5\n/.V.\\\n./.V.\n..#..\n.V.#.\n\\.V./, output = [{'2'}], but correct output = [{'3'}]"]], "3273": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3274": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"'NoneType' object is not callable\")'NoneType' object is not callable"]], "3275": [[-2, "type 1 compilation error = unexpected EOF while parsing (<string>, line 59)"]], "3276": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"'NoneType' object is not callable\")'NoneType' object is not callable"]], "3277": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3278": [[false, "When inputs = 3\n0 2\n1 2\n3 3, output = [{'2', '0'}], but correct output = [{'3', '2'}]"]], "3279": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3280": [[true, ""]], "3281": [[-1, "Call-based runtime error or time limit exceeded error = ZeroDivisionError('float division by zero')float division by zero"]], "3282": [[false, "When inputs = 37, output = [{'8'}, {'837', '237'}, {'937', '337'}, {'837', '537'}, {'637', '937'}, {'837', '237'}, {'837', '537'}, {'937', '337'}, {'637', '937'}], but correct output = [{'4'}, {'29', '8'}, {'9', '28'}, {'11', '26'}, {'15', '22'}]"]], "3283": [[false, "When inputs = 2 3 1, output = [{'3.125'}], but correct output = [{'3.5'}]"]], "3284": [[false, "When inputs = 1 5 1 5, output = [{'15'}], but correct output = [{'19'}]"]], "3285": [[false, "When inputs = 1 5, output = [{'5'}], but correct output = [{'4'}]"]], "3286": [[false, "When inputs = car, output = [{'4'}], but correct output = [{'1'}]"]], "3287": [[false, "When inputs = 4\n0 2 0 1, output = [{'1'}], but correct output = [{'8'}]"]], "3288": [[false, "When inputs = 2 650, output = [{'cb'}], but correct output = [{'zyz'}]"]], "3289": [[false, "When inputs = 6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0, output = [{'0'}], but correct output = [{'4'}]"]], "3290": [[false, "When inputs = 2 4 3\n3 4 5 7\n1 2 10, output = [{'1'}], but correct output = [{'0'}]"]], "3291": [[false, "When inputs = 2 3\n3 2, output = [{'199'}, {'1', '-1'}, {'2', '-1'}, {'2', '1'}, {'1', '3'}, {'2', '3'}, {'2', '4'}, {'4', '3'}, {'5', '3'}, {'5', '4'}, {'4', '6'}, {'5', '6'}, {'5', '7'}, {'7', '6'}, {'8', '6'}, {'7', '8'}, {'9', '7'}, {'9', '8'}, {'10', '8'}, {'10', '9'}, {'9', '11'}, {'10', '11'}, {'10', '12'}, {'12', '11'}, {'11', '13'}, {'12', '13'}, {'12', '14'}, {'14', '13'}, {'15', '13'}, {'15', '14'}, {'14', '16'}, {'15', '16'}, {'15', '17'}, {'17', '16'}, {'18', '16'}, {'18', '17'}, {'19', '17'}, {'18', '19'}, {'18', '20'}, {'19', '20'}, {'19', '21'}, {'21', '20'}, {'22', '20'}, {'21', '22'}, {'21', '23'}, {'22', '23'}, {'22', '24'}, {'23', '24'}, {'25', '23'}, {'25', '24'}, {'26', '24'}, {'25', '26'}, {'27', '25'}, {'27', '26'}, {'28', '26'}, {'27', '28'}, {'27', '29'}, {'29', '28'}, {'30', '28'}, {'30', '29'}, {'29', '31'}, {'30', '31'}, {'30', '32'}, {'31', '32'}, {'33', '31'}, {'33', '32'}, {'34', '32'}, {'33', '34'}, {'33', '35'}, {'34', '35'}, {'36', '34'}, {'36', '35'}, {'37', '35'}, {'36', '37'}, {'38', '36'}, {'38', '37'}, {'39', '37'}, {'38', '39'}, {'40', '38'}, {'40', '39'}, {'41', '39'}, {'40', '41'}, {'40', '42'}, {'41', '42'}, {'41', '43'}, {'43', '42'}, {'44', '42'}, {'44', '43'}, {'43', '45'}, {'44', '45'}, {'46', '44'}, {'46', '45'}, {'47', '45'}, {'46', '47'}, {'46', '48'}, {'48', '47'}, {'47', '49'}, {'48', '49'}, {'48', '50'}, {'50', '49'}, {'51', '49'}, {'51', '50'}, {'50', '52'}, {'51', '52'}, {'51', '53'}, {'52', '53'}, {'54', '52'}, {'54', '53'}, {'55', '53'}, {'54', '55'}, {'54', '56'}, {'56', '55'}, {'57', '55'}, {'57', '56'}, {'58', '56'}, {'57', '58'}, {'57', '59'}, {'58', '59'}, {'58', '60'}, {'59', '60'}, {'61', '59'}, {'61', '60'}, {'62', '60'}, {'62', '61'}, {'61', '63'}, {'62', '63'}, {'62', '64'}, {'64', '63'}, {'63', '65'}, {'64', '65'}, {'64', '66'}, {'66', '65'}, {'67', '65'}, {'66', '67'}, {'68', '66'}, {'68', '67'}, {'69', '67'}, {'68', '69'}, {'68', '70'}, {'69', '70'}, {'69', '71'}, {'71', '70'}, {'72', '70'}, {'72', '71'}, {'71', '73'}, {'72', '73'}, {'72', '74'}, {'73', '74'}, {'75', '73'}, {'75', '74'}, {'76', '74'}, {'76', '75'}, {'77', '75'}, {'77', '76'}, {'78', '76'}, {'78', '77'}, {'77', '79'}, {'78', '79'}, {'78', '80'}, {'80', '79'}, {'81', '79'}, {'81', '80'}, {'80', '82'}, {'81', '82'}, {'83', '81'}, {'83', '82'}, {'84', '82'}, {'83', '84'}, {'83', '85'}, {'84', '85'}, {'84', '86'}, {'86', '85'}, {'87', '85'}, {'87', '86'}, {'88', '86'}, {'88', '87'}, {'87', '89'}, {'88', '89'}, {'88', '90'}, {'90', '89'}, {'91', '89'}, {'90', '91'}, {'92', '90'}, {'92', '91'}, {'91', '93'}, {'92', '93'}, {'92', '94'}, {'94', '93'}, {'95', '93'}, {'95', '94'}, {'96', '94'}, {'96', '95'}, {'95', '97'}, {'96', '97'}, {'96', '98'}, {'98', '97'}, {'97', '99'}, {'98', '99'}, {'100', '98'}, {'100', '99'}, {'101', '99'}, {'100', '101'}, {'100', '102'}, {'102', '101'}, {'103', '101'}, {'102', '103'}, {'102', '104'}, {'103', '104'}, {'103', '105'}, {'105', '104'}, {'106', '104'}, {'106', '105'}, {'105', '107'}, {'106', '107'}, {'106', '108'}, {'108', '107'}, {'109', '107'}, {'109', '108'}, {'108', '110'}, {'109', '110'}, {'109', '111'}, {'111', '110'}, {'112', '110'}, {'111', '112'}, {'113', '111'}, {'113', '112'}, {'114', '112'}, {'113', '114'}, {'113', '115'}, {'114', '115'}, {'114', '116'}, {'116', '115'}, {'115', '117'}, {'116', '117'}, {'118', '116'}, {'118', '117'}, {'119', '117'}, {'119', '118'}, {'120', '118'}, {'119', '120'}, {'119', '121'}, {'120', '121'}, {'120', '122'}, {'122', '121'}, {'123', '121'}, {'122', '123'}, {'124', '122'}, {'124', '123'}, {'125', '123'}, {'124', '125'}, {'124', '126'}, {'126', '125'}, {'127', '125'}, {'127', '126'}, {'128', '126'}, {'127', '128'}, {'129', '127'}, {'129', '128'}, {'130', '128'}, {'130', '129'}, {'131', '129'}, {'131', '130'}, {'130', '132'}, {'131', '132'}, {'131', '133'}, {'132', '133'}, {'132', '134'}, {'133', '134'}, {'135', '133'}, {'135', '134'}, {'136', '134'}, {'135', '136'}, {'135', '137'}, {'136', '137'}, {'138', '136'}, {'138', '137'}, {'139', '137'}, {'138', '139'}, {'138', '140'}, {'139', '140'}, {'139', '141'}, {'141', '140'}, {'140', '142'}, {'141', '142'}, {'143', '141'}, {'143', '142'}, {'144', '142'}, {'144', '143'}, {'143', '145'}, {'144', '145'}, {'144', '146'}, {'146', '145'}, {'147', '145'}, {'146', '147'}, {'146', '148'}, {'148', '147'}, {'149', '147'}, {'149', '148'}, {'150', '148'}, {'149', '150'}, {'149', '151'}, {'150', '151'}, {'150', '152'}, {'152', '151'}, {'153', '151'}, {'152', '153'}, {'152', '154'}, {'154', '153'}, {'155', '153'}, {'155', '154'}, {'156', '154'}, {'155', '156'}, {'157', '155'}, {'157', '156'}, {'156', '158'}, {'157', '158'}, {'157', '159'}, {'159', '158'}, {'158', '160'}, {'159', '160'}, {'159', '161'}, {'161', '160'}, {'162', '160'}, {'162', '161'}, {'163', '161'}, {'163', '162'}, {'162', '164'}, {'163', '164'}, {'163', '165'}, {'165', '164'}, {'166', '164'}, {'166', '165'}, {'167', '165'}, {'167', '166'}, {'168', '166'}, {'167', '168'}, {'167', '169'}, {'168', '169'}, {'168', '170'}, {'170', '169'}, {'171', '169'}, {'171', '170'}, {'170', '172'}, {'171', '172'}, {'173', '171'}, {'173', '172'}, {'172', '174'}, {'173', '174'}, {'173', '175'}, {'174', '175'}, {'176', '174'}, {'176', '175'}, {'177', '175'}, {'177', '176'}, {'176', '178'}, {'177', '178'}, {'177', '179'}, {'179', '178'}, {'178', '180'}, {'179', '180'}, {'179', '181'}, {'181', '180'}, {'182', '180'}, {'182', '181'}, {'183', '181'}, {'182', '183'}, {'184', '182'}, {'184', '183'}, {'183', '185'}, {'184', '185'}, {'184', '186'}, {'185', '186'}, {'187', '185'}, {'187', '186'}, {'188', '186'}, {'188', '187'}, {'189', '187'}, {'188', '189'}, {'188', '190'}, {'189', '190'}, {'189', '191'}, {'191', '190'}, {'192', '190'}, {'191', '192'}, {'191', '193'}, {'192', '193'}, {'192', '194'}, {'194', '193'}, {'195', '193'}, {'195', '194'}, {'194', '196'}, {'195', '196'}, {'197', '195'}, {'197', '196'}, {'198', '196'}, {'197', '198'}, {'197', '199'}, {'199', '198'}, {'200', '198'}, {'199', '-1'}, {'-2', '199'}], but correct output = [{'1'}, {'-2', '-1'}]"]], "3292": [[false, "When inputs = 3\nIVO\nJASNA\nJOSIPA, output = [{'6'}], but correct output = [{'4'}]"]], "3293": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3294": [[-1, "Call-based runtime error or time limit exceeded error = ValueError('too many values to unpack (expected 3)')too many values to unpack (expected 3)"]], "3295": [[-1, "Call-based runtime error or time limit exceeded error = UnboundLocalError(\"local variable 'possibles' referenced before assignment\")local variable 'possibles' referenced before assignment"]], "3296": [[false, "When inputs = 3 2, output = [{'805306369'}], but correct output = [{'3'}]"]], "3297": [[-1, "Call-based runtime error or time limit exceeded error = TimeoutException()"]], "3298": [[false, "When inputs = 4\n0 1 2 3, output = [{'24'}], but correct output = [{'14'}]"]], "3299": [[-1, "Call-based runtime error or time limit exceeded error = NameError(\"name 'ans' is not defined\")name 'ans' is not defined"]], "3300": [[false, "When inputs = 2\n1 1\n1 1, output = [{'4.000'}], but correct output = [{'0.000'}]"]], "3301": [[false, "When inputs = 6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4, output = [{'4'}], but correct output = [{'3'}]"]], "3302": [[false, "When inputs = 4 2\n3 2, output = [{'impossible'}], but correct output = [{'0110'}, {'1101'}, {'1011'}, {'0001'}, {'0111'}, {'1100'}, {'1001'}, {'0000'}, {'0101'}, {'0011'}, {'1111'}, {'1010'}, {'0100'}, {'1000'}, {'0010'}, {'1110'}]"]], "3303": [[false, "When inputs = 10\n99, output = [{'0'}], but correct output = [{'1'}]"]], "3304": [[true, ""]], "3305": [[false, "When inputs = 9 3\nbeginning\n1 5\n4 8\n1 9, output = [{'7'}, {'8'}, {'12'}], but correct output = [{'5'}, {'11'}, {'16'}]"]], "3306": [[false, "When inputs = 3 4\n3 1\n2 2\n1 1, output = [{'7'}], but correct output = [{'2'}]"]], "3307": [[-1, "Call-based runtime error or time limit exceeded error = ZeroDivisionError('float division by zero')float division by zero"]], "3308": [[false, "When inputs = 5\n2 0\n1 1\n0 2\n-2 0\n0 -2, output = [{'135.7376336751'}], but correct output = [{'8.0000000000'}]"]], "3309": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3310": [[false, "When inputs = 3 3 2\n1 2 3, output = [{'10.750000000000'}], but correct output = [{'3.666666667'}]"]], "3311": [[true, ""]], "3312": [[false, "When inputs = 3 1 0 0 2\n1 2 2\n1 1 1, output = [{'1'}], but correct output = [{'0'}]"]], "3313": [[-1, "Call-based runtime error or time limit exceeded error = NameError(\"name 'v' is not defined\")name 'v' is not defined"]], "3314": [[false, "When inputs = ABC\nABC\nABC, output = [{'-1'}], but correct output = [{'2'}]"]], "3315": [[true, ""]], "3316": [[-1, "Call-based runtime error or time limit exceeded error = ValueError('k must be a non-negative integer')k must be a non-negative integer"]], "3317": [[-1, "Call-based runtime error or time limit exceeded error = KeyError('C')'C'"]], "3318": [[false, "When inputs = 4 3\n0\n0\n1, output = [{'1'}], but correct output = [{'2'}]"]], "3319": [[-1, "Call-based runtime error or time limit exceeded error = TimeoutException()"]], "3320": [[true, ""]], "3321": [[false, "When inputs = 6\n1 5 4 3 2 6\n1 2 5 4 3 6, output = [{'6'}, {'3'}, {'1'}, {'1'}, {'1'}, {'6'}], but correct output = [{'2'}]"]], "3322": [[false, "When inputs = 3 3 1\n1 30 2 50\n2 70 3 10\n3 20 1 80, output = [{'60'}], but correct output = [{'-1'}]"]], "3323": [[-1, "Call-based runtime error or time limit exceeded error = NameError(\"name 'min_A' is not defined\")name 'min_A' is not defined"]], "3324": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"'>' not supported between instances of 'str' and 'int'\")'>' not supported between instances of 'str' and 'int'"]], "3325": [[-1, "Call-based runtime error or time limit exceeded error = ZeroDivisionError('float division by zero')float division by zero"]], "3326": [[false, "When inputs = 3 3\n1 2 5\n7 6 4\n9 8 3, output = [{'9'}], but correct output = [{'49'}]"]], "3327": [[false, "When inputs = 3 6\n#.....\n....##\n###...\n6\nAT\nME\nDOG\nGOD\nVETO\nMAGIC, output = [{'#ATME.'}, {'ATME##'}, {'###AT.'}], but correct output = [{'#MAGIC'}, {'VETO##'}, {'###DOG'}]"]], "3328": [[false, "When inputs = 3 1\n2 7 6\n9 5 1\n4 3 8, output = [{'27'}], but correct output = [{'31'}]"]], "3329": [[-1, "Call-based runtime error or time limit exceeded error = NameError(\"name 'islice' is not defined\")name 'islice' is not defined"]], "3330": [[false, "When inputs = 3 1\n3 2 1\n1 2 3, output = [{'7.200'}], but correct output = [{'0.556'}]"]], "3331": [[false, "When inputs = 5 4 3 2, output = [{'0'}], but correct output = [{'3'}]"]], "3332": [[false, "When inputs = 4\n1 3 6\n2 5 8\n3 3 5\n5 3 6, output = [{'19'}], but correct output = [{'13'}]"]], "3333": [[false, "When inputs = 5.000000 5.000000\n4\n2.000000 9.000000\n14.000000 17.000000\n6.500000 3.000000\n14.000000 18.500000, output = [{'25.922205'}], but correct output = [{'31.500000'}]"]], "3334": [[false, "When inputs = 3\n4 4\n2, output = [{'impossible'}], but correct output = [{'2.13333333333333'}]"]], "3335": [[false, "When inputs = 15, output = [{'83'}], but correct output = [{'64'}]"]], "3336": [[false, "When inputs = 4\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer, output = [{'6'}], but correct output = [{'3'}]"]], "3337": [[-1, "Call-based runtime error or time limit exceeded error = KeyError('pop from an empty set')'pop from an empty set'"]], "3338": [[false, "When inputs = 6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0, output = [{'2'}], but correct output = [{'5'}]"]], "3339": [[false, "When inputs = 4 5\n1 2\n1 3\n1 4\n2 3\n2 4, output = [{'143'}], but correct output = [{'4'}]"]], "3340": [[false, "When inputs = 4\n1 2\n2 3\n3 4, output = [], but correct output = [{'2'}, {'3', '4'}, {'4', '2'}]"]], "3341": [[false, "When inputs = 2 2\n1 3\n2 1\n3 5\n7 2, output = [{'-6'}], but correct output = [{'5'}]"]], "3342": [[true, ""]], "3343": [[false, "When inputs = 4 3\n3 C\n2 C\n1 C, output = [{'SAFE'}], but correct output = [{'GHOST'}]"]], "3344": [[false, "When inputs = 2 3\n0.00 2.00, output = [{'1.000000000'}], but correct output = [{'2'}]"]], "3345": [[false, "When inputs = 2\n0 0\n10 0\n2\n30 0\n15 0, output = [{'5.0000'}], but correct output = [{'10'}]"]], "3346": [[false, "When inputs = 100 5\nW 0 200\nW 5 201\nE 95 1111\nE 95 1\nE 95 11, output = [{'2'}], but correct output = [{'1'}]"]], "3347": [[false, "When inputs = 5\n5 10\n6 15\n2 7\n3 3\n4 11, output = [{'5'}], but correct output = [{'4'}]"]], "3348": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"'NoneType' object is not callable\")'NoneType' object is not callable"]], "3349": [[-1, "Call-based runtime error or time limit exceeded error = ValueError('max() arg is an empty sequence')max() arg is an empty sequence"]], "3350": [[false, "When inputs = abrahellehhelleh, output = [{'2'}], but correct output = [{'12'}]"]], "3351": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3352": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3353": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"unsupported operand type(s) for +: 'NoneType' and 'int'\")unsupported operand type(s) for +: 'NoneType' and 'int'"]], "3354": [[-1, "Call-based runtime error or time limit exceeded error = ValueError('too many values to unpack (expected 2)')too many values to unpack (expected 2)"]], "3355": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3356": [[false, "When inputs = 4\n1 2\n2 3\n3 4, output = [{'5'}, {'1', '2'}, {'1', '4'}], but correct output = [{'2'}, {'3', '4'}, {'2', '4'}]"]], "3357": [[false, "When inputs = 4\n1 1\n2 2\n3 2\n4 1, output = [{'0.0000'}, {'0.0000'}, {'-2.0000'}, {'-2.5000'}], but correct output = [{'9.0000'}, {'12'}, {'12.00000'}, {'9.0'}]"]], "3358": [[false, "When inputs = 5, output = [{'ST', 'A'}, {'ST', 'X'}, {'A', 'PH'}, {'PH', 'X'}, {'AD'}, {'AD'}, {'AD'}, {'AD'}, {'AD'}, {'Y', 'PL'}, {'Y', 'DI'}], but correct output = [{'ST', 'X'}, {'PH', 'X'}, {'PH', 'X'}, {'PH', 'X'}, {'AD'}, {'Y', 'PL'}, {'Y', 'PH'}, {'Y', 'PH'}, {'AD'}, {'AD'}, {'A', 'PL'}, {'A', 'DI'}]"]], "3359": [[false, "When inputs = 1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000, output = [{'10'}], but correct output = [{'2'}]"]], "3360": [[false, "When inputs = 5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome, output = [], but correct output = [{'abaaba'}, {'NONE'}, {'abbbbbbbbbbbbbbbbba'}, {'a'}]"]], "3361": [[false, "When inputs = 5\n4 5 0 2\n1 3 7\n2 0\n4, output = [{'9223372036854775807'}], but correct output = [{'4'}]"]], "3362": [[false, "When inputs = 2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG, output = [{'NO', 'WAY'}], but correct output = [{'GO', 'IT', 'FOR'}]"]], "3363": [[false, "When inputs = 5 900\n800 700 400 300 200, output = [{'2500'}], but correct output = [{'2243'}]"]], "3364": [[-1, "Call-based runtime error or time limit exceeded error = NameError(\"name 'N' is not defined\")name 'N' is not defined"]], "3365": [[false, "When inputs = 5 3\n10 11 12 13 14, output = [{'3'}], but correct output = [{'0'}]"]], "3366": [[true, ""]], "3367": [[false, "When inputs = 4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?, output = [{'21.5677083333'}], but correct output = [{'2.0000000000'}]"]], "3368": [[-1, "Call-based runtime error or time limit exceeded error = EOFError('EOF when reading a line')EOF when reading a line"]], "3369": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3370": [[true, ""]], "3371": [[-1, "Call-based runtime error or time limit exceeded error = NameError(\"name 'Y' is not defined\")name 'Y' is not defined"]], "3372": [[false, "When inputs = 4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1, output = [], but correct output = [{'impossible'}]"]], "3373": [[true, ""]], "3374": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('pop from empty list')pop from empty list"]], "3375": [[false, "When inputs = 4 5\n1 2\n1 3\n2 3\n1 4\n2 4, output = [{'0'}], but correct output = [{'5'}]"]], "3376": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3377": [[false, "When inputs = 5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5, output = [{'-1'}], but correct output = [{'6'}, {'1'}, {'2'}, {'3'}, {'1'}, {'4'}, {'5'}]"]], "3378": [[false, "When inputs = 2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5, output = [{'0'}], but correct output = [{'10'}]"]], "3379": [[false, "When inputs = 4 3\n0 1\n1 2\n2 3, output = [{'4'}], but correct output = [{'1'}]"]], "3380": [[false, "When inputs = 4, output = [{'1.0000000000'}], but correct output = [{'0.962962962963'}]"]], "3381": [[false, "When inputs = 3, output = [{'0'}, {'0', '40000000'}, {'0', '10000000'}], but correct output = [{'0'}, {'0', '40000000'}, {'0', '40000000'}]"]], "3382": [[-1, "Call-based runtime error or time limit exceeded error = AttributeError(\"'list' object has no attribute 'startswith'\")'list' object has no attribute 'startswith'"]], "3383": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3384": [[false, "When inputs = 13, output = [], but correct output = [{'12', '14'}]"]], "3385": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"'NoneType' object is not callable\")'NoneType' object is not callable"]], "3386": [[false, "When inputs = 2 3, output = [{'-1'}], but correct output = [{'1'}, {'2'}, {'3', '1'}, {'1', '2'}, {'1', '2'}, {'3', '2'}]"]], "3387": [[false, "When inputs = 3 10\n0 1 1000\n2 8 2\n2 8 1, output = [{'1.00000000'}, {'2.00000000'}, {'2.00000000'}], but correct output = [{'1.00000000'}, {'6.00000000'}, {'3.00000000'}]"]], "3388": [[false, "When inputs = 3\n3 3 2, output = [{'0'}], but correct output = [{'1'}]"]], "3389": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('string index out of range')string index out of range"]], "3390": [[false, "When inputs = 7 7\n1 2\n2 3\n3 4\n4 5\n5 2\n4 6\n5 7, output = [{'1'}], but correct output = [{'6'}]"]], "3391": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3392": [[false, "When inputs = 3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3, output = [{'3'}], but correct output = [{'7'}]"]], "3393": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('index out of range')index out of range"]], "3394": [[false, "When inputs = 4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6, output = [{'1'}], but correct output = [{'6'}]"]], "3395": [[false, "When inputs = 3 1 1\n2\n3\n1 2\n2 3 1\n1 1, output = [{'1'}], but correct output = [{'2'}]"]], "3396": [[false, "When inputs = 3\n250 250\n500 500\n250 750, output = [{'500.00'}], but correct output = [{'603.55'}]"]], "3397": [[false, "When inputs = 3 3\n100 20 30\n10 90 80\n99 90 98, output = [{'11'}], but correct output = [{'12'}]"]], "3398": [[-1, "Call-based runtime error or time limit exceeded error = EOFError('EOF when reading a line')EOF when reading a line"]], "3399": [[false, "When inputs = 3 4\n2211\n1112\n1112, output = [{'impossible'}], but correct output = [{'AAAA'}, {'...A'}, {'....'}, {'BB..'}, {'BBBB'}, {'...B'}, {'....'}, {'...C'}, {'CCCC'}]"]], "3400": [[false, "When inputs = 3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3, output = [{'1'}], but correct output = [{'9'}]"]], "3401": [[false, "When inputs = 6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5, output = [{'0.000000'}], but correct output = [{'20.396078'}]"]], "3402": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3403": [[false, "When inputs = 5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n4\nrobi\nhobi\nhobit\nrakija, output = [], but correct output = [{'12'}, {'10'}, {'16'}, {'7'}]"]], "3404": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('string index out of range')string index out of range"]], "3405": [[-1, "Call-based runtime error or time limit exceeded error = ValueError(\"invalid literal for int() with base 10: '.62'\")invalid literal for int() with base 10: '.62'"]], "3406": [[false, "When inputs = 4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3, output = [{'9'}], but correct output = [{'4'}]"]], "3407": [[-1, "Call-based runtime error or time limit exceeded error = NameError(\"name 'node' is not defined\")name 'node' is not defined"]], "3408": [[false, "When inputs = 3 3\naaa\nabc\naba\na*a\naaa*\n*aaa, output = [{'1'}, {'0'}, {'7'}], but correct output = [{'2'}, {'1'}, {'1'}]"]], "3409": [[-2, "type 1 compilation error = invalid syntax (<string>, line 32)"]], "3410": [[false, "When inputs = 5\n2 0\n0 2\n-2 0\n0 -2\n2 2, output = [{'84'}], but correct output = [{'72'}]"]], "3411": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"'int' object is not iterable\")'int' object is not iterable"]], "3412": [[false, "When inputs = 1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6, output = [{'1.0'}], but correct output = [{'3.000000000'}]"]], "3413": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"unhashable type: 'list'\")unhashable type: 'list'"]], "3414": [[false, "When inputs = 3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2, output = [{'3.141592653589793'}], but correct output = [{'6.283185'}]"]], "3415": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('pop from empty list')pop from empty list"]], "3416": [[false, "When inputs = 4 4\n1 2\n1 3\n2 4\n3 4, output = [{'1'}, {'4'}], but correct output = [{'1'}, {'2', '3', '4', '1'}]"]], "3417": [[false, "When inputs = 2 1\n1 2, output = [{'0'}], but correct output = [{'1'}]"]], "3418": [[false, "When inputs = 2, output = [{'40'}], but correct output = [{'45'}]"]], "3419": [[true, ""]], "3420": [[-1, "Call-based runtime error or time limit exceeded error = ValueError('too many values to unpack (expected 2)')too many values to unpack (expected 2)"]], "3421": [[false, "When inputs = 4\n0110011, output = [{'1', '3'}], but correct output = [{'6', '2'}]"]], "3422": [[false, "When inputs = 3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12, output = [{'0', '4'}, {'----'}], but correct output = [{'3', '4'}, {'2123'}, {'1012'}, {'2123'}, {'----'}, {'2233'}, {'2233'}, {'1111'}]"]], "3423": [[true, ""]], "3424": [[false, "When inputs = 32 20, output = [{'10'}], but correct output = [{'16'}]"]], "3425": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('string index out of range')string index out of range"]], "3426": [[-1, "Call-based runtime error or time limit exceeded error = EOFError('EOF when reading a line')EOF when reading a line"]], "3427": [[-1, "Call-based runtime error or time limit exceeded error = NameError(\"name 'sze' is not defined\")name 'sze' is not defined"]], "3428": [[true, ""]], "3429": [[false, "When inputs = 2 1 1 3 2\n2 5 1, output = [{'0.0'}], but correct output = [{'2.000000'}]"]], "3430": [[-1, "Call-based runtime error or time limit exceeded error = NameError(\"name 'parent' is not defined\")name 'parent' is not defined"]], "3431": [[true, ""]], "3432": [[false, "When inputs = 3\n2 8\n3 1\n1 4, output = [{'8'}, {'3'}, {'4'}], but correct output = [{'10'}, {'10'}, {'9'}]"]], "3433": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"'NoneType' object is not callable\")'NoneType' object is not callable"]], "3434": [[false, "When inputs = 1 2 2\n2\n1 1, output = [{'0.0000000000'}], but correct output = [{'0.3333333333'}]"]], "3435": [[false, "When inputs = 10\n1, output = [{'1024'}], but correct output = [{'1023'}]"]], "3436": [[false, "When inputs = 2 2, output = [], but correct output = [{'6'}]"]], "3437": [[true, ""]], "3438": [[false, "When inputs = 1 2 3\n0\n0\n1, output = [{'4'}], but correct output = [{'2'}]"]], "3439": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3440": [[false, "When inputs = 5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300, output = [{'inf'}], but correct output = [{'3100'}]"]], "3441": [[false, "When inputs = 5 7\n3 2\n4 0\n3 1\n0 3\n4 2\n1 0\n3 4, output = [{'0'}], but correct output = [{'2'}]"]], "3442": [[false, "When inputs = 1 10, output = [{'0'}], but correct output = [{'10'}]"]], "3443": [[-1, "Call-based runtime error or time limit exceeded error = ZeroDivisionError('float division by zero')float division by zero"]], "3444": [[-1, "Call-based runtime error or time limit exceeded error = TypeError('list indices must be integers or slices, not float')list indices must be integers or slices, not float"]], "3445": [[false, "When inputs = 6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10, output = [{'3'}], but correct output = [{'7'}]"]], "3446": [[-1, "Call-based runtime error or time limit exceeded error = ValueError('not enough values to unpack (expected 2, got 1)')not enough values to unpack (expected 2, got 1)"]], "3447": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3448": [[true, ""]], "3449": [[false, "When inputs = 9\n1\n6 6\n333333\n300003\n300003\n300003\n300003\n333333, output = [{'660'}], but correct output = [{'176'}]"]], "3450": [[false, "When inputs = 5, output = [{'120'}], but correct output = [{'12'}]"]], "3451": [[false, "When inputs = 4 1\n((()\n480\n617\n-570\n928, output = [{'?'}], but correct output = [{'480'}]"]], "3452": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3453": [[false, "When inputs = 5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2, output = [{'0'}], but correct output = [{'29', '39', '35', '36', '27'}]"]], "3454": [[false, "When inputs = 3 3\n3 2 1, output = [{'0', '6'}], but correct output = [{'672', '0'}]"]], "3455": [[-1, "Call-based runtime error or time limit exceeded error = ValueError(\"Unknown format code 'f' for object of type 'str'\")Unknown format code 'f' for object of type 'str'"]], "3456": [[false, "When inputs = 3\n5 3 4, output = [{'2'}], but correct output = [{'3'}]"]], "3457": [[false, "When inputs = 7 2 3, output = [{'1'}], but correct output = [{'9'}]"]], "3458": [[false, "When inputs = 4\n2 6 4 8, output = [{'12'}], but correct output = [{'14'}]"]], "3459": [[false, "When inputs = 2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets, output = [], but correct output = [{'fred', 'jetsons'}, {'jets', 'john'}, {'rockets', 'ruth'}, {'fred', 'jetsons'}, {'jets', 'john'}, {'rockets', 'ruth'}]"]], "3460": [[false, "When inputs = 3\n4 3\n-10 9\n-2 3, output = [{'3', '1'}], but correct output = [{'2', '1'}]"]], "3461": [[false, "When inputs = 4\n1 1 7\n3 2 3\n5 1 4\n6 10 10, output = [], but correct output = [{'2.125'}]"]], "3462": [[true, ""]], "3463": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3464": [[false, "When inputs = 0 49.9, output = [{'0.501'}], but correct output = [{'0.0'}]"]], "3465": [[false, "When inputs = 4\n1 2\n2 3\n3 1\n4 1, output = [{'1'}, {'2'}, {'3'}, {'4'}], but correct output = [{'1', '4'}, {'1', '2'}, {'2', '3'}, {'1', '3'}]"]], "3466": [[false, "When inputs = 6 5\n2 1 6 3 5 3\n1 2 5 3 5, output = [{'1999999999'}], but correct output = [{'1'}]"]], "3467": [[false, "When inputs = 2 1 10\n0 1 1 2 6, output = [{'impossible'}], but correct output = [{'3'}]"]], "3468": [[false, "When inputs = 2 100\n99 1\n1 99, output = [{'1'}, {'1'}], but correct output = [{'2'}, {'2', '1'}]"]], "3469": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3470": [[false, "When inputs = 3, output = [{'2'}, {'6', '7'}], but correct output = [{'8'}, {'15', '5', '1', '9', '11', '3', '7', '13'}]"]], "3471": [[-1, "Call-based runtime error or time limit exceeded error = TypeError('reduce() of empty sequence with no initial value')reduce() of empty sequence with no initial value"]], "3472": [[false, "When inputs = 2 1\n1 1 -2 0, output = [{'2'}], but correct output = [{'0'}]"]], "3473": [[false, "When inputs = 2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23, output = [{'49'}, {'2018', '19', '10'}, {'26', '2018', '10'}], but correct output = [{'194'}, {'2019', '25', '10'}, {'30', '2020', '10'}]"]], "3474": [[-1, "Call-based runtime error or time limit exceeded error = ZeroDivisionError('float division by zero')float division by zero"]], "3475": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"unsupported operand type(s) for -: 'int' and 'NoneType'\")unsupported operand type(s) for -: 'int' and 'NoneType'"]], "3476": [[-2, "type 1 compilation error = invalid syntax (<string>, line 95)"]], "3477": [[false, "When inputs = 3 2\n3 1 1, output = [{'1.0000'}], but correct output = [{'0.5'}]"]], "3478": [[false, "When inputs = 9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9, output = [{'impossible'}], but correct output = [{'5', '1', '4'}, {'7', '6', '2'}]"]], "3479": [[false, "When inputs = 11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000, output = [{'60000'}], but correct output = [{'13500'}]"]], "3480": [[-1, "Call-based runtime error or time limit exceeded error = EOFError('EOF when reading a line')EOF when reading a line"]], "3481": [[false, "When inputs = 3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33, output = [{'0'}], but correct output = [{'33'}]"]], "3482": [[false, "When inputs = 3\n20 15 10\n7 7\n30 2\n5 5\n15 25, output = [{'275'}], but correct output = [{'345'}]"]], "3483": [[false, "When inputs = 4\n1 2 4 7, output = [{'14.0', '14', '1'}], but correct output = [{'28', '14.0', '4', '21'}]"]], "3484": [[-1, "Call-based runtime error or time limit exceeded error = TimeoutException()"]], "3485": [[true, ""]], "3486": [[false, "When inputs = 4\n30\n3\n2\n45, output = [{'640'}], but correct output = [{'1'}]"]], "3487": [[-1, "Call-based runtime error or time limit exceeded error = TypeError(\"'Node' object is not subscriptable\")'Node' object is not subscriptable"]], "3488": [[-1, "Call-based runtime error or time limit exceeded error = ValueError('(2, 2) is not in list')(2, 2) is not in list"]], "3489": [[-1, "Call-based runtime error or time limit exceeded error = TimeoutException()"]], "3490": [[false, "When inputs = 2\n0 0 0\n0 1.5 3.14159, output = [{'ok'}], but correct output = [{'crash'}]"]], "3491": [[-1, "Call-based runtime error or time limit exceeded error = RecursionError('maximum recursion depth exceeded in comparison')maximum recursion depth exceeded in comparison"]], "3492": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('string index out of range')string index out of range"]], "3493": [[false, "When inputs = 3\nYYY\nNYY\nYNY, output = [{'0'}], but correct output = [{'2'}, {'3', '2', '1'}, {'3', '2', '1'}]"]], "3494": [[false, "When inputs = 5 5\n..x..\n....x\n.....\n.....\n.....\n4\n3 1\n5 3\n4 5\n3 5, output = [{'8'}, {'13'}, {'4'}, {'1'}], but correct output = [{'8'}, {'8'}, {'4'}, {'1'}]"]], "3495": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3496": [[-1, "Call-based runtime error or time limit exceeded error = IndexError('list index out of range')list index out of range"]], "3497": [[false, "When inputs = 6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5, output = [], but correct output = [{'0'}]"]], "3498": [[-1, "Call-based runtime error or time limit exceeded error = ValueError(\"invalid literal for int() with base 10: ''\")invalid literal for int() with base 10: ''"]], "3499": [[false, "When inputs = 2\nAA, output = [{'1'}], but correct output = [{'51'}]"]]}